----QUIT----2022-09-06T11:28:24.088812+02:00 Pharo9.0-SNAPSHOT-64bit-e1bb0fb.image priorSource: 0!----QUIT----2022-09-06T11:29:02.171389+02:00 Pharo9.0-SNAPSHOT-64bit-e1bb0fb.image priorSource: 0!Object subclass: #Casilla	instanceVariableNames: 'dueño color tema coordenadasX coordenadasY vecinos categoria pregunta boton'	classVariableNames: 'TamañoMatriz'	package: 'Paradigmas 2024'!!Casilla commentStamp: 'SuarezGonzalo 10/11/2024 13:33' prior: 0!Implementation Points!!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:06'!colorAmarillo	color:=Color yellow.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:05'!colorAzul	color:=Color blue.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/20/2024 12:30'!tamañoMatrizCasilla:xTamañoMatriz :=x.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:05'!colorRojo	color:=Color red.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 16:54'!dueñoInicial:valordueño := 'Jugador ',(valor asString).! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 17:01'!coordenadasXY: valorX and:valorY coordenadasX :=valorX.coordenadasY :=valorY.! !!Casilla methodsFor: 'initialization' stamp: 'Gonzalo 11/21/2024 16:01'!initialize color:=Color blue.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/26/2024 17:56'!coordenadasX: valorX Y:valorY coordenadasX :=valorX.coordenadasY :=valorY.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 16:53'!dueño:valor	dueño:=valor .! !!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:02'!coordenadasX	^coordenadasX  ! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 12:17'!boton:xboton:=x! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!categoria	^ categoria! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/20/2024 12:30'!tamañoMatrizCasilla^TamañoMatriz.! !!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:02'!coordenadasY	^coordenadasY   ! !!Casilla methodsFor: 'accessing'!asignarCategoria"1 --Hisoria		2--Deporte	3--Geografia 4--Arte 5--ciencia"|listaCategoria|listaCategoria := #('historia' 'deporte' 'geografia' 'arte' 'ciencia').categoria:=  (listaCategoria at: (1 to: listaCategoria size)atRandom)! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 12:18'!boton^boton.! !!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 16:46'!dueño^dueño! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!pregunta: anObject	pregunta := anObject! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 18:22'!vecinos: anObject	vecinos := anObject! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/14/2024 18:46'!llamarPregunta(categoria = 'historia' ) ifTrue:[pregunta elegirPregunta: 1].(categoria = 'deporte' ) ifTrue:[pregunta elegirPregunta: 2].(categoria = 'geografia' ) ifTrue:[pregunta elegirPregunta: 3].(categoria = 'arte' ) ifTrue:[pregunta elegirPregunta: 4].(categoria = 'ciencia' ) ifTrue:[pregunta elegirPregunta: 5].pregunta ponerPregunta.pregunta mostrarPregunta: categoria. ! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 18:22'!vecinos	^ vecinos! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!pregunta	^ pregunta! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!categoria: anObject	categoria := anObject! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 16:04'!color	^color.! !!Casilla methodsFor: 'add/remove' stamp: 'Gonzalo 11/20/2024 12:26'!encontrarVecinosvecinos:=(OrderedCollection new).(coordenadasX >1)ifTrue:[vecinos add:(Array with: (coordenadasX -1) with: coordenadasY )].(coordenadasX <TamañoMatriz )ifTrue:[vecinos add:(Array with: (coordenadasX +1) with: coordenadasY )].(coordenadasY >1)ifTrue:[vecinos add:(Array with: coordenadasX with: (coordenadasY -1))].(coordenadasY <TamañoMatriz )ifTrue:[vecinos add:(Array with: coordenadasX with: (coordenadasY +1))].! !Object subclass: #Duelos	instanceVariableNames: 'timer bandJugador1 perdedor categoria'	classVariableNames: ''	package: 'Paradigmas 2024'!!Duelos commentStamp: 'mica 11/5/2024 02:40' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages.- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	jugador1:		<Object>	jugador2:		<Object>    Implementation Points!!Duelos methodsFor: 'extra' stamp: 'mica 11/23/2024 19:46'!dueloExtra: powerUp|listaCat|listaCat := #('historia' 'deporte' 'geografia' 'arte' 'ciencia').(powerUp)ifTrue: [ self categoria: (listaCat at: ((1 to: listaCat size)atRandom))]! !!Duelos methodsFor: 'initialization' stamp: 'mica 11/24/2024 12:58'!iniciarDueloEntre: player1 y: player2 categoria: player2cat dueloExtra: arg1	| pregunta|	timer := Timer new.	timer j1name: player1 .	timer j2name: player2 .	pregunta := Pregunta new.	pregunta j1: player1.	pregunta j2: player2.	pregunta listaPreguntas: OrderedCollection new.	pregunta t: false.	bandJugador1 := true.	pregunta band1: true.	self timer iniciar: 1.	categoria := player2cat.		[ self timer fin ] whileFalse: [ 		self dueloExtra: arg1.		pregunta llamarPregunta: categoria.		pregunta resultado = 5 ifTrue: [ self pasarPregunta ].		pregunta resultado = 1 ifTrue: [ 			self pasarTurno:player1 a:player2.			pregunta band1: bandJugador1 ].		pregunta resultado = 2 ifTrue: [ 			Transcript				show: '------->>   INCORRECTO';				cr.			[ 			pregunta resultado = 1 | (pregunta resultado = 5)			| (pregunta resultado = 0) ] whileFalse: [ 				self timer timer_1 <= 0 | (self timer timer_2 <= 0) ifTrue: [ 					pregunta t: true ].				pregunta mostrarPregunta: self categoria ].			pregunta resultado = 5 ifTrue: [ self pasarPregunta ].			pregunta resultado = 1 ifTrue: [ 				self pasarTurno:player1 a:player2.				pregunta band1: bandJugador1 ] ].].Transcript show: 'PERDEDOR Player ',timer perdedor asString;					cr.(timer ventanas ventana_1) delete.(timer ventanas ventana_2) delete.(timer ventanas ventana_3) delete.(timer ventanas ventana_4) delete.self perdedor: timer perdedor! !!Duelos methodsFor: 'initialization' stamp: 'mica 11/23/2024 20:03'!pasarPreguntabandJugador1					ifTrue: [ 						self timer restarSegundos: 1. 						Transcript							show: '1';							cr.]					ifFalse: [ 						self timer restarSegundos: 2.						Transcript							show: '2';							cr.							]! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:57'!perdedor: anObject	perdedor := anObject! !!Duelos methodsFor: 'accessing' stamp: 'Gonzalo 11/23/2024 21:47'!pasarTurno:jugador1 a:jugador2bandJugador1						ifTrue: [ 							"UIManager default message:'Es el turno del ',jugador2 ."							Transcript								show: '1';								cr.						timer turno: 2.						bandJugador1 := false					]					ifFalse: [ 						"UIManager default message:'Es el turno del ',jugador1 ."						Transcript							show: '2';							cr.						timer turno: 1.						bandJugador1 := true.					]! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:19'!timer	^ timer! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:19'!timer: anObject	timer := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 19:16'!categoria: anObject	categoria := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:58'!perdedor	^ perdedor! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 19:16'!categoria	^ categoria! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:24'!bandJugador1: anObject	bandJugador1 := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:24'!bandJugador1	^ bandJugador1! !Object subclass: #Interfaz	instanceVariableNames: 'accionMouse ventana_1 ventana_2 ventana_3 ventana_4 label_1 label_2 label_3 label_4'	classVariableNames: ''	package: 'Paradigmas 2024'!!Interfaz commentStamp: 'Gonzalo 11/23/2024 18:13' prior: 0!- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	accionMouse:		<Object>    Implementation Points!!Interfaz methodsFor: 'initialization' stamp: 'mica 11/24/2024 12:28'!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1450)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/evangelion-cafe.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Interfaz methodsFor: 'initialization' stamp: 'mica 11/24/2024 12:30'!initializa| ventana boton |ventana := Morph new.ventana extent: 600@600; "Tamaño de la ventana"        color: Color white. "Color de fondo"boton := SimpleButtonMorph new.boton label: 'Presióname'; "Texto del botón"       target: [ Transcript show: '¡Botón presionado!!'; cr ]; "Acción al presionar"       actionSelector: #value; "El mensaje enviado al target"       position: 00@00; "Posición dentro de la ventana"       extent: 100@100. "Tamaño del botón"ventana addMorph: boton. "Añadir el botón a la ventana"ventana openInWorld. "Abrir la ventana en el escritorio"! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_1: anObject	label_1 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_4	^ label_4! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!ventana_4: anObject	ventana_4 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:27'!ventana_2: anObject	ventana_2 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:27'!ventana_1: anObject	ventana_1 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_4: anObject	label_4 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_1	^ label_1! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_3: anObject	label_3 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_3	^ label_3! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!ventana_3	^ ventana_3! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!ventana_3: anObject	ventana_3 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!ventana_4	^ ventana_4! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_2: anObject	label_2 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_2	^ label_2! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:27'!ventana_2	^ ventana_2! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:27'!ventana_1	^ ventana_1! !!Interfaz methodsFor: 'mostrar' stamp: 'mica 11/24/2024 12:33'!crearVentanaRota:anNumber	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.(anNumber =1 ) ifTrue: [  	    "Ventana 1: Izquierda"    ventana_4:= Morph  new.    ventana_4 color: Color green.    ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/pim.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 1450)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: 'Gamer Over'.    label_4 color: Color red.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_4 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_4 addMorph: label_4.    ventana_4 openInWorld.].(anNumber =2) ifTrue: [      "Ventana 2: Más a la derecha"    ventana_4 := Morph new.    ventana_4 color: Color green.	ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/pimDerecha.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: 'Gamer over'.    label_4 color: Color red.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_4 addMorph: label_4.    ventana_4 openInWorld.].! !Object subclass: #Jugador	instanceVariableNames: 'nombre casillas adversarios estado escudo cañon racha'	classVariableNames: ''	package: 'Paradigmas 2024'!!Jugador commentStamp: 'SuarezGonzalo 10/11/2024 17:10' prior: 0!Clase Jugador    Instance Variables	dueño:		<Object>	vecinos:		<Object>    Implementation Points!!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 20:40'!casillas^casillas.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/5/2024 17:07'!nombre^nombre.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/9/2024 19:32'!adversarios ^adversarios.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 21:03'!obtenerY:nroCasilla^((casillas at:nroCasilla )at:2)! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 21:03'!obtenerX:nroCasilla^((casillas at:nroCasilla )at:1)! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/9/2024 18:28'!eliminarCasilla: xcasillas remove: x ifAbsent: [ Error signal: 'Error la casilla no pertenece al jugador' ].! !!Jugador methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 10:38'!cañon	^cañon.! !!Jugador methodsFor: 'accessing' stamp: 'mica 11/16/2024 17:43'!estado	^ estado! !!Jugador methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 10:38'!escudo	^escudo.! !!Jugador methodsFor: 'initialize' stamp: 'SuarezGonzalo 10/31/2024 19:50'!crearJugador: nombreJugador x:x y:ynombre :=nombreJugador .casillas:= OrderedCollection new.casillas add:(Array with:x with:y)! !!Jugador methodsFor: 'initialize' stamp: 'Gonzalo 11/21/2024 20:54'!initialize 	nombre:='Unkown Player'.	escudo:=false.	cañon :=false.	racha:=0.	casillas:=OrderedCollection new.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/9/2024 13:26'!agregarCasilla: xcasillas add:x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 10/31/2024 19:43'!nombre:xnombre:=x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/5/2024 19:01'!adversarios: listaadversarios :=lista.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 10:42'!escudo:x	escudo:=x.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 21:09'!aumentarRacha racha:=racha +1.	(racha=5)ifTrue:[self agregarPowerUp].! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 10:41'!cañon:x	cañon:=x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 10/31/2024 19:44'!casilla: xcasillas add:x.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/23/2024 21:14'!agregarPowerUp	| respuesta |	racha :=0.UIManager default message:'El ',nombre ,' obtuvo una racha de 5 victorias'.respuesta := UIManager default    chooseFrom: #('Escudo' 'Cañon')    message: 'Elija PowerUp',String cr,'Escudo : proteje todas tus casillas ante una captura',String cr,'Cañon: permite atacar a cualquier casilla del tablero'.    "Procesar la respuesta"respuesta ifNotNil: [    (respuesta = 1)ifTrue: [ 			escudo:=true.	 ].	(respuesta = 2)ifTrue: [ 			cañon :=true.				 ].] ifNil: [    Transcript show: 'No se seleccionó ninguna opción'; cr.	self agregarPowerUp.].! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/9/2024 18:21'!estado:x	estado:=x.! !Object subclass: #Pregunta	instanceVariableNames: 'opcion preguntaAleatoria respuestas resultado correcta pregunta nroPregunta frase listaPreguntas j1 j2 band1 rtaPlayer t'	classVariableNames: ''	package: 'Paradigmas 2024'!!Pregunta commentStamp: 'mica 11/4/2024 21:42' prior: 0!-Toma la pregunta, opciones y respuesta correcta de una archivo .txt-Muestra la pregunta y permite al jugador contestar a traves de opciones.!!Pregunta methodsFor: 'control' stamp: 'mica 11/22/2024 02:06'!verificarPreguntaRepetidas|band| "QUE VERIFIQUE EN UNA INSTANCIA DE DUELO, NO EN TODO EL JUEGO"band:= true.[band] whileTrue:[ 	preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.	nroPregunta:= (preguntaAleatoria substrings) first.		(listaPreguntas isEmpty)	ifTrue:[		listaPreguntas add: nroPregunta. band:= false]	ifFalse: [ 		(listaPreguntas size = frase size) 						ifTrue:[ band:= false]						ifFalse:[ 							(listaPreguntas includes: nroPregunta)							ifFalse:[									listaPreguntas add: nroPregunta. band:= false]							ifTrue:[								band:= true							]						] 				]].! !!Pregunta methodsFor: 'control' stamp: 'mica 11/21/2024 22:08'!verificarPreguntaRepetidaEn: listaPreguntas|band| "QUE VERIFIQUE EN UNA INSTANCIA DE DUELO, NO EN TODO EL JUEGO"band:= true.[band] whileTrue:[ 	preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.	nroPregunta:= (preguntaAleatoria substrings) first.	(listaPreguntas isEmpty)	ifTrue:[		listaPreguntas add: nroPregunta. band:= false]	ifFalse: [ 		(listaPreguntas size = frase size) 						ifTrue:[ band:= false]						ifFalse:[ 							(listaPreguntas includes: nroPregunta)							ifFalse:[									listaPreguntas add: nroPregunta. band:= false]							ifTrue:[								band:= true							]						] 				]]! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/5/2024 18:09'!resultado	^ resultado! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 00:56'!listaPreguntas	^ listaPreguntas! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:55'!t	^ t! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:10'!rtaPlayer	^ rtaPlayer! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:35'!preguntaAleatoria	^ preguntaAleatoria! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:05'!band1: anObject	band1 := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 00:56'!listaPreguntas: anObject	listaPreguntas := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!correcta: anObject	correcta := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:02'!nroPregunta	^ nroPregunta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!pregunta: anObject	pregunta := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j1	^ j1! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!correcta	^ correcta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/5/2024 18:09'!resultado: anObject	resultado := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j2	^ j2! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:05'!band1	^ band1! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:02'!nroPregunta: anObject	nroPregunta := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:35'!preguntaAleatoria: anObject	preguntaAleatoria := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:55'!t: anObject	t := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!pregunta	^ pregunta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/3/2024 19:23'!opcion: anObject	opcion := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:48'!respuestas	^ respuestas! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/3/2024 19:18'!opcion	^ opcion! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:12'!frase: anObject	frase := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 09:39'!ponerPregunta:cat"toma la linea guardada en el atributo preguntaAleatoria""divide la linea en 3 partes: pregunta, opciones y respuesta correcta""ejemplo de linea .txt:" "¿Quién fue el primer presidente de los Estados Unidos?A) Abraham Lincoln%B) George Washington%C) Thomas Jefferson%D) John Adams% B"|restoPregunta opciones signo ops pregSubstring| ops:= ''.signo:='?'.pregunta:=''.respuestas := OrderedCollection new.nroPregunta:= (preguntaAleatoria substrings)first.correcta := (preguntaAleatoria substrings) last.  "Toma solo el ultimo string de toda la frase. Es la respuesta correcta"pregSubstring := (preguntaAleatoria) allButFirst: 3.pregunta:= ( pregSubstring copyUpToSubstring: signo). "copia solo la pregunta sin el signo '?'" restoPregunta := preguntaAleatoria copyAfterLast: $?. "copia el resto despues de '?'"opciones:= restoPregunta allButLast. "copia solo las opciones sin la respuesta ni pregunta"opciones do: [ :i| (i~= $%)ifTrue:[ops:=ops, (i asString)] "recorre la secuencia y acumula los caracteres hasta encontrar %"		ifFalse:[		respuestas add: (ops asString). "cuando llega a un % guarda lo acumulado en el atributo respuestas (definido como OrderedCollection)"		ops:=''.			].		].respuestas add: 'PASAR'.! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:10'!rtaPlayer: anObject	rtaPlayer := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j2: anObject	j2 := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:55'!llamarPregunta: categoria	(categoria = 'deporte' ) ifTrue:[self elegirPregunta: 1].(categoria = 'historia' ) ifTrue:[self elegirPregunta: 2].(categoria = 'arte' ) ifTrue:[self elegirPregunta: 3].(categoria = 'geografia' ) ifTrue:[self elegirPregunta: 4].(categoria = 'ciencia' ) ifTrue:[self elegirPregunta: 5].self ponerPregunta: categoria.self mostrarPregunta:categoria. ! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:48'!respuestas: anObject	respuestas := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:12'!frase	^ frase! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j1: anObject	j1 := anObject! !!Pregunta methodsFor: 'initialization' stamp: 'mica 11/22/2024 01:05'!elegirPregunta:categoriaCasilla"elige al azar una linea del archivo Pregunta.txt y la guarda en el atributo preguntaAleatoria "|archivo|archivo := FileSystem disk workingDirectory.(categoriaCasilla = 1)ifTrue:[frase:= ((archivo / 'DEPORTE.txt') contents lines)].(categoriaCasilla = 2)ifTrue:[frase:= ((archivo / 'HISTORIA.txt') contents lines)].(categoriaCasilla = 3)ifTrue:[frase:= ((archivo / 'ARTE.txt') contents lines)].(categoriaCasilla = 4)ifTrue:[frase:= ((archivo / 'GEOGRAFIA.txt') contents lines)].(categoriaCasilla = 5)ifTrue:[frase:= ((archivo / 'CIENCIA.txt') contents lines)].preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.self verificarPreguntaRepetidas! !!Pregunta methodsFor: 'showing' stamp: 'Gonzalo 11/23/2024 20:35'!mostrarPregunta: cat"muestra al jugador la pregunta con sus opciones.""guarda la respuesta en rtaPlayer y la compara con el parametro 'correcta'""segun coincida rtaPlayer y correcta, devuelve un cartelito de CORRECTO o INCORRECTO" |rtaNum nom|t ifTrue: [ self resultado: 0]ifFalse: [ band1 ifTrue: [nom:= j1]ifFalse: [ nom:= j2].Transcript show: 'Realizando pregunta ', (nroPregunta)  asString; cr.		rtaPlayer := UIManager default 		chooseFrom: respuestas 		message: nom,String cr,pregunta,'?'		title: 'DUELO',String cr,cat.Transcript show: 'rtaPlayer-->', rtaPlayer asString;cr.rtaNum := self opcionNumeroALetra: rtaPlayer.(correcta = (rtaNum))	ifTrue:[self resultado: 1]	ifFalse: [		(rtaPlayer = 5 )		ifTrue: [  			self resultado: 5]	 	ifFalse:[self resultado: 2]	].]	! !!Pregunta methodsFor: 'converting' stamp: 'mica 11/21/2024 02:41'!opcionNumeroALetra: a"convierte la respuesta del jugador en A, B, C, o D para luego""comparar con la respuesta correcta en mostrarPregunta:y:"|listaOpciones |listaOpciones := #('A' 'B' 'C' 'D' 0).^(listaOpciones at: a)! !Object subclass: #Tablero	instanceVariableNames: 'cantPlayers matriz listaJugadores tamañoMatriz ventana atacante defensor lista'	classVariableNames: ''	package: 'Paradigmas 2024'!!Tablero commentStamp: 'SuarezGonzalo 10/11/2024 13:25' prior: 0!Prueba para desarrollar una matriz con los casilleros    Instance Variables	cantPlayers:		<Object>    Implementation Points!!Tablero methodsFor: 'initialization' stamp: 'Gonzalo 11/23/2024 21:09'!iniciarJuego|nroAtacante listaAdversarios respuesta duelo contadorDuelos | contadorDuelos :=0.	duelo :=Duelos new.	self interfazCrearVentana.	Transcript show: '----INICIA EL JUEGO----';cr.	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.					[ cantPlayers > 1 ]whileTrue: [  	Transcript show:'Cantidad de Jugadores: ';show:cantPlayers;cr.	Transcript show: 'Jugador: ';show:(listaJugadores at:nroAtacante)nombre;show:' Selecciona a cual de las siguientes casillas atacar:';cr.	(contadorDuelos =10)ifTrue:[		nroAtacante:=(((self masCasillas at:1)nombre)findTokens:' ') last asInteger.		atacante :=listaJugadores at:nroAtacante.		defensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).		Transcript show: '----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----';cr.		self mensajeDueloExtra:(atacante nombre)y:(defensor dueño).		duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.		contadorDuelos :=0.		]	ifFalse:[			self mostrarAdversariosde: nroAtacante.	listaAdversarios:=(listaJugadores at:nroAtacante)adversarios.	Transcript show: '---COLUMNA---FILA---CATEGORIA---------JUGADOR---';cr.	1 to:(listaAdversarios size)do:[:i|		Transcript show: '      ';show:((listaAdversarios at:i)at:1);show:'      '.		Transcript show: ' ';show:((listaAdversarios at:i)at:2);show:' '.		Transcript show: '     ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:' '.		Transcript show: '   ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:' ';cr.		].	self coloresAtacante: (listaJugadores at:nroAtacante)casillas.	self coloresAdversarios: listaAdversarios.	self interfazCrearVentana.	self cargarBotones."INTERFAZ----------------------------------------------------------------"  	self coloresAzul.	respuesta  := UIManager default     chooseFrom: listaAdversarios    message: 'Elige un contrincante'    title: 'DUELO'.  ventana delete.defensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. contadorDuelos :=contadorDuelos +1.].(duelo perdedor = 1)ifTrue:[	self captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).	nroAtacante :=((defensor dueño)findTokens:' ') last asInteger.	atacante := listaJugadores at:nroAtacante	]ifFalse: [ 	self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).	 ].(contadorDuelos  < 10)ifTrue:[respuesta  := UIManager default     chooseFrom: #('Seguir Atacando' 'Pasar Turno')    message: '¿Desea seguir atacando?'    title: 'DUELO'.(respuesta = 2)ifTrue:[	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.	].]ifFalse:[nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.].].	 	 Transcript show: 'GAME OVER'; cr.	 Transcript show: 'El ganador es el jugador:';show:(atacante nombre); cr.! !!Tablero methodsFor: 'initialization' stamp: 'Gonzalo 11/20/2024 20:32'!tamañoDeLaMatriz|entrada numero|	entrada :=(UIManager default request:'Ingrese el tamaño de la matriz')asInteger.	entrada ifNotNil:[ 		(entrada isInteger)ifTrue: [  		numero:=entrada asInteger.]]	 ifNil: [ 		self error: 'Debe ingresar un numero valido'.		 ].	^numero.! !!Tablero methodsFor: 'initialization' stamp: 'Gonzalo 11/21/2024 15:32'!initialize 	|cont|	Transcript clear.	cont:=0.	tamañoMatriz:= self tamañoDeLaMatriz.	listaJugadores:= Array new:(tamañoMatriz * tamañoMatriz).		matriz := Array new: tamañoMatriz .	cantPlayers:=tamañoMatriz *tamañoMatriz .	1 to: tamañoMatriz  do:[:y| matriz at:y put:( Array new:tamañoMatriz)].	1 to: tamañoMatriz  do:[:y| 		1 to: tamañoMatriz  do:[:x| 			(matriz at:y) at:x put:(Casilla new).			(((matriz at:y)at:x))tamañoMatrizCasilla: tamañoMatriz.			cont:=cont+1.			((matriz at:y) at:x) dueñoInicial: (cont).			((matriz at:y) at:x) asignarCategoria.			(listaJugadores) at:cont put:(Jugador new).			(listaJugadores at:cont)nombre:(((matriz at:y) at:x)dueño).			(listaJugadores at:cont)agregarCasilla:(Array with:x with:y).			((matriz at:y) at:x) coordenadasX: x Y: y.			((matriz at:y) at:x) encontrarVecinos.						].		].	Transcript show: 'Se creo el tablero de forma exitosa';cr.! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 02:16'!lista: anObject	lista := anObject! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:24'!listaJugadores	^listaJugadores! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:53'!defensor: anObject	defensor := anObject! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:53'!defensor	^ defensor! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 02:16'!lista	^ lista! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 16:50'!matriz	^matriz.! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/5/2024 18:57'!casillaX:x Y:y^((matriz at:y)at:x)! !!Tablero methodsFor: 'interface'!interfazCrearVentana|boton|		ventana := Morph new.	ventana extent: (100*(tamañoMatriz) )@(100*(tamañoMatriz) ); "Tamaño de la ventana"        color: Color white. "Color de fondo"boton:=SimpleButtonMorph new.boton label:'X';	actionSelector: #delete;	target:ventana;	position:(tamañoMatriz *100)@(tamañoMatriz *100);	extent: 10@10.	ventana addMorph:boton.	ventana openInWorld. "Abrir la ventana en el escritorio"! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 16:14'!coloresAdversarios:listaAdversarios1 to: (listaAdversarios size)do:[:i|	(self casillaX: ((listaAdversarios at:i)at:1) Y: ((listaAdversarios at:i)at:2))colorRojo 	].! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/23/2024 20:49'!mensajeDueloExtra:jugadorA y:jugadorBUIManager default message:'Duelo entre titanes ',String cr,jugadorA,' se enfrentara al ',jugadorB.! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 19:40'!cargarBotones|texto |texto := TextMorph new.1 to: tamañoMatriz  do:[:i|	1 to: tamañoMatriz do:[:j|		(self casillaX: i Y:j)boton:SimpleButtonMorph new.		(self casillaX: i Y:j)boton label:'';  "Texto del botón"      		target: [ [ defensor:= self casillaX: i Y:j.self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: (defensor coordenadasX ) Y: (defensor coordenadasY)) ]]; "Acción al presionar"			color: ((self casillaX: i Y:j )color);    	  	actionSelector: #value; "El mensaje enviado al target"      		position: (100*(i-1))@(100*(j-1)); "Posición dentro de la ventana"      		extent: 100@100. "Tamaño del botón"		texto contents: ((self casillaX: i Y:j)dueño), String crlf, ((self casillaX: i Y:j)categoria) ,String crlf,     'Posición: (', i asString, ',', j asString, ')'; "Texto en dos líneas"       	color: Color black;       	font: (TextStyle default fontAt: 12);       	center: (self casillaX: i Y:j)boton bounds center. "Centrar el texto dentro del botón"		(self casillaX: i Y:j )boton addMorph: texto. "Añadir el texto al botón"		ventana addMorph:(self casillaX: i Y:j)boton . "Añadir el botón a la ventana"		texto:=TextMorph new.		].	]. ! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 16:19'!coloresAtacante:listaAtacante1 to: (listaAtacante  size)do:[:i|	(self casillaX: ((listaAtacante  at:i)at:1) Y: ((listaAtacante at:i)at:2))colorAmarillo 	].! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 16:38'!coloresAzul	1 to:tamañoMatriz  do:[:i|		1 to:tamañoMatriz  do:[:j|		 (self casillaX: i Y:j)colorAzul. 		]. 		] ! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/20/2024 21:20'!buscarJugador	| indice colection valor |	colection := (1 to: tamañoMatriz * tamañoMatriz) asOrderedCollection.	[ 	indice := colection at: (Random new nextInteger: colection size).	valor := (listaJugadores at: indice) estado.	valor = 'ELIMINADO' ] whileTrue: [  ].	^ indice! !!Tablero methodsFor: 'search' stamp: 'SuarezGonzalo 11/9/2024 18:06'!transferirDe:nombreJugador2 A:nombreJugador1 laCeldaX: x Y: y|coordenadas nroJugador2 nroJugador1 |Transcript show: 'se ejecuto la transeferencia de celdas';cr.coordenadas:=(Array with: x with:y ).nroJugador2  := (nombreJugador2  findTokens: ' ') last asInteger.nroJugador1  := (nombreJugador1  findTokens: ' ') last asInteger.(listaJugadores at:nroJugador2)eliminarCasilla: (Array with:x with: y).(listaJugadores at:nroJugador1)agregarCasilla: coordenadas.(((listaJugadores at:nroJugador2)casillas )isEmpty)ifTrue: [ self eliminarJugador: (listaJugadores at:nroJugador2) ].! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/23/2024 18:58'!masCasillas|mayores primero segundo|primero:=0.segundo:=0.mayores:= Array new:2.1 to:(tamañoMatriz*tamañoMatriz)do:[:i|	(primero < ((listaJugadores at:i)casillas )size)ifTrue:[		primero:=((listaJugadores at:i)casillas )size.		mayores at:1 put: ((listaJugadores at:i))		]ifFalse:[		(segundo < ((listaJugadores at:i)casillas )size)ifTrue:[		segundo :=((listaJugadores at:i)casillas )size.		mayores at:2 put: ((listaJugadores at:i))		]			].].^(mayores).! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/21/2024 20:25'!mostrarAdversariosde: nroJugador	| listaAdversarios cantCasillas x y |		listaAdversarios  := OrderedCollection new.	cantCasillas := ((listaJugadores at: nroJugador) casillas )size.		((listaJugadores at:nroJugador)cañon = false)ifTrue:[	1to:(cantCasillas)do:[:i|				x:=(((listaJugadores at:nroJugador)casillas)at:i)at:1.		y:=(((listaJugadores at:nroJugador)casillas) at:i)at:2.				(x>1)ifTrue:[			(((self casillaX:(x-1) Y:y)dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x-1) with:(y)))ifFalse:[				listaAdversarios  add:(Array with: (x-1) with:(y)).				].				].				].					(x<tamañoMatriz )ifTrue:[								(((self casillaX:(x+1) Y:(y))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x+1) with:(y)))ifFalse:[				listaAdversarios  add:(Array with: (x+1) with:(y)).].				].				].					(y>1)ifTrue:[						(((self casillaX:x Y:(y-1))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x) with:(y-1)))ifFalse:[				listaAdversarios  add:(Array with: (x) with:(y-1)).				].				].			].		(y<tamañoMatriz )ifTrue:[			(((self casillaX:x Y:(y+1))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x) with:(y+1)))ifFalse:[				listaAdversarios  add:(Array with: (x) with:(y+1)).				].			]. ].].]ifFalse: [ 	(listaJugadores at:nroJugador)cañon:false. 	1 to: tamañoMatriz do:[:i|		1 to: tamañoMatriz do:[:j|			(((self casillaX:i Y:(j))dueño )~=(listaJugadores at:nroJugador)nombre)ifTrue:[				listaAdversarios  add:(Array with: (i) with:(j)).						].		].].].(listaJugadores at:(nroJugador))adversarios: listaAdversarios .^listaAdversarios.! !!Tablero methodsFor: 'changing state' stamp: 'SuarezGonzalo 11/9/2024 19:43'!eliminarJugador: objetoJugador objetoJugador estado: 'ELIMINADO'.	cantPlayers :=cantPlayers -1.! !!Tablero methodsFor: 'changing state' stamp: 'Gonzalo 11/21/2024 22:09'!captura: casilla1 a: casilla2| nombreCapturado nombreCapturador xCapturado yCapturado nroCapturador nroCapturado|xCapturado := casilla2 coordenadasX.yCapturado := casilla2 coordenadasY.nombreCapturado := casilla2 dueño.nombreCapturador := casilla1 dueño.nroCapturado:=((casilla2 dueño)findTokens:' ') last asInteger.((listaJugadores at:nroCapturado)escudo = false)ifTrue:[casilla2 dueño: casilla1 dueño.self transferirDe: nombreCapturado A: nombreCapturador laCeldaX: xCapturado Y: yCapturado.xCapturado > 1 ifTrue: [    ((self casillaX: xCapturado - 1 Y: yCapturado) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado - 1 Y: yCapturado)]].xCapturado < tamañoMatriz  ifTrue: [    ((self casillaX: xCapturado + 1 Y: yCapturado) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado + 1 Y: yCapturado)]].yCapturado > 1 ifTrue: [    ((self casillaX: xCapturado Y: yCapturado - 1) dueño = nombreCapturado)        ifTrue: [self captura: casilla1 a: (self casillaX: xCapturado Y: yCapturado - 1)]].yCapturado < tamañoMatriz  ifTrue: [    ((self casillaX: xCapturado Y: yCapturado + 1) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado Y: yCapturado + 1)]].nroCapturador := ((casilla1 dueño)findTokens:' ') last asInteger.(listaJugadores at:nroCapturador)aumentarRacha.]ifFalse:[UIManager default message:((nombreCapturado),' uso su escudo, sus celdas fueron protegidas').(listaJugadores at: nroCapturado )escudo: false.].! !Object subclass: #Timer	instanceVariableNames: 'timer_1 timer_2 proceso turno perdedor fin j1name j2name ventanas'	classVariableNames: ''	package: 'Paradigmas 2024'!!Timer commentStamp: 'Gonzalo 11/23/2024 18:13' prior: 0!- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	fin:		<Object>	j1name:		<Object>	j2name:		<Object>	label_1:		<Object>	label_2:		<Object>	perdedor:		<Object>	proceso:		<Object>	timer_1:		<Object>	timer_2:		<Object>	turno:		<Object>	ventana_1:		<Object>	ventana_2:		<Object>    Implementation Points!!Timer methodsFor: 'initialization' stamp: 'mica 11/22/2024 13:01'!restarSegundos:anPlayer "1 o 2"		(anPlayer  = 1) ifTrue: [ timer_1 :=timer_1 - 2 ].		(anPlayer  = 2) ifTrue: [ timer_2 :=timer_2 - 2 ].! !!Timer methodsFor: 'initialization' stamp: 'IngPepeGrillo 11/19/2024 23:03'!detener    proceso ifNotNil: [         proceso terminate.        proceso := nil.         ]! !!Timer methodsFor: 'initialization' stamp: 'IngPepeGrillo 11/19/2024 23:04'!turno:anValue    turno:=anValue .! !!Timer methodsFor: 'initialization' stamp: 'mica 11/24/2024 12:56'!iniciar:jugadorInicial            |uno_sin_tiempo|				self ventanas: Interfaz new.				fin:= false.            uno_sin_tiempo :=false.				self fin:false.            turno:=jugadorInicial .            self ventanas crearVentana.    proceso := [                   [ uno_sin_tiempo ] whileFalse: [                  "va a ver si alguien se quedo sin tiempo"            (   (timer_1=0) | (timer_2=0) ) ifTrue: [ uno_sin_tiempo :=true ].            (Delay forSeconds: 1) wait.             "creamos 1 sola vez la ventana"            "(timer_1 = 5 )ifTrue: [self crearVentana]."            "vamos escribiendo los 2 tiempos sobre las 2 ventanas "          self ventanas label_1 contents: j1name , String cr, 'Segundos: ', timer_1 printString.          self ventanas label_2 contents: j2name , String cr, 'Segundos: ', timer_2 printString.                "veo de quien es el turno"                (turno=1) ifTrue: [ timer_1 := timer_1  - 1]                ifFalse: [ timer_2 := timer_2 -1 ]                                .                   "eliminamos la ventana"                                                                (timer_1 <=0) ifTrue: [							self perdedor: 1.							self fin:true.                    (Delay forSeconds: 1) wait.                 self  ventanas label_1 contents: 'Time is Over'.                  self ventanas  label_2 contents: 'You won this battle'.                   self  ventanas ventana_1 color: Color red.                   self  ventanas ventana_2 color: Color green.						self ventanas crearVentanaRota: 1."                    (Delay forSeconds: 2) wait.                     ventana_1 delete.                    ventana_1 := nil.                          ventana_2 delete.                    ventana_2 := nil."							"Aca perdio el jugador 1"							"tratamiento"							                                ].                                              (timer_2 <=0) ifTrue: [							self perdedor: 2.							self fin:true.                    (Delay forSeconds: 1) wait.	                self  ventanas   label_1 contents: 'You won this battle'.                   self    ventanas   label_2 contents: 'Time is Over'.                    self   ventanas ventana_1 color: Color green.                    self   ventanas ventana_2 color: Color red .						self ventanas crearVentanaRota: 2.						"Aca perdio el jugador 2"						"iniciar tratamiento"                                ].					          		].         ] fork. ! !!Timer methodsFor: 'initialization' stamp: 'mica 11/22/2024 14:16'!initialize     timer_1 :=10.    timer_2:=10.    proceso:=nil.! !!Timer methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:31'!timer_1: anObject	timer_1 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j1name	^ j1name! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!proceso: anObject	^ proceso := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!timer_2	^ timer_2! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j2name	^ j2name! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!turno	^ turno! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j2name: anObject	j2name := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j1name: anObject	j1name := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:46'!fin	^ fin! !!Timer methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:46'!ventanas	^ ventanas! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!proceso	^ proceso! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:12'!perdedor	^ perdedor! !!Timer methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:31'!timer_1	^ timer_1! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:12'!perdedor: anObject	perdedor := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!timer_2: anObject	timer_2 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:46'!fin: anObject	fin := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:46'!ventanas: anObject	ventanas := anObject! !----End fileIn----!----QUIT/NOSAVE----2024-11-24T15:40:56.212-03:00 Tiago.image priorSource: 100!Object subclass: #Casilla	instanceVariableNames: 'dueño color tema coordenadasX coordenadasY vecinos categoria pregunta boton'	classVariableNames: 'TamañoMatriz'	package: 'Paradigmas 2024'!!Casilla commentStamp: 'SuarezGonzalo 10/11/2024 13:33' prior: 0!Implementation Points!!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:06'!colorAmarillo	color:=Color yellow.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:05'!colorAzul	color:=Color blue.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/20/2024 12:30'!tamañoMatrizCasilla:xTamañoMatriz :=x.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:05'!colorRojo	color:=Color red.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 16:54'!dueñoInicial:valordueño := 'Jugador ',(valor asString).! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 17:01'!coordenadasXY: valorX and:valorY coordenadasX :=valorX.coordenadasY :=valorY.! !!Casilla methodsFor: 'initialization' stamp: 'Gonzalo 11/21/2024 16:01'!initialize color:=Color blue.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/26/2024 17:56'!coordenadasX: valorX Y:valorY coordenadasX :=valorX.coordenadasY :=valorY.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 16:53'!dueño:valor	dueño:=valor .! !!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:02'!coordenadasX	^coordenadasX  ! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 12:17'!boton:xboton:=x! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!categoria	^ categoria! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/20/2024 12:30'!tamañoMatrizCasilla^TamañoMatriz.! !!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:02'!coordenadasY	^coordenadasY   ! !!Casilla methodsFor: 'accessing'!asignarCategoria"1 --Hisoria		2--Deporte	3--Geografia 4--Arte 5--ciencia"|listaCategoria|listaCategoria := #('historia' 'deporte' 'geografia' 'arte' 'ciencia').categoria:=  (listaCategoria at: (1 to: listaCategoria size)atRandom)! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 12:18'!boton^boton.! !!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 16:46'!dueño^dueño! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!pregunta: anObject	pregunta := anObject! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 18:22'!vecinos: anObject	vecinos := anObject! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/14/2024 18:46'!llamarPregunta(categoria = 'historia' ) ifTrue:[pregunta elegirPregunta: 1].(categoria = 'deporte' ) ifTrue:[pregunta elegirPregunta: 2].(categoria = 'geografia' ) ifTrue:[pregunta elegirPregunta: 3].(categoria = 'arte' ) ifTrue:[pregunta elegirPregunta: 4].(categoria = 'ciencia' ) ifTrue:[pregunta elegirPregunta: 5].pregunta ponerPregunta.pregunta mostrarPregunta: categoria. ! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 18:22'!vecinos	^ vecinos! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!pregunta	^ pregunta! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!categoria: anObject	categoria := anObject! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 16:04'!color	^color.! !!Casilla methodsFor: 'add/remove' stamp: 'Gonzalo 11/20/2024 12:26'!encontrarVecinosvecinos:=(OrderedCollection new).(coordenadasX >1)ifTrue:[vecinos add:(Array with: (coordenadasX -1) with: coordenadasY )].(coordenadasX <TamañoMatriz )ifTrue:[vecinos add:(Array with: (coordenadasX +1) with: coordenadasY )].(coordenadasY >1)ifTrue:[vecinos add:(Array with: coordenadasX with: (coordenadasY -1))].(coordenadasY <TamañoMatriz )ifTrue:[vecinos add:(Array with: coordenadasX with: (coordenadasY +1))].! !Object subclass: #Duelos	instanceVariableNames: 'timer bandJugador1 perdedor categoria'	classVariableNames: ''	package: 'Paradigmas 2024'!!Duelos commentStamp: 'mica 11/5/2024 02:40' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages.- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	jugador1:		<Object>	jugador2:		<Object>    Implementation Points!!Duelos methodsFor: 'extra' stamp: 'mica 11/23/2024 19:46'!dueloExtra: powerUp|listaCat|listaCat := #('historia' 'deporte' 'geografia' 'arte' 'ciencia').(powerUp)ifTrue: [ self categoria: (listaCat at: ((1 to: listaCat size)atRandom))]! !!Duelos methodsFor: 'initialization' stamp: 'mica 11/24/2024 12:58'!iniciarDueloEntre: player1 y: player2 categoria: player2cat dueloExtra: arg1	| pregunta|	timer := Timer new.	timer j1name: player1 .	timer j2name: player2 .	pregunta := Pregunta new.	pregunta j1: player1.	pregunta j2: player2.	pregunta listaPreguntas: OrderedCollection new.	pregunta t: false.	bandJugador1 := true.	pregunta band1: true.	self timer iniciar: 1.	categoria := player2cat.		[ self timer fin ] whileFalse: [ 		self dueloExtra: arg1.		pregunta llamarPregunta: categoria.		pregunta resultado = 5 ifTrue: [ self pasarPregunta ].		pregunta resultado = 1 ifTrue: [ 			self pasarTurno:player1 a:player2.			pregunta band1: bandJugador1 ].		pregunta resultado = 2 ifTrue: [ 			Transcript				show: '------->>   INCORRECTO';				cr.			[ 			pregunta resultado = 1 | (pregunta resultado = 5)			| (pregunta resultado = 0) ] whileFalse: [ 				self timer timer_1 <= 0 | (self timer timer_2 <= 0) ifTrue: [ 					pregunta t: true ].				pregunta mostrarPregunta: self categoria ].			pregunta resultado = 5 ifTrue: [ self pasarPregunta ].			pregunta resultado = 1 ifTrue: [ 				self pasarTurno:player1 a:player2.				pregunta band1: bandJugador1 ] ].].Transcript show: 'PERDEDOR Player ',timer perdedor asString;					cr.(timer ventanas ventana_1) delete.(timer ventanas ventana_2) delete.(timer ventanas ventana_3) delete.(timer ventanas ventana_4) delete.self perdedor: timer perdedor! !!Duelos methodsFor: 'initialization' stamp: 'mica 11/23/2024 20:03'!pasarPreguntabandJugador1					ifTrue: [ 						self timer restarSegundos: 1. 						Transcript							show: '1';							cr.]					ifFalse: [ 						self timer restarSegundos: 2.						Transcript							show: '2';							cr.							]! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:57'!perdedor: anObject	perdedor := anObject! !!Duelos methodsFor: 'accessing' stamp: 'Gonzalo 11/23/2024 21:47'!pasarTurno:jugador1 a:jugador2bandJugador1						ifTrue: [ 							"UIManager default message:'Es el turno del ',jugador2 ."							Transcript								show: '1';								cr.						timer turno: 2.						bandJugador1 := false					]					ifFalse: [ 						"UIManager default message:'Es el turno del ',jugador1 ."						Transcript							show: '2';							cr.						timer turno: 1.						bandJugador1 := true.					]! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:19'!timer	^ timer! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:19'!timer: anObject	timer := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 19:16'!categoria: anObject	categoria := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:58'!perdedor	^ perdedor! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 19:16'!categoria	^ categoria! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:24'!bandJugador1: anObject	bandJugador1 := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:24'!bandJugador1	^ bandJugador1! !Object subclass: #Interfaz	instanceVariableNames: 'accionMouse ventana_1 ventana_2 ventana_3 ventana_4 label_1 label_2 label_3 label_4'	classVariableNames: ''	package: 'Paradigmas 2024'!!Interfaz commentStamp: 'Gonzalo 11/23/2024 18:13' prior: 0!- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	accionMouse:		<Object>    Implementation Points!!Interfaz methodsFor: 'initialization' stamp: 'mica 11/24/2024 12:28'!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1450)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/evangelion-cafe.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Interfaz methodsFor: 'initialization' stamp: 'mica 11/24/2024 12:30'!initializa| ventana boton |ventana := Morph new.ventana extent: 600@600; "Tamaño de la ventana"        color: Color white. "Color de fondo"boton := SimpleButtonMorph new.boton label: 'Presióname'; "Texto del botón"       target: [ Transcript show: '¡Botón presionado!!'; cr ]; "Acción al presionar"       actionSelector: #value; "El mensaje enviado al target"       position: 00@00; "Posición dentro de la ventana"       extent: 100@100. "Tamaño del botón"ventana addMorph: boton. "Añadir el botón a la ventana"ventana openInWorld. "Abrir la ventana en el escritorio"! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_1: anObject	label_1 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_4	^ label_4! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!ventana_4: anObject	ventana_4 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:27'!ventana_2: anObject	ventana_2 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:27'!ventana_1: anObject	ventana_1 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_4: anObject	label_4 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_1	^ label_1! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_3: anObject	label_3 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_3	^ label_3! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!ventana_3	^ ventana_3! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!ventana_3: anObject	ventana_3 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!ventana_4	^ ventana_4! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_2: anObject	label_2 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_2	^ label_2! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:27'!ventana_2	^ ventana_2! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:27'!ventana_1	^ ventana_1! !!Interfaz methodsFor: 'mostrar' stamp: 'mica 11/24/2024 12:33'!crearVentanaRota:anNumber	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.(anNumber =1 ) ifTrue: [  	    "Ventana 1: Izquierda"    ventana_4:= Morph  new.    ventana_4 color: Color green.    ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/pim.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 1450)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: 'Gamer Over'.    label_4 color: Color red.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_4 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_4 addMorph: label_4.    ventana_4 openInWorld.].(anNumber =2) ifTrue: [      "Ventana 2: Más a la derecha"    ventana_4 := Morph new.    ventana_4 color: Color green.	ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/pimDerecha.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: 'Gamer over'.    label_4 color: Color red.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_4 addMorph: label_4.    ventana_4 openInWorld.].! !Object subclass: #Jugador	instanceVariableNames: 'nombre casillas adversarios estado escudo cañon racha'	classVariableNames: ''	package: 'Paradigmas 2024'!!Jugador commentStamp: 'SuarezGonzalo 10/11/2024 17:10' prior: 0!Clase Jugador    Instance Variables	dueño:		<Object>	vecinos:		<Object>    Implementation Points!!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 20:40'!casillas^casillas.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/5/2024 17:07'!nombre^nombre.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/9/2024 19:32'!adversarios ^adversarios.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 21:03'!obtenerY:nroCasilla^((casillas at:nroCasilla )at:2)! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 21:03'!obtenerX:nroCasilla^((casillas at:nroCasilla )at:1)! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/9/2024 18:28'!eliminarCasilla: xcasillas remove: x ifAbsent: [ Error signal: 'Error la casilla no pertenece al jugador' ].! !!Jugador methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 10:38'!cañon	^cañon.! !!Jugador methodsFor: 'accessing' stamp: 'mica 11/16/2024 17:43'!estado	^ estado! !!Jugador methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 10:38'!escudo	^escudo.! !!Jugador methodsFor: 'initialize' stamp: 'SuarezGonzalo 10/31/2024 19:50'!crearJugador: nombreJugador x:x y:ynombre :=nombreJugador .casillas:= OrderedCollection new.casillas add:(Array with:x with:y)! !!Jugador methodsFor: 'initialize' stamp: 'Gonzalo 11/21/2024 20:54'!initialize 	nombre:='Unkown Player'.	escudo:=false.	cañon :=false.	racha:=0.	casillas:=OrderedCollection new.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/9/2024 13:26'!agregarCasilla: xcasillas add:x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 10/31/2024 19:43'!nombre:xnombre:=x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/5/2024 19:01'!adversarios: listaadversarios :=lista.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 10:42'!escudo:x	escudo:=x.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 21:09'!aumentarRacha racha:=racha +1.	(racha=5)ifTrue:[self agregarPowerUp].! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 10:41'!cañon:x	cañon:=x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 10/31/2024 19:44'!casilla: xcasillas add:x.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/23/2024 21:14'!agregarPowerUp	| respuesta |	racha :=0.UIManager default message:'El ',nombre ,' obtuvo una racha de 5 victorias'.respuesta := UIManager default    chooseFrom: #('Escudo' 'Cañon')    message: 'Elija PowerUp',String cr,'Escudo : proteje todas tus casillas ante una captura',String cr,'Cañon: permite atacar a cualquier casilla del tablero'.    "Procesar la respuesta"respuesta ifNotNil: [    (respuesta = 1)ifTrue: [ 			escudo:=true.	 ].	(respuesta = 2)ifTrue: [ 			cañon :=true.				 ].] ifNil: [    Transcript show: 'No se seleccionó ninguna opción'; cr.	self agregarPowerUp.].! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/9/2024 18:21'!estado:x	estado:=x.! !Object subclass: #Pregunta	instanceVariableNames: 'opcion preguntaAleatoria respuestas resultado correcta pregunta nroPregunta frase listaPreguntas j1 j2 band1 rtaPlayer t'	classVariableNames: ''	package: 'Paradigmas 2024'!!Pregunta commentStamp: 'mica 11/4/2024 21:42' prior: 0!-Toma la pregunta, opciones y respuesta correcta de una archivo .txt-Muestra la pregunta y permite al jugador contestar a traves de opciones.!!Pregunta methodsFor: 'control' stamp: 'mica 11/22/2024 02:06'!verificarPreguntaRepetidas|band| "QUE VERIFIQUE EN UNA INSTANCIA DE DUELO, NO EN TODO EL JUEGO"band:= true.[band] whileTrue:[ 	preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.	nroPregunta:= (preguntaAleatoria substrings) first.		(listaPreguntas isEmpty)	ifTrue:[		listaPreguntas add: nroPregunta. band:= false]	ifFalse: [ 		(listaPreguntas size = frase size) 						ifTrue:[ band:= false]						ifFalse:[ 							(listaPreguntas includes: nroPregunta)							ifFalse:[									listaPreguntas add: nroPregunta. band:= false]							ifTrue:[								band:= true							]						] 				]].! !!Pregunta methodsFor: 'control' stamp: 'mica 11/21/2024 22:08'!verificarPreguntaRepetidaEn: listaPreguntas|band| "QUE VERIFIQUE EN UNA INSTANCIA DE DUELO, NO EN TODO EL JUEGO"band:= true.[band] whileTrue:[ 	preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.	nroPregunta:= (preguntaAleatoria substrings) first.	(listaPreguntas isEmpty)	ifTrue:[		listaPreguntas add: nroPregunta. band:= false]	ifFalse: [ 		(listaPreguntas size = frase size) 						ifTrue:[ band:= false]						ifFalse:[ 							(listaPreguntas includes: nroPregunta)							ifFalse:[									listaPreguntas add: nroPregunta. band:= false]							ifTrue:[								band:= true							]						] 				]]! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/5/2024 18:09'!resultado	^ resultado! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 00:56'!listaPreguntas	^ listaPreguntas! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:55'!t	^ t! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:10'!rtaPlayer	^ rtaPlayer! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:35'!preguntaAleatoria	^ preguntaAleatoria! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:05'!band1: anObject	band1 := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 00:56'!listaPreguntas: anObject	listaPreguntas := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!correcta: anObject	correcta := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:02'!nroPregunta	^ nroPregunta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!pregunta: anObject	pregunta := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j1	^ j1! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!correcta	^ correcta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/5/2024 18:09'!resultado: anObject	resultado := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j2	^ j2! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:05'!band1	^ band1! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:02'!nroPregunta: anObject	nroPregunta := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:35'!preguntaAleatoria: anObject	preguntaAleatoria := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:55'!t: anObject	t := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!pregunta	^ pregunta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/3/2024 19:23'!opcion: anObject	opcion := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:48'!respuestas	^ respuestas! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/3/2024 19:18'!opcion	^ opcion! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:12'!frase: anObject	frase := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 09:39'!ponerPregunta:cat"toma la linea guardada en el atributo preguntaAleatoria""divide la linea en 3 partes: pregunta, opciones y respuesta correcta""ejemplo de linea .txt:" "¿Quién fue el primer presidente de los Estados Unidos?A) Abraham Lincoln%B) George Washington%C) Thomas Jefferson%D) John Adams% B"|restoPregunta opciones signo ops pregSubstring| ops:= ''.signo:='?'.pregunta:=''.respuestas := OrderedCollection new.nroPregunta:= (preguntaAleatoria substrings)first.correcta := (preguntaAleatoria substrings) last.  "Toma solo el ultimo string de toda la frase. Es la respuesta correcta"pregSubstring := (preguntaAleatoria) allButFirst: 3.pregunta:= ( pregSubstring copyUpToSubstring: signo). "copia solo la pregunta sin el signo '?'" restoPregunta := preguntaAleatoria copyAfterLast: $?. "copia el resto despues de '?'"opciones:= restoPregunta allButLast. "copia solo las opciones sin la respuesta ni pregunta"opciones do: [ :i| (i~= $%)ifTrue:[ops:=ops, (i asString)] "recorre la secuencia y acumula los caracteres hasta encontrar %"		ifFalse:[		respuestas add: (ops asString). "cuando llega a un % guarda lo acumulado en el atributo respuestas (definido como OrderedCollection)"		ops:=''.			].		].respuestas add: 'PASAR'.! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:10'!rtaPlayer: anObject	rtaPlayer := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j2: anObject	j2 := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:55'!llamarPregunta: categoria	(categoria = 'deporte' ) ifTrue:[self elegirPregunta: 1].(categoria = 'historia' ) ifTrue:[self elegirPregunta: 2].(categoria = 'arte' ) ifTrue:[self elegirPregunta: 3].(categoria = 'geografia' ) ifTrue:[self elegirPregunta: 4].(categoria = 'ciencia' ) ifTrue:[self elegirPregunta: 5].self ponerPregunta: categoria.self mostrarPregunta:categoria. ! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:48'!respuestas: anObject	respuestas := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:12'!frase	^ frase! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j1: anObject	j1 := anObject! !!Pregunta methodsFor: 'initialization' stamp: 'mica 11/22/2024 01:05'!elegirPregunta:categoriaCasilla"elige al azar una linea del archivo Pregunta.txt y la guarda en el atributo preguntaAleatoria "|archivo|archivo := FileSystem disk workingDirectory.(categoriaCasilla = 1)ifTrue:[frase:= ((archivo / 'DEPORTE.txt') contents lines)].(categoriaCasilla = 2)ifTrue:[frase:= ((archivo / 'HISTORIA.txt') contents lines)].(categoriaCasilla = 3)ifTrue:[frase:= ((archivo / 'ARTE.txt') contents lines)].(categoriaCasilla = 4)ifTrue:[frase:= ((archivo / 'GEOGRAFIA.txt') contents lines)].(categoriaCasilla = 5)ifTrue:[frase:= ((archivo / 'CIENCIA.txt') contents lines)].preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.self verificarPreguntaRepetidas! !!Pregunta methodsFor: 'showing' stamp: 'Gonzalo 11/23/2024 20:35'!mostrarPregunta: cat"muestra al jugador la pregunta con sus opciones.""guarda la respuesta en rtaPlayer y la compara con el parametro 'correcta'""segun coincida rtaPlayer y correcta, devuelve un cartelito de CORRECTO o INCORRECTO" |rtaNum nom|t ifTrue: [ self resultado: 0]ifFalse: [ band1 ifTrue: [nom:= j1]ifFalse: [ nom:= j2].Transcript show: 'Realizando pregunta ', (nroPregunta)  asString; cr.		rtaPlayer := UIManager default 		chooseFrom: respuestas 		message: nom,String cr,pregunta,'?'		title: 'DUELO',String cr,cat.Transcript show: 'rtaPlayer-->', rtaPlayer asString;cr.rtaNum := self opcionNumeroALetra: rtaPlayer.(correcta = (rtaNum))	ifTrue:[self resultado: 1]	ifFalse: [		(rtaPlayer = 5 )		ifTrue: [  			self resultado: 5]	 	ifFalse:[self resultado: 2]	].]	! !!Pregunta methodsFor: 'converting' stamp: 'mica 11/21/2024 02:41'!opcionNumeroALetra: a"convierte la respuesta del jugador en A, B, C, o D para luego""comparar con la respuesta correcta en mostrarPregunta:y:"|listaOpciones |listaOpciones := #('A' 'B' 'C' 'D' 0).^(listaOpciones at: a)! !Object subclass: #Tablero	instanceVariableNames: 'cantPlayers matriz listaJugadores tamañoMatriz ventana atacante defensor lista'	classVariableNames: ''	package: 'Paradigmas 2024'!!Tablero commentStamp: 'SuarezGonzalo 10/11/2024 13:25' prior: 0!Prueba para desarrollar una matriz con los casilleros    Instance Variables	cantPlayers:		<Object>    Implementation Points!!Tablero methodsFor: 'initialization' stamp: 'Gonzalo 11/23/2024 21:09'!iniciarJuego|nroAtacante listaAdversarios respuesta duelo contadorDuelos | contadorDuelos :=0.	duelo :=Duelos new.	self interfazCrearVentana.	Transcript show: '----INICIA EL JUEGO----';cr.	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.					[ cantPlayers > 1 ]whileTrue: [  	Transcript show:'Cantidad de Jugadores: ';show:cantPlayers;cr.	Transcript show: 'Jugador: ';show:(listaJugadores at:nroAtacante)nombre;show:' Selecciona a cual de las siguientes casillas atacar:';cr.	(contadorDuelos =10)ifTrue:[		nroAtacante:=(((self masCasillas at:1)nombre)findTokens:' ') last asInteger.		atacante :=listaJugadores at:nroAtacante.		defensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).		Transcript show: '----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----';cr.		self mensajeDueloExtra:(atacante nombre)y:(defensor dueño).		duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.		contadorDuelos :=0.		]	ifFalse:[			self mostrarAdversariosde: nroAtacante.	listaAdversarios:=(listaJugadores at:nroAtacante)adversarios.	Transcript show: '---COLUMNA---FILA---CATEGORIA---------JUGADOR---';cr.	1 to:(listaAdversarios size)do:[:i|		Transcript show: '      ';show:((listaAdversarios at:i)at:1);show:'      '.		Transcript show: ' ';show:((listaAdversarios at:i)at:2);show:' '.		Transcript show: '     ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:' '.		Transcript show: '   ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:' ';cr.		].	self coloresAtacante: (listaJugadores at:nroAtacante)casillas.	self coloresAdversarios: listaAdversarios.	self interfazCrearVentana.	self cargarBotones."INTERFAZ----------------------------------------------------------------"  	self coloresAzul.	respuesta  := UIManager default     chooseFrom: listaAdversarios    message: 'Elige un contrincante'    title: 'DUELO'.  ventana delete.defensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. contadorDuelos :=contadorDuelos +1.].(duelo perdedor = 1)ifTrue:[	self captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).	nroAtacante :=((defensor dueño)findTokens:' ') last asInteger.	atacante := listaJugadores at:nroAtacante	]ifFalse: [ 	self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).	 ].(contadorDuelos  < 10)ifTrue:[respuesta  := UIManager default     chooseFrom: #('Seguir Atacando' 'Pasar Turno')    message: '¿Desea seguir atacando?'    title: 'DUELO'.(respuesta = 2)ifTrue:[	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.	].]ifFalse:[nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.].].	 	 Transcript show: 'GAME OVER'; cr.	 Transcript show: 'El ganador es el jugador:';show:(atacante nombre); cr.! !!Tablero methodsFor: 'initialization' stamp: 'Gonzalo 11/20/2024 20:32'!tamañoDeLaMatriz|entrada numero|	entrada :=(UIManager default request:'Ingrese el tamaño de la matriz')asInteger.	entrada ifNotNil:[ 		(entrada isInteger)ifTrue: [  		numero:=entrada asInteger.]]	 ifNil: [ 		self error: 'Debe ingresar un numero valido'.		 ].	^numero.! !!Tablero methodsFor: 'initialization' stamp: 'Gonzalo 11/21/2024 15:32'!initialize 	|cont|	Transcript clear.	cont:=0.	tamañoMatriz:= self tamañoDeLaMatriz.	listaJugadores:= Array new:(tamañoMatriz * tamañoMatriz).		matriz := Array new: tamañoMatriz .	cantPlayers:=tamañoMatriz *tamañoMatriz .	1 to: tamañoMatriz  do:[:y| matriz at:y put:( Array new:tamañoMatriz)].	1 to: tamañoMatriz  do:[:y| 		1 to: tamañoMatriz  do:[:x| 			(matriz at:y) at:x put:(Casilla new).			(((matriz at:y)at:x))tamañoMatrizCasilla: tamañoMatriz.			cont:=cont+1.			((matriz at:y) at:x) dueñoInicial: (cont).			((matriz at:y) at:x) asignarCategoria.			(listaJugadores) at:cont put:(Jugador new).			(listaJugadores at:cont)nombre:(((matriz at:y) at:x)dueño).			(listaJugadores at:cont)agregarCasilla:(Array with:x with:y).			((matriz at:y) at:x) coordenadasX: x Y: y.			((matriz at:y) at:x) encontrarVecinos.						].		].	Transcript show: 'Se creo el tablero de forma exitosa';cr.! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 02:16'!lista: anObject	lista := anObject! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:24'!listaJugadores	^listaJugadores! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:53'!defensor: anObject	defensor := anObject! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:53'!defensor	^ defensor! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 02:16'!lista	^ lista! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 16:50'!matriz	^matriz.! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/5/2024 18:57'!casillaX:x Y:y^((matriz at:y)at:x)! !!Tablero methodsFor: 'interface'!interfazCrearVentana|boton|		ventana := Morph new.	ventana extent: (100*(tamañoMatriz) )@(100*(tamañoMatriz) ); "Tamaño de la ventana"        color: Color white. "Color de fondo"boton:=SimpleButtonMorph new.boton label:'X';	actionSelector: #delete;	target:ventana;	position:(tamañoMatriz *100)@(tamañoMatriz *100);	extent: 10@10.	ventana addMorph:boton.	ventana openInWorld. "Abrir la ventana en el escritorio"! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 16:14'!coloresAdversarios:listaAdversarios1 to: (listaAdversarios size)do:[:i|	(self casillaX: ((listaAdversarios at:i)at:1) Y: ((listaAdversarios at:i)at:2))colorRojo 	].! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/23/2024 20:49'!mensajeDueloExtra:jugadorA y:jugadorBUIManager default message:'Duelo entre titanes ',String cr,jugadorA,' se enfrentara al ',jugadorB.! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 19:40'!cargarBotones|texto |texto := TextMorph new.1 to: tamañoMatriz  do:[:i|	1 to: tamañoMatriz do:[:j|		(self casillaX: i Y:j)boton:SimpleButtonMorph new.		(self casillaX: i Y:j)boton label:'';  "Texto del botón"      		target: [ [ defensor:= self casillaX: i Y:j.self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: (defensor coordenadasX ) Y: (defensor coordenadasY)) ]]; "Acción al presionar"			color: ((self casillaX: i Y:j )color);    	  	actionSelector: #value; "El mensaje enviado al target"      		position: (100*(i-1))@(100*(j-1)); "Posición dentro de la ventana"      		extent: 100@100. "Tamaño del botón"		texto contents: ((self casillaX: i Y:j)dueño), String crlf, ((self casillaX: i Y:j)categoria) ,String crlf,     'Posición: (', i asString, ',', j asString, ')'; "Texto en dos líneas"       	color: Color black;       	font: (TextStyle default fontAt: 12);       	center: (self casillaX: i Y:j)boton bounds center. "Centrar el texto dentro del botón"		(self casillaX: i Y:j )boton addMorph: texto. "Añadir el texto al botón"		ventana addMorph:(self casillaX: i Y:j)boton . "Añadir el botón a la ventana"		texto:=TextMorph new.		].	]. ! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 16:19'!coloresAtacante:listaAtacante1 to: (listaAtacante  size)do:[:i|	(self casillaX: ((listaAtacante  at:i)at:1) Y: ((listaAtacante at:i)at:2))colorAmarillo 	].! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 16:38'!coloresAzul	1 to:tamañoMatriz  do:[:i|		1 to:tamañoMatriz  do:[:j|		 (self casillaX: i Y:j)colorAzul. 		]. 		] ! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/20/2024 21:20'!buscarJugador	| indice colection valor |	colection := (1 to: tamañoMatriz * tamañoMatriz) asOrderedCollection.	[ 	indice := colection at: (Random new nextInteger: colection size).	valor := (listaJugadores at: indice) estado.	valor = 'ELIMINADO' ] whileTrue: [  ].	^ indice! !!Tablero methodsFor: 'search' stamp: 'SuarezGonzalo 11/9/2024 18:06'!transferirDe:nombreJugador2 A:nombreJugador1 laCeldaX: x Y: y|coordenadas nroJugador2 nroJugador1 |Transcript show: 'se ejecuto la transeferencia de celdas';cr.coordenadas:=(Array with: x with:y ).nroJugador2  := (nombreJugador2  findTokens: ' ') last asInteger.nroJugador1  := (nombreJugador1  findTokens: ' ') last asInteger.(listaJugadores at:nroJugador2)eliminarCasilla: (Array with:x with: y).(listaJugadores at:nroJugador1)agregarCasilla: coordenadas.(((listaJugadores at:nroJugador2)casillas )isEmpty)ifTrue: [ self eliminarJugador: (listaJugadores at:nroJugador2) ].! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/23/2024 18:58'!masCasillas|mayores primero segundo|primero:=0.segundo:=0.mayores:= Array new:2.1 to:(tamañoMatriz*tamañoMatriz)do:[:i|	(primero < ((listaJugadores at:i)casillas )size)ifTrue:[		primero:=((listaJugadores at:i)casillas )size.		mayores at:1 put: ((listaJugadores at:i))		]ifFalse:[		(segundo < ((listaJugadores at:i)casillas )size)ifTrue:[		segundo :=((listaJugadores at:i)casillas )size.		mayores at:2 put: ((listaJugadores at:i))		]			].].^(mayores).! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/21/2024 20:25'!mostrarAdversariosde: nroJugador	| listaAdversarios cantCasillas x y |		listaAdversarios  := OrderedCollection new.	cantCasillas := ((listaJugadores at: nroJugador) casillas )size.		((listaJugadores at:nroJugador)cañon = false)ifTrue:[	1to:(cantCasillas)do:[:i|				x:=(((listaJugadores at:nroJugador)casillas)at:i)at:1.		y:=(((listaJugadores at:nroJugador)casillas) at:i)at:2.				(x>1)ifTrue:[			(((self casillaX:(x-1) Y:y)dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x-1) with:(y)))ifFalse:[				listaAdversarios  add:(Array with: (x-1) with:(y)).				].				].				].					(x<tamañoMatriz )ifTrue:[								(((self casillaX:(x+1) Y:(y))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x+1) with:(y)))ifFalse:[				listaAdversarios  add:(Array with: (x+1) with:(y)).].				].				].					(y>1)ifTrue:[						(((self casillaX:x Y:(y-1))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x) with:(y-1)))ifFalse:[				listaAdversarios  add:(Array with: (x) with:(y-1)).				].				].			].		(y<tamañoMatriz )ifTrue:[			(((self casillaX:x Y:(y+1))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x) with:(y+1)))ifFalse:[				listaAdversarios  add:(Array with: (x) with:(y+1)).				].			]. ].].]ifFalse: [ 	(listaJugadores at:nroJugador)cañon:false. 	1 to: tamañoMatriz do:[:i|		1 to: tamañoMatriz do:[:j|			(((self casillaX:i Y:(j))dueño )~=(listaJugadores at:nroJugador)nombre)ifTrue:[				listaAdversarios  add:(Array with: (i) with:(j)).						].		].].].(listaJugadores at:(nroJugador))adversarios: listaAdversarios .^listaAdversarios.! !!Tablero methodsFor: 'changing state' stamp: 'SuarezGonzalo 11/9/2024 19:43'!eliminarJugador: objetoJugador objetoJugador estado: 'ELIMINADO'.	cantPlayers :=cantPlayers -1.! !!Tablero methodsFor: 'changing state' stamp: 'Gonzalo 11/21/2024 22:09'!captura: casilla1 a: casilla2| nombreCapturado nombreCapturador xCapturado yCapturado nroCapturador nroCapturado|xCapturado := casilla2 coordenadasX.yCapturado := casilla2 coordenadasY.nombreCapturado := casilla2 dueño.nombreCapturador := casilla1 dueño.nroCapturado:=((casilla2 dueño)findTokens:' ') last asInteger.((listaJugadores at:nroCapturado)escudo = false)ifTrue:[casilla2 dueño: casilla1 dueño.self transferirDe: nombreCapturado A: nombreCapturador laCeldaX: xCapturado Y: yCapturado.xCapturado > 1 ifTrue: [    ((self casillaX: xCapturado - 1 Y: yCapturado) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado - 1 Y: yCapturado)]].xCapturado < tamañoMatriz  ifTrue: [    ((self casillaX: xCapturado + 1 Y: yCapturado) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado + 1 Y: yCapturado)]].yCapturado > 1 ifTrue: [    ((self casillaX: xCapturado Y: yCapturado - 1) dueño = nombreCapturado)        ifTrue: [self captura: casilla1 a: (self casillaX: xCapturado Y: yCapturado - 1)]].yCapturado < tamañoMatriz  ifTrue: [    ((self casillaX: xCapturado Y: yCapturado + 1) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado Y: yCapturado + 1)]].nroCapturador := ((casilla1 dueño)findTokens:' ') last asInteger.(listaJugadores at:nroCapturador)aumentarRacha.]ifFalse:[UIManager default message:((nombreCapturado),' uso su escudo, sus celdas fueron protegidas').(listaJugadores at: nroCapturado )escudo: false.].! !Object subclass: #Timer	instanceVariableNames: 'timer_1 timer_2 proceso turno perdedor fin j1name j2name ventanas'	classVariableNames: ''	package: 'Paradigmas 2024'!!Timer commentStamp: 'Gonzalo 11/23/2024 18:13' prior: 0!- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	fin:		<Object>	j1name:		<Object>	j2name:		<Object>	label_1:		<Object>	label_2:		<Object>	perdedor:		<Object>	proceso:		<Object>	timer_1:		<Object>	timer_2:		<Object>	turno:		<Object>	ventana_1:		<Object>	ventana_2:		<Object>    Implementation Points!!Timer methodsFor: 'initialization' stamp: 'mica 11/22/2024 13:01'!restarSegundos:anPlayer "1 o 2"		(anPlayer  = 1) ifTrue: [ timer_1 :=timer_1 - 2 ].		(anPlayer  = 2) ifTrue: [ timer_2 :=timer_2 - 2 ].! !!Timer methodsFor: 'initialization' stamp: 'IngPepeGrillo 11/19/2024 23:03'!detener    proceso ifNotNil: [         proceso terminate.        proceso := nil.         ]! !!Timer methodsFor: 'initialization' stamp: 'IngPepeGrillo 11/19/2024 23:04'!turno:anValue    turno:=anValue .! !!Timer methodsFor: 'initialization' stamp: 'mica 11/24/2024 12:56'!iniciar:jugadorInicial            |uno_sin_tiempo|				self ventanas: Interfaz new.				fin:= false.            uno_sin_tiempo :=false.				self fin:false.            turno:=jugadorInicial .            self ventanas crearVentana.    proceso := [                   [ uno_sin_tiempo ] whileFalse: [                  "va a ver si alguien se quedo sin tiempo"            (   (timer_1=0) | (timer_2=0) ) ifTrue: [ uno_sin_tiempo :=true ].            (Delay forSeconds: 1) wait.             "creamos 1 sola vez la ventana"            "(timer_1 = 5 )ifTrue: [self crearVentana]."            "vamos escribiendo los 2 tiempos sobre las 2 ventanas "          self ventanas label_1 contents: j1name , String cr, 'Segundos: ', timer_1 printString.          self ventanas label_2 contents: j2name , String cr, 'Segundos: ', timer_2 printString.                "veo de quien es el turno"                (turno=1) ifTrue: [ timer_1 := timer_1  - 1]                ifFalse: [ timer_2 := timer_2 -1 ]                                .                   "eliminamos la ventana"                                                                (timer_1 <=0) ifTrue: [							self perdedor: 1.							self fin:true.                    (Delay forSeconds: 1) wait.                 self  ventanas label_1 contents: 'Time is Over'.                  self ventanas  label_2 contents: 'You won this battle'.                   self  ventanas ventana_1 color: Color red.                   self  ventanas ventana_2 color: Color green.						self ventanas crearVentanaRota: 1."                    (Delay forSeconds: 2) wait.                     ventana_1 delete.                    ventana_1 := nil.                          ventana_2 delete.                    ventana_2 := nil."							"Aca perdio el jugador 1"							"tratamiento"							                                ].                                              (timer_2 <=0) ifTrue: [							self perdedor: 2.							self fin:true.                    (Delay forSeconds: 1) wait.	                self  ventanas   label_1 contents: 'You won this battle'.                   self    ventanas   label_2 contents: 'Time is Over'.                    self   ventanas ventana_1 color: Color green.                    self   ventanas ventana_2 color: Color red .						self ventanas crearVentanaRota: 2.						"Aca perdio el jugador 2"						"iniciar tratamiento"                                ].					          		].         ] fork. ! !!Timer methodsFor: 'initialization' stamp: 'mica 11/22/2024 14:16'!initialize     timer_1 :=10.    timer_2:=10.    proceso:=nil.! !!Timer methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:31'!timer_1: anObject	timer_1 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j1name	^ j1name! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!proceso: anObject	^ proceso := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!timer_2	^ timer_2! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j2name	^ j2name! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!turno	^ turno! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j2name: anObject	j2name := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j1name: anObject	j1name := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:46'!fin	^ fin! !!Timer methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:46'!ventanas	^ ventanas! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!proceso	^ proceso! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:12'!perdedor	^ perdedor! !!Timer methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:31'!timer_1	^ timer_1! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:12'!perdedor: anObject	perdedor := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!timer_2: anObject	timer_2 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:46'!fin: anObject	fin := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:46'!ventanas: anObject	ventanas := anObject! !----End fileIn----!!Interfaz methodsFor: 'mostrar' stamp: 'TiagoBernal 11/24/2024 16:03' prior: 33613953!crearVentanaRota:anNumber	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.(anNumber =1 ) ifTrue: [  	    "Ventana 1: Izquierda"    ventana_4:= Morph  new.    ventana_4 color: Color green.    ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/derrota.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 1450)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: 'Gamer Over'.    label_4 color: Color red.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_4 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_4 addMorph: label_4.    ventana_4 openInWorld.].(anNumber =2) ifTrue: [      "Ventana 2: Más a la derecha"    ventana_4 := Morph new.    ventana_4 color: Color green.	ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/pimDerecha.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: 'Gamer over'.    label_4 color: Color red.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_4 addMorph: label_4.    ventana_4 openInWorld.].! !!Interfaz methodsFor: 'mostrar' stamp: 'TiagoBernal 11/24/2024 16:03' prior: 33646718!crearVentanaRota:anNumber	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.(anNumber =1 ) ifTrue: [  	    "Ventana 1: Izquierda"    ventana_4:= Morph  new.    ventana_4 color: Color green.    ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/victoria.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 1450)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: 'Gamer Over'.    label_4 color: Color red.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_4 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_4 addMorph: label_4.    ventana_4 openInWorld.].(anNumber =2) ifTrue: [      "Ventana 2: Más a la derecha"    ventana_4 := Morph new.    ventana_4 color: Color green.	ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/derrota.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: 'Gamer over'.    label_4 color: Color red.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_4 addMorph: label_4.    ventana_4 openInWorld.].! !!Interfaz methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 16:04' prior: 33609389!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1450)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !----QUIT/NOSAVE----2024-11-24T16:08:16.705-03:00 Tiago.image priorSource: 100!Object subclass: #Casilla	instanceVariableNames: 'dueño color tema coordenadasX coordenadasY vecinos categoria pregunta boton'	classVariableNames: 'TamañoMatriz'	package: 'Paradigmas 2024'!!Casilla commentStamp: 'SuarezGonzalo 10/11/2024 13:33' prior: 0!Implementation Points!!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:06'!colorAmarillo	color:=Color yellow.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:05'!colorAzul	color:=Color blue.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/20/2024 12:30'!tamañoMatrizCasilla:xTamañoMatriz :=x.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:05'!colorRojo	color:=Color red.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 16:54'!dueñoInicial:valordueño := 'Jugador ',(valor asString).! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 17:01'!coordenadasXY: valorX and:valorY coordenadasX :=valorX.coordenadasY :=valorY.! !!Casilla methodsFor: 'initialization' stamp: 'Gonzalo 11/21/2024 16:01'!initialize color:=Color blue.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/26/2024 17:56'!coordenadasX: valorX Y:valorY coordenadasX :=valorX.coordenadasY :=valorY.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 16:53'!dueño:valor	dueño:=valor .! !!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:02'!coordenadasX	^coordenadasX  ! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 12:17'!boton:xboton:=x! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!categoria	^ categoria! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/20/2024 12:30'!tamañoMatrizCasilla^TamañoMatriz.! !!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:02'!coordenadasY	^coordenadasY   ! !!Casilla methodsFor: 'accessing'!asignarCategoria"1 --Hisoria		2--Deporte	3--Geografia 4--Arte 5--ciencia"|listaCategoria|listaCategoria := #('historia' 'deporte' 'geografia' 'arte' 'ciencia').categoria:=  (listaCategoria at: (1 to: listaCategoria size)atRandom)! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 12:18'!boton^boton.! !!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 16:46'!dueño^dueño! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!pregunta: anObject	pregunta := anObject! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 18:22'!vecinos: anObject	vecinos := anObject! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/14/2024 18:46'!llamarPregunta(categoria = 'historia' ) ifTrue:[pregunta elegirPregunta: 1].(categoria = 'deporte' ) ifTrue:[pregunta elegirPregunta: 2].(categoria = 'geografia' ) ifTrue:[pregunta elegirPregunta: 3].(categoria = 'arte' ) ifTrue:[pregunta elegirPregunta: 4].(categoria = 'ciencia' ) ifTrue:[pregunta elegirPregunta: 5].pregunta ponerPregunta.pregunta mostrarPregunta: categoria. ! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 18:22'!vecinos	^ vecinos! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!pregunta	^ pregunta! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!categoria: anObject	categoria := anObject! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 16:04'!color	^color.! !!Casilla methodsFor: 'add/remove' stamp: 'Gonzalo 11/20/2024 12:26'!encontrarVecinosvecinos:=(OrderedCollection new).(coordenadasX >1)ifTrue:[vecinos add:(Array with: (coordenadasX -1) with: coordenadasY )].(coordenadasX <TamañoMatriz )ifTrue:[vecinos add:(Array with: (coordenadasX +1) with: coordenadasY )].(coordenadasY >1)ifTrue:[vecinos add:(Array with: coordenadasX with: (coordenadasY -1))].(coordenadasY <TamañoMatriz )ifTrue:[vecinos add:(Array with: coordenadasX with: (coordenadasY +1))].! !Object subclass: #Duelos	instanceVariableNames: 'timer bandJugador1 perdedor categoria'	classVariableNames: ''	package: 'Paradigmas 2024'!!Duelos commentStamp: 'mica 11/5/2024 02:40' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages.- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	jugador1:		<Object>	jugador2:		<Object>    Implementation Points!!Duelos methodsFor: 'extra' stamp: 'mica 11/23/2024 19:46'!dueloExtra: powerUp|listaCat|listaCat := #('historia' 'deporte' 'geografia' 'arte' 'ciencia').(powerUp)ifTrue: [ self categoria: (listaCat at: ((1 to: listaCat size)atRandom))]! !!Duelos methodsFor: 'initialization' stamp: 'mica 11/24/2024 12:58'!iniciarDueloEntre: player1 y: player2 categoria: player2cat dueloExtra: arg1	| pregunta|	timer := Timer new.	timer j1name: player1 .	timer j2name: player2 .	pregunta := Pregunta new.	pregunta j1: player1.	pregunta j2: player2.	pregunta listaPreguntas: OrderedCollection new.	pregunta t: false.	bandJugador1 := true.	pregunta band1: true.	self timer iniciar: 1.	categoria := player2cat.		[ self timer fin ] whileFalse: [ 		self dueloExtra: arg1.		pregunta llamarPregunta: categoria.		pregunta resultado = 5 ifTrue: [ self pasarPregunta ].		pregunta resultado = 1 ifTrue: [ 			self pasarTurno:player1 a:player2.			pregunta band1: bandJugador1 ].		pregunta resultado = 2 ifTrue: [ 			Transcript				show: '------->>   INCORRECTO';				cr.			[ 			pregunta resultado = 1 | (pregunta resultado = 5)			| (pregunta resultado = 0) ] whileFalse: [ 				self timer timer_1 <= 0 | (self timer timer_2 <= 0) ifTrue: [ 					pregunta t: true ].				pregunta mostrarPregunta: self categoria ].			pregunta resultado = 5 ifTrue: [ self pasarPregunta ].			pregunta resultado = 1 ifTrue: [ 				self pasarTurno:player1 a:player2.				pregunta band1: bandJugador1 ] ].].Transcript show: 'PERDEDOR Player ',timer perdedor asString;					cr.(timer ventanas ventana_1) delete.(timer ventanas ventana_2) delete.(timer ventanas ventana_3) delete.(timer ventanas ventana_4) delete.self perdedor: timer perdedor! !!Duelos methodsFor: 'initialization' stamp: 'mica 11/23/2024 20:03'!pasarPreguntabandJugador1					ifTrue: [ 						self timer restarSegundos: 1. 						Transcript							show: '1';							cr.]					ifFalse: [ 						self timer restarSegundos: 2.						Transcript							show: '2';							cr.							]! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:57'!perdedor: anObject	perdedor := anObject! !!Duelos methodsFor: 'accessing' stamp: 'Gonzalo 11/23/2024 21:47'!pasarTurno:jugador1 a:jugador2bandJugador1						ifTrue: [ 							"UIManager default message:'Es el turno del ',jugador2 ."							Transcript								show: '1';								cr.						timer turno: 2.						bandJugador1 := false					]					ifFalse: [ 						"UIManager default message:'Es el turno del ',jugador1 ."						Transcript							show: '2';							cr.						timer turno: 1.						bandJugador1 := true.					]! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:19'!timer	^ timer! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:19'!timer: anObject	timer := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 19:16'!categoria: anObject	categoria := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:58'!perdedor	^ perdedor! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 19:16'!categoria	^ categoria! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:24'!bandJugador1: anObject	bandJugador1 := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:24'!bandJugador1	^ bandJugador1! !Object subclass: #Interfaz	instanceVariableNames: 'accionMouse ventana_1 ventana_2 ventana_3 ventana_4 label_1 label_2 label_3 label_4'	classVariableNames: ''	package: 'Paradigmas 2024'!!Interfaz commentStamp: 'Gonzalo 11/23/2024 18:13' prior: 0!- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	accionMouse:		<Object>    Implementation Points!!Interfaz methodsFor: 'initialization' stamp: 'mica 11/24/2024 12:28'!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1450)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/evangelion-cafe.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Interfaz methodsFor: 'initialization' stamp: 'mica 11/24/2024 12:30'!initializa| ventana boton |ventana := Morph new.ventana extent: 600@600; "Tamaño de la ventana"        color: Color white. "Color de fondo"boton := SimpleButtonMorph new.boton label: 'Presióname'; "Texto del botón"       target: [ Transcript show: '¡Botón presionado!!'; cr ]; "Acción al presionar"       actionSelector: #value; "El mensaje enviado al target"       position: 00@00; "Posición dentro de la ventana"       extent: 100@100. "Tamaño del botón"ventana addMorph: boton. "Añadir el botón a la ventana"ventana openInWorld. "Abrir la ventana en el escritorio"! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_1: anObject	label_1 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_4	^ label_4! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!ventana_4: anObject	ventana_4 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:27'!ventana_2: anObject	ventana_2 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:27'!ventana_1: anObject	ventana_1 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_4: anObject	label_4 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_1	^ label_1! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_3: anObject	label_3 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_3	^ label_3! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!ventana_3	^ ventana_3! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!ventana_3: anObject	ventana_3 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!ventana_4	^ ventana_4! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_2: anObject	label_2 := anObject! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:31'!label_2	^ label_2! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:27'!ventana_2	^ ventana_2! !!Interfaz methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:27'!ventana_1	^ ventana_1! !!Interfaz methodsFor: 'mostrar' stamp: 'mica 11/24/2024 12:33'!crearVentanaRota:anNumber	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.(anNumber =1 ) ifTrue: [  	    "Ventana 1: Izquierda"    ventana_4:= Morph  new.    ventana_4 color: Color green.    ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/pim.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 1450)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: 'Gamer Over'.    label_4 color: Color red.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_4 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_4 addMorph: label_4.    ventana_4 openInWorld.].(anNumber =2) ifTrue: [      "Ventana 2: Más a la derecha"    ventana_4 := Morph new.    ventana_4 color: Color green.	ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/pimDerecha.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: 'Gamer over'.    label_4 color: Color red.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_4 addMorph: label_4.    ventana_4 openInWorld.].! !Object subclass: #Jugador	instanceVariableNames: 'nombre casillas adversarios estado escudo cañon racha'	classVariableNames: ''	package: 'Paradigmas 2024'!!Jugador commentStamp: 'SuarezGonzalo 10/11/2024 17:10' prior: 0!Clase Jugador    Instance Variables	dueño:		<Object>	vecinos:		<Object>    Implementation Points!!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 20:40'!casillas^casillas.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/5/2024 17:07'!nombre^nombre.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/9/2024 19:32'!adversarios ^adversarios.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 21:03'!obtenerY:nroCasilla^((casillas at:nroCasilla )at:2)! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 21:03'!obtenerX:nroCasilla^((casillas at:nroCasilla )at:1)! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/9/2024 18:28'!eliminarCasilla: xcasillas remove: x ifAbsent: [ Error signal: 'Error la casilla no pertenece al jugador' ].! !!Jugador methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 10:38'!cañon	^cañon.! !!Jugador methodsFor: 'accessing' stamp: 'mica 11/16/2024 17:43'!estado	^ estado! !!Jugador methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 10:38'!escudo	^escudo.! !!Jugador methodsFor: 'initialize' stamp: 'SuarezGonzalo 10/31/2024 19:50'!crearJugador: nombreJugador x:x y:ynombre :=nombreJugador .casillas:= OrderedCollection new.casillas add:(Array with:x with:y)! !!Jugador methodsFor: 'initialize' stamp: 'Gonzalo 11/21/2024 20:54'!initialize 	nombre:='Unkown Player'.	escudo:=false.	cañon :=false.	racha:=0.	casillas:=OrderedCollection new.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/9/2024 13:26'!agregarCasilla: xcasillas add:x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 10/31/2024 19:43'!nombre:xnombre:=x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/5/2024 19:01'!adversarios: listaadversarios :=lista.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 10:42'!escudo:x	escudo:=x.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 21:09'!aumentarRacha racha:=racha +1.	(racha=5)ifTrue:[self agregarPowerUp].! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 10:41'!cañon:x	cañon:=x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 10/31/2024 19:44'!casilla: xcasillas add:x.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/23/2024 21:14'!agregarPowerUp	| respuesta |	racha :=0.UIManager default message:'El ',nombre ,' obtuvo una racha de 5 victorias'.respuesta := UIManager default    chooseFrom: #('Escudo' 'Cañon')    message: 'Elija PowerUp',String cr,'Escudo : proteje todas tus casillas ante una captura',String cr,'Cañon: permite atacar a cualquier casilla del tablero'.    "Procesar la respuesta"respuesta ifNotNil: [    (respuesta = 1)ifTrue: [ 			escudo:=true.	 ].	(respuesta = 2)ifTrue: [ 			cañon :=true.				 ].] ifNil: [    Transcript show: 'No se seleccionó ninguna opción'; cr.	self agregarPowerUp.].! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/9/2024 18:21'!estado:x	estado:=x.! !Object subclass: #Pregunta	instanceVariableNames: 'opcion preguntaAleatoria respuestas resultado correcta pregunta nroPregunta frase listaPreguntas j1 j2 band1 rtaPlayer t'	classVariableNames: ''	package: 'Paradigmas 2024'!!Pregunta commentStamp: 'mica 11/4/2024 21:42' prior: 0!-Toma la pregunta, opciones y respuesta correcta de una archivo .txt-Muestra la pregunta y permite al jugador contestar a traves de opciones.!!Pregunta methodsFor: 'control' stamp: 'mica 11/22/2024 02:06'!verificarPreguntaRepetidas|band| "QUE VERIFIQUE EN UNA INSTANCIA DE DUELO, NO EN TODO EL JUEGO"band:= true.[band] whileTrue:[ 	preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.	nroPregunta:= (preguntaAleatoria substrings) first.		(listaPreguntas isEmpty)	ifTrue:[		listaPreguntas add: nroPregunta. band:= false]	ifFalse: [ 		(listaPreguntas size = frase size) 						ifTrue:[ band:= false]						ifFalse:[ 							(listaPreguntas includes: nroPregunta)							ifFalse:[									listaPreguntas add: nroPregunta. band:= false]							ifTrue:[								band:= true							]						] 				]].! !!Pregunta methodsFor: 'control' stamp: 'mica 11/21/2024 22:08'!verificarPreguntaRepetidaEn: listaPreguntas|band| "QUE VERIFIQUE EN UNA INSTANCIA DE DUELO, NO EN TODO EL JUEGO"band:= true.[band] whileTrue:[ 	preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.	nroPregunta:= (preguntaAleatoria substrings) first.	(listaPreguntas isEmpty)	ifTrue:[		listaPreguntas add: nroPregunta. band:= false]	ifFalse: [ 		(listaPreguntas size = frase size) 						ifTrue:[ band:= false]						ifFalse:[ 							(listaPreguntas includes: nroPregunta)							ifFalse:[									listaPreguntas add: nroPregunta. band:= false]							ifTrue:[								band:= true							]						] 				]]! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/5/2024 18:09'!resultado	^ resultado! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 00:56'!listaPreguntas	^ listaPreguntas! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:55'!t	^ t! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:10'!rtaPlayer	^ rtaPlayer! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:35'!preguntaAleatoria	^ preguntaAleatoria! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:05'!band1: anObject	band1 := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 00:56'!listaPreguntas: anObject	listaPreguntas := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!correcta: anObject	correcta := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:02'!nroPregunta	^ nroPregunta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!pregunta: anObject	pregunta := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j1	^ j1! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!correcta	^ correcta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/5/2024 18:09'!resultado: anObject	resultado := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j2	^ j2! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:05'!band1	^ band1! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:02'!nroPregunta: anObject	nroPregunta := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:35'!preguntaAleatoria: anObject	preguntaAleatoria := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:55'!t: anObject	t := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!pregunta	^ pregunta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/3/2024 19:23'!opcion: anObject	opcion := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:48'!respuestas	^ respuestas! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/3/2024 19:18'!opcion	^ opcion! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:12'!frase: anObject	frase := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 09:39'!ponerPregunta:cat"toma la linea guardada en el atributo preguntaAleatoria""divide la linea en 3 partes: pregunta, opciones y respuesta correcta""ejemplo de linea .txt:" "¿Quién fue el primer presidente de los Estados Unidos?A) Abraham Lincoln%B) George Washington%C) Thomas Jefferson%D) John Adams% B"|restoPregunta opciones signo ops pregSubstring| ops:= ''.signo:='?'.pregunta:=''.respuestas := OrderedCollection new.nroPregunta:= (preguntaAleatoria substrings)first.correcta := (preguntaAleatoria substrings) last.  "Toma solo el ultimo string de toda la frase. Es la respuesta correcta"pregSubstring := (preguntaAleatoria) allButFirst: 3.pregunta:= ( pregSubstring copyUpToSubstring: signo). "copia solo la pregunta sin el signo '?'" restoPregunta := preguntaAleatoria copyAfterLast: $?. "copia el resto despues de '?'"opciones:= restoPregunta allButLast. "copia solo las opciones sin la respuesta ni pregunta"opciones do: [ :i| (i~= $%)ifTrue:[ops:=ops, (i asString)] "recorre la secuencia y acumula los caracteres hasta encontrar %"		ifFalse:[		respuestas add: (ops asString). "cuando llega a un % guarda lo acumulado en el atributo respuestas (definido como OrderedCollection)"		ops:=''.			].		].respuestas add: 'PASAR'.! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:10'!rtaPlayer: anObject	rtaPlayer := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j2: anObject	j2 := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:55'!llamarPregunta: categoria	(categoria = 'deporte' ) ifTrue:[self elegirPregunta: 1].(categoria = 'historia' ) ifTrue:[self elegirPregunta: 2].(categoria = 'arte' ) ifTrue:[self elegirPregunta: 3].(categoria = 'geografia' ) ifTrue:[self elegirPregunta: 4].(categoria = 'ciencia' ) ifTrue:[self elegirPregunta: 5].self ponerPregunta: categoria.self mostrarPregunta:categoria. ! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:48'!respuestas: anObject	respuestas := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:12'!frase	^ frase! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j1: anObject	j1 := anObject! !!Pregunta methodsFor: 'initialization' stamp: 'mica 11/22/2024 01:05'!elegirPregunta:categoriaCasilla"elige al azar una linea del archivo Pregunta.txt y la guarda en el atributo preguntaAleatoria "|archivo|archivo := FileSystem disk workingDirectory.(categoriaCasilla = 1)ifTrue:[frase:= ((archivo / 'DEPORTE.txt') contents lines)].(categoriaCasilla = 2)ifTrue:[frase:= ((archivo / 'HISTORIA.txt') contents lines)].(categoriaCasilla = 3)ifTrue:[frase:= ((archivo / 'ARTE.txt') contents lines)].(categoriaCasilla = 4)ifTrue:[frase:= ((archivo / 'GEOGRAFIA.txt') contents lines)].(categoriaCasilla = 5)ifTrue:[frase:= ((archivo / 'CIENCIA.txt') contents lines)].preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.self verificarPreguntaRepetidas! !!Pregunta methodsFor: 'showing' stamp: 'Gonzalo 11/23/2024 20:35'!mostrarPregunta: cat"muestra al jugador la pregunta con sus opciones.""guarda la respuesta en rtaPlayer y la compara con el parametro 'correcta'""segun coincida rtaPlayer y correcta, devuelve un cartelito de CORRECTO o INCORRECTO" |rtaNum nom|t ifTrue: [ self resultado: 0]ifFalse: [ band1 ifTrue: [nom:= j1]ifFalse: [ nom:= j2].Transcript show: 'Realizando pregunta ', (nroPregunta)  asString; cr.		rtaPlayer := UIManager default 		chooseFrom: respuestas 		message: nom,String cr,pregunta,'?'		title: 'DUELO',String cr,cat.Transcript show: 'rtaPlayer-->', rtaPlayer asString;cr.rtaNum := self opcionNumeroALetra: rtaPlayer.(correcta = (rtaNum))	ifTrue:[self resultado: 1]	ifFalse: [		(rtaPlayer = 5 )		ifTrue: [  			self resultado: 5]	 	ifFalse:[self resultado: 2]	].]	! !!Pregunta methodsFor: 'converting' stamp: 'mica 11/21/2024 02:41'!opcionNumeroALetra: a"convierte la respuesta del jugador en A, B, C, o D para luego""comparar con la respuesta correcta en mostrarPregunta:y:"|listaOpciones |listaOpciones := #('A' 'B' 'C' 'D' 0).^(listaOpciones at: a)! !Object subclass: #Tablero	instanceVariableNames: 'cantPlayers matriz listaJugadores tamañoMatriz ventana atacante defensor lista'	classVariableNames: ''	package: 'Paradigmas 2024'!!Tablero commentStamp: 'SuarezGonzalo 10/11/2024 13:25' prior: 0!Prueba para desarrollar una matriz con los casilleros    Instance Variables	cantPlayers:		<Object>    Implementation Points!!Tablero methodsFor: 'initialization' stamp: 'Gonzalo 11/23/2024 21:09'!iniciarJuego|nroAtacante listaAdversarios respuesta duelo contadorDuelos | contadorDuelos :=0.	duelo :=Duelos new.	self interfazCrearVentana.	Transcript show: '----INICIA EL JUEGO----';cr.	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.					[ cantPlayers > 1 ]whileTrue: [  	Transcript show:'Cantidad de Jugadores: ';show:cantPlayers;cr.	Transcript show: 'Jugador: ';show:(listaJugadores at:nroAtacante)nombre;show:' Selecciona a cual de las siguientes casillas atacar:';cr.	(contadorDuelos =10)ifTrue:[		nroAtacante:=(((self masCasillas at:1)nombre)findTokens:' ') last asInteger.		atacante :=listaJugadores at:nroAtacante.		defensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).		Transcript show: '----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----';cr.		self mensajeDueloExtra:(atacante nombre)y:(defensor dueño).		duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.		contadorDuelos :=0.		]	ifFalse:[			self mostrarAdversariosde: nroAtacante.	listaAdversarios:=(listaJugadores at:nroAtacante)adversarios.	Transcript show: '---COLUMNA---FILA---CATEGORIA---------JUGADOR---';cr.	1 to:(listaAdversarios size)do:[:i|		Transcript show: '      ';show:((listaAdversarios at:i)at:1);show:'      '.		Transcript show: ' ';show:((listaAdversarios at:i)at:2);show:' '.		Transcript show: '     ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:' '.		Transcript show: '   ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:' ';cr.		].	self coloresAtacante: (listaJugadores at:nroAtacante)casillas.	self coloresAdversarios: listaAdversarios.	self interfazCrearVentana.	self cargarBotones."INTERFAZ----------------------------------------------------------------"  	self coloresAzul.	respuesta  := UIManager default     chooseFrom: listaAdversarios    message: 'Elige un contrincante'    title: 'DUELO'.  ventana delete.defensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. contadorDuelos :=contadorDuelos +1.].(duelo perdedor = 1)ifTrue:[	self captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).	nroAtacante :=((defensor dueño)findTokens:' ') last asInteger.	atacante := listaJugadores at:nroAtacante	]ifFalse: [ 	self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).	 ].(contadorDuelos  < 10)ifTrue:[respuesta  := UIManager default     chooseFrom: #('Seguir Atacando' 'Pasar Turno')    message: '¿Desea seguir atacando?'    title: 'DUELO'.(respuesta = 2)ifTrue:[	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.	].]ifFalse:[nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.].].	 	 Transcript show: 'GAME OVER'; cr.	 Transcript show: 'El ganador es el jugador:';show:(atacante nombre); cr.! !!Tablero methodsFor: 'initialization' stamp: 'Gonzalo 11/20/2024 20:32'!tamañoDeLaMatriz|entrada numero|	entrada :=(UIManager default request:'Ingrese el tamaño de la matriz')asInteger.	entrada ifNotNil:[ 		(entrada isInteger)ifTrue: [  		numero:=entrada asInteger.]]	 ifNil: [ 		self error: 'Debe ingresar un numero valido'.		 ].	^numero.! !!Tablero methodsFor: 'initialization' stamp: 'Gonzalo 11/21/2024 15:32'!initialize 	|cont|	Transcript clear.	cont:=0.	tamañoMatriz:= self tamañoDeLaMatriz.	listaJugadores:= Array new:(tamañoMatriz * tamañoMatriz).		matriz := Array new: tamañoMatriz .	cantPlayers:=tamañoMatriz *tamañoMatriz .	1 to: tamañoMatriz  do:[:y| matriz at:y put:( Array new:tamañoMatriz)].	1 to: tamañoMatriz  do:[:y| 		1 to: tamañoMatriz  do:[:x| 			(matriz at:y) at:x put:(Casilla new).			(((matriz at:y)at:x))tamañoMatrizCasilla: tamañoMatriz.			cont:=cont+1.			((matriz at:y) at:x) dueñoInicial: (cont).			((matriz at:y) at:x) asignarCategoria.			(listaJugadores) at:cont put:(Jugador new).			(listaJugadores at:cont)nombre:(((matriz at:y) at:x)dueño).			(listaJugadores at:cont)agregarCasilla:(Array with:x with:y).			((matriz at:y) at:x) coordenadasX: x Y: y.			((matriz at:y) at:x) encontrarVecinos.						].		].	Transcript show: 'Se creo el tablero de forma exitosa';cr.! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 02:16'!lista: anObject	lista := anObject! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:24'!listaJugadores	^listaJugadores! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:53'!defensor: anObject	defensor := anObject! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:53'!defensor	^ defensor! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 02:16'!lista	^ lista! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 16:50'!matriz	^matriz.! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/5/2024 18:57'!casillaX:x Y:y^((matriz at:y)at:x)! !!Tablero methodsFor: 'interface'!interfazCrearVentana|boton|		ventana := Morph new.	ventana extent: (100*(tamañoMatriz) )@(100*(tamañoMatriz) ); "Tamaño de la ventana"        color: Color white. "Color de fondo"boton:=SimpleButtonMorph new.boton label:'X';	actionSelector: #delete;	target:ventana;	position:(tamañoMatriz *100)@(tamañoMatriz *100);	extent: 10@10.	ventana addMorph:boton.	ventana openInWorld. "Abrir la ventana en el escritorio"! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 16:14'!coloresAdversarios:listaAdversarios1 to: (listaAdversarios size)do:[:i|	(self casillaX: ((listaAdversarios at:i)at:1) Y: ((listaAdversarios at:i)at:2))colorRojo 	].! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/23/2024 20:49'!mensajeDueloExtra:jugadorA y:jugadorBUIManager default message:'Duelo entre titanes ',String cr,jugadorA,' se enfrentara al ',jugadorB.! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 19:40'!cargarBotones|texto |texto := TextMorph new.1 to: tamañoMatriz  do:[:i|	1 to: tamañoMatriz do:[:j|		(self casillaX: i Y:j)boton:SimpleButtonMorph new.		(self casillaX: i Y:j)boton label:'';  "Texto del botón"      		target: [ [ defensor:= self casillaX: i Y:j.self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: (defensor coordenadasX ) Y: (defensor coordenadasY)) ]]; "Acción al presionar"			color: ((self casillaX: i Y:j )color);    	  	actionSelector: #value; "El mensaje enviado al target"      		position: (100*(i-1))@(100*(j-1)); "Posición dentro de la ventana"      		extent: 100@100. "Tamaño del botón"		texto contents: ((self casillaX: i Y:j)dueño), String crlf, ((self casillaX: i Y:j)categoria) ,String crlf,     'Posición: (', i asString, ',', j asString, ')'; "Texto en dos líneas"       	color: Color black;       	font: (TextStyle default fontAt: 12);       	center: (self casillaX: i Y:j)boton bounds center. "Centrar el texto dentro del botón"		(self casillaX: i Y:j )boton addMorph: texto. "Añadir el texto al botón"		ventana addMorph:(self casillaX: i Y:j)boton . "Añadir el botón a la ventana"		texto:=TextMorph new.		].	]. ! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 16:19'!coloresAtacante:listaAtacante1 to: (listaAtacante  size)do:[:i|	(self casillaX: ((listaAtacante  at:i)at:1) Y: ((listaAtacante at:i)at:2))colorAmarillo 	].! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 16:38'!coloresAzul	1 to:tamañoMatriz  do:[:i|		1 to:tamañoMatriz  do:[:j|		 (self casillaX: i Y:j)colorAzul. 		]. 		] ! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/20/2024 21:20'!buscarJugador	| indice colection valor |	colection := (1 to: tamañoMatriz * tamañoMatriz) asOrderedCollection.	[ 	indice := colection at: (Random new nextInteger: colection size).	valor := (listaJugadores at: indice) estado.	valor = 'ELIMINADO' ] whileTrue: [  ].	^ indice! !!Tablero methodsFor: 'search' stamp: 'SuarezGonzalo 11/9/2024 18:06'!transferirDe:nombreJugador2 A:nombreJugador1 laCeldaX: x Y: y|coordenadas nroJugador2 nroJugador1 |Transcript show: 'se ejecuto la transeferencia de celdas';cr.coordenadas:=(Array with: x with:y ).nroJugador2  := (nombreJugador2  findTokens: ' ') last asInteger.nroJugador1  := (nombreJugador1  findTokens: ' ') last asInteger.(listaJugadores at:nroJugador2)eliminarCasilla: (Array with:x with: y).(listaJugadores at:nroJugador1)agregarCasilla: coordenadas.(((listaJugadores at:nroJugador2)casillas )isEmpty)ifTrue: [ self eliminarJugador: (listaJugadores at:nroJugador2) ].! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/23/2024 18:58'!masCasillas|mayores primero segundo|primero:=0.segundo:=0.mayores:= Array new:2.1 to:(tamañoMatriz*tamañoMatriz)do:[:i|	(primero < ((listaJugadores at:i)casillas )size)ifTrue:[		primero:=((listaJugadores at:i)casillas )size.		mayores at:1 put: ((listaJugadores at:i))		]ifFalse:[		(segundo < ((listaJugadores at:i)casillas )size)ifTrue:[		segundo :=((listaJugadores at:i)casillas )size.		mayores at:2 put: ((listaJugadores at:i))		]			].].^(mayores).! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/21/2024 20:25'!mostrarAdversariosde: nroJugador	| listaAdversarios cantCasillas x y |		listaAdversarios  := OrderedCollection new.	cantCasillas := ((listaJugadores at: nroJugador) casillas )size.		((listaJugadores at:nroJugador)cañon = false)ifTrue:[	1to:(cantCasillas)do:[:i|				x:=(((listaJugadores at:nroJugador)casillas)at:i)at:1.		y:=(((listaJugadores at:nroJugador)casillas) at:i)at:2.				(x>1)ifTrue:[			(((self casillaX:(x-1) Y:y)dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x-1) with:(y)))ifFalse:[				listaAdversarios  add:(Array with: (x-1) with:(y)).				].				].				].					(x<tamañoMatriz )ifTrue:[								(((self casillaX:(x+1) Y:(y))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x+1) with:(y)))ifFalse:[				listaAdversarios  add:(Array with: (x+1) with:(y)).].				].				].					(y>1)ifTrue:[						(((self casillaX:x Y:(y-1))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x) with:(y-1)))ifFalse:[				listaAdversarios  add:(Array with: (x) with:(y-1)).				].				].			].		(y<tamañoMatriz )ifTrue:[			(((self casillaX:x Y:(y+1))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x) with:(y+1)))ifFalse:[				listaAdversarios  add:(Array with: (x) with:(y+1)).				].			]. ].].]ifFalse: [ 	(listaJugadores at:nroJugador)cañon:false. 	1 to: tamañoMatriz do:[:i|		1 to: tamañoMatriz do:[:j|			(((self casillaX:i Y:(j))dueño )~=(listaJugadores at:nroJugador)nombre)ifTrue:[				listaAdversarios  add:(Array with: (i) with:(j)).						].		].].].(listaJugadores at:(nroJugador))adversarios: listaAdversarios .^listaAdversarios.! !!Tablero methodsFor: 'changing state' stamp: 'SuarezGonzalo 11/9/2024 19:43'!eliminarJugador: objetoJugador objetoJugador estado: 'ELIMINADO'.	cantPlayers :=cantPlayers -1.! !!Tablero methodsFor: 'changing state' stamp: 'Gonzalo 11/21/2024 22:09'!captura: casilla1 a: casilla2| nombreCapturado nombreCapturador xCapturado yCapturado nroCapturador nroCapturado|xCapturado := casilla2 coordenadasX.yCapturado := casilla2 coordenadasY.nombreCapturado := casilla2 dueño.nombreCapturador := casilla1 dueño.nroCapturado:=((casilla2 dueño)findTokens:' ') last asInteger.((listaJugadores at:nroCapturado)escudo = false)ifTrue:[casilla2 dueño: casilla1 dueño.self transferirDe: nombreCapturado A: nombreCapturador laCeldaX: xCapturado Y: yCapturado.xCapturado > 1 ifTrue: [    ((self casillaX: xCapturado - 1 Y: yCapturado) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado - 1 Y: yCapturado)]].xCapturado < tamañoMatriz  ifTrue: [    ((self casillaX: xCapturado + 1 Y: yCapturado) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado + 1 Y: yCapturado)]].yCapturado > 1 ifTrue: [    ((self casillaX: xCapturado Y: yCapturado - 1) dueño = nombreCapturado)        ifTrue: [self captura: casilla1 a: (self casillaX: xCapturado Y: yCapturado - 1)]].yCapturado < tamañoMatriz  ifTrue: [    ((self casillaX: xCapturado Y: yCapturado + 1) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado Y: yCapturado + 1)]].nroCapturador := ((casilla1 dueño)findTokens:' ') last asInteger.(listaJugadores at:nroCapturador)aumentarRacha.]ifFalse:[UIManager default message:((nombreCapturado),' uso su escudo, sus celdas fueron protegidas').(listaJugadores at: nroCapturado )escudo: false.].! !Object subclass: #Timer	instanceVariableNames: 'timer_1 timer_2 proceso turno perdedor fin j1name j2name ventanas'	classVariableNames: ''	package: 'Paradigmas 2024'!!Timer commentStamp: 'Gonzalo 11/23/2024 18:13' prior: 0!- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	fin:		<Object>	j1name:		<Object>	j2name:		<Object>	label_1:		<Object>	label_2:		<Object>	perdedor:		<Object>	proceso:		<Object>	timer_1:		<Object>	timer_2:		<Object>	turno:		<Object>	ventana_1:		<Object>	ventana_2:		<Object>    Implementation Points!!Timer methodsFor: 'initialization' stamp: 'mica 11/22/2024 13:01'!restarSegundos:anPlayer "1 o 2"		(anPlayer  = 1) ifTrue: [ timer_1 :=timer_1 - 2 ].		(anPlayer  = 2) ifTrue: [ timer_2 :=timer_2 - 2 ].! !!Timer methodsFor: 'initialization' stamp: 'IngPepeGrillo 11/19/2024 23:03'!detener    proceso ifNotNil: [         proceso terminate.        proceso := nil.         ]! !!Timer methodsFor: 'initialization' stamp: 'IngPepeGrillo 11/19/2024 23:04'!turno:anValue    turno:=anValue .! !!Timer methodsFor: 'initialization' stamp: 'mica 11/24/2024 12:56'!iniciar:jugadorInicial            |uno_sin_tiempo|				self ventanas: Interfaz new.				fin:= false.            uno_sin_tiempo :=false.				self fin:false.            turno:=jugadorInicial .            self ventanas crearVentana.    proceso := [                   [ uno_sin_tiempo ] whileFalse: [                  "va a ver si alguien se quedo sin tiempo"            (   (timer_1=0) | (timer_2=0) ) ifTrue: [ uno_sin_tiempo :=true ].            (Delay forSeconds: 1) wait.             "creamos 1 sola vez la ventana"            "(timer_1 = 5 )ifTrue: [self crearVentana]."            "vamos escribiendo los 2 tiempos sobre las 2 ventanas "          self ventanas label_1 contents: j1name , String cr, 'Segundos: ', timer_1 printString.          self ventanas label_2 contents: j2name , String cr, 'Segundos: ', timer_2 printString.                "veo de quien es el turno"                (turno=1) ifTrue: [ timer_1 := timer_1  - 1]                ifFalse: [ timer_2 := timer_2 -1 ]                                .                   "eliminamos la ventana"                                                                (timer_1 <=0) ifTrue: [							self perdedor: 1.							self fin:true.                    (Delay forSeconds: 1) wait.                 self  ventanas label_1 contents: 'Time is Over'.                  self ventanas  label_2 contents: 'You won this battle'.                   self  ventanas ventana_1 color: Color red.                   self  ventanas ventana_2 color: Color green.						self ventanas crearVentanaRota: 1."                    (Delay forSeconds: 2) wait.                     ventana_1 delete.                    ventana_1 := nil.                          ventana_2 delete.                    ventana_2 := nil."							"Aca perdio el jugador 1"							"tratamiento"							                                ].                                              (timer_2 <=0) ifTrue: [							self perdedor: 2.							self fin:true.                    (Delay forSeconds: 1) wait.	                self  ventanas   label_1 contents: 'You won this battle'.                   self    ventanas   label_2 contents: 'Time is Over'.                    self   ventanas ventana_1 color: Color green.                    self   ventanas ventana_2 color: Color red .						self ventanas crearVentanaRota: 2.						"Aca perdio el jugador 2"						"iniciar tratamiento"                                ].					          		].         ] fork. ! !!Timer methodsFor: 'initialization' stamp: 'mica 11/22/2024 14:16'!initialize     timer_1 :=10.    timer_2:=10.    proceso:=nil.! !!Timer methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:31'!timer_1: anObject	timer_1 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j1name	^ j1name! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!proceso: anObject	^ proceso := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!timer_2	^ timer_2! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j2name	^ j2name! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!turno	^ turno! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j2name: anObject	j2name := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j1name: anObject	j1name := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:46'!fin	^ fin! !!Timer methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:46'!ventanas	^ ventanas! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!proceso	^ proceso! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:12'!perdedor	^ perdedor! !!Timer methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:31'!timer_1	^ timer_1! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:12'!perdedor: anObject	perdedor := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!timer_2: anObject	timer_2 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:46'!fin: anObject	fin := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/24/2024 12:46'!ventanas: anObject	ventanas := anObject! !----End fileIn----!!Interfaz methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 16:10' prior: 33661281!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1450)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Interfaz methodsFor: 'mostrar' stamp: 'TiagoBernal 11/24/2024 16:10' prior: 33665845!crearVentanaRota:anNumber	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.(anNumber =1 ) ifTrue: [  	    "Ventana 1: Izquierda"    ventana_4:= Morph  new.    ventana_4 color: Color green.    ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/derrota.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 1450)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: 'Gamer Over'.    label_4 color: Color red.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_4 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_4 addMorph: label_4.    ventana_4 openInWorld.].(anNumber =2) ifTrue: [      "Ventana 2: Más a la derecha"    ventana_4 := Morph new.    ventana_4 color: Color green.	ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/derrota.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: 'Gamer over'.    label_4 color: Color red.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_4 addMorph: label_4.    ventana_4 openInWorld.].! !----QUIT----2024-11-24T16:10:49.644-03:00 Tiago.image priorSource: 100!!Interfaz methodsFor: 'mostrar' stamp: 'TiagoBernal 11/24/2024 16:11' prior: 33700907!crearVentanaRota:anNumber	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.(anNumber =1 ) ifTrue: [  	    "Ventana 1: Izquierda"    ventana_4:= Morph  new.    ventana_4 color: Color green.    ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/derrota.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 1450)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: 'Gamer Over'.    label_4 color: Color red.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_4 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_4 addMorph: label_4.    ventana_4 openInWorld.].(anNumber =2) ifTrue: [      "Ventana 2: Más a la derecha"    ventana_4 := Morph new.    ventana_4 color: Color green.	ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/derrota.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: 'Gamer over'.    label_4 color: Color red.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_4 addMorph: label_4.    ventana_4 openInWorld.].! !!Interfaz methodsFor: 'mostrar' stamp: 'TiagoBernal 11/24/2024 16:11' prior: 33702756!crearVentanaRota: anNumber	| screenWidth screenHeight |	screenWidth := Display width.	screenHeight := Display height.	anNumber = 1 ifTrue: [ 		ventana_4 := Morph new.		ventana_4 color: Color green.		ventana_4 := (ImageReadWriter formFromFileNamed:			              'picturesParaPharo/derrota.png') asMorph.		ventana_4 extent: 200 @ 100.		ventana_4 position: screenWidth - 1450 @ (screenHeight // 2 - 50).		label_4 := TextMorph new.		label_4 contents: 'Gamer Over'.		label_4 color: Color red.		label_4 position: ventana_4 bounds origin + (170 @ 100).		label_4 font: (LogicalFont familyName: 'Arial' pointSize: 50).		ventana_4 addMorph: label_4.		ventana_4 openInWorld ].	anNumber = 2 ifFalse: [ ^ self ].	ventana_4 := Morph new.	ventana_4 color: Color green.	ventana_4 := (ImageReadWriter formFromFileNamed:		              'picturesParaPharo/derrota.png') asMorph.	ventana_4 extent: 200 @ 100.	ventana_4 position: screenWidth - 320 @ (screenHeight // 2 - 50).	label_4 := TextMorph new.	label_4 contents: 'Gamer over'.	label_4 color: Color red.	label_4 position: ventana_4 bounds origin + (170 @ 100).	ventana_4 addMorph: label_4.	ventana_4 openInWorld! !!Interfaz methodsFor: 'mostrar' stamp: 'TiagoBernal 11/24/2024 16:12' prior: 33704533!crearVentanaRota:anNumber	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.(anNumber =1 ) ifTrue: [  	    "Ventana 1: Izquierda"    ventana_4:= Morph  new.    ventana_4 color: Color green.    ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/derrota.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 1450)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: 'Gamer Over'.    label_4 color: Color red.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_4 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_4 addMorph: label_4.    ventana_4 openInWorld.].(anNumber =2) ifTrue: [      "Ventana 2: Más a la derecha"    ventana_4 := Morph new.    ventana_4 color: Color green.	ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/derrota.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: 'Gamer over'.    label_4 color: Color red.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_4 addMorph: label_4.    ventana_4 openInWorld.].! !!Interfaz methodsFor: 'mostrar' stamp: 'TiagoBernal 11/24/2024 16:12' prior: 33705805!crearVentanaRota:anNumber	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.(anNumber =1 ) ifTrue: [  	    "Ventana 1: Izquierda"    ventana_4:= Morph  new.    ventana_4 color: Color green.    ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/derrota.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 1450)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: 'Gamer Over'.    label_4 color: Color red.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_4 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_4 addMorph: label_4.    ventana_4 openInWorld.].(anNumber =2) ifTrue: [      "Ventana 2: Más a la derecha"    ventana_4 := Morph new.    ventana_4 color: Color green.	ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/derrota.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: 'Gamer over'.    label_4 color: Color red.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_4 addMorph: label_4.    ventana_4 openInWorld.].! !Smalltalk globals removeClassNamed: #AnObsoleteTablero!Smalltalk globals removeClassNamed: #AnObsoleteCasilla!Smalltalk globals removeClassNamed: #AnObsoleteInterfaz!Smalltalk globals removeClassNamed: #AnObsoletePregunta!Smalltalk globals removeClassNamed: #AnObsoleteTimer!Smalltalk globals removeClassNamed: #AnObsoleteDuelos!Smalltalk globals removeClassNamed: #AnObsoleteJugador!Object subclass: #Casilla	instanceVariableNames: 'dueño color tema coordenadasX coordenadasY vecinos categoria pregunta boton'	classVariableNames: 'TamañoMatriz'	package: 'Paradigmas 2024'!!Casilla commentStamp: 'SuarezGonzalo 10/11/2024 13:33' prior: 0!Implementation Points!!Casilla methodsFor: 'add/remove' stamp: 'Gonzalo 11/20/2024 12:26'!encontrarVecinosvecinos:=(OrderedCollection new).(coordenadasX >1)ifTrue:[vecinos add:(Array with: (coordenadasX -1) with: coordenadasY )].(coordenadasX <TamañoMatriz )ifTrue:[vecinos add:(Array with: (coordenadasX +1) with: coordenadasY )].(coordenadasY >1)ifTrue:[vecinos add:(Array with: coordenadasX with: (coordenadasY -1))].(coordenadasY <TamañoMatriz )ifTrue:[vecinos add:(Array with: coordenadasX with: (coordenadasY +1))].! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!categoria: anObject	categoria := anObject! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!categoria	^ categoria! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 16:04'!color	^color.! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 18:22'!vecinos	^ vecinos! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!pregunta	^ pregunta! !!Casilla methodsFor: 'accessing'!asignarCategoria"1 --Hisoria		2--Deporte	3--Geografia 4--Arte 5--ciencia"|listaCategoria|listaCategoria := #('historia' 'deporte' 'geografia' 'arte' 'ciencia').categoria:=  (listaCategoria at: (1 to: listaCategoria size)atRandom)! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/14/2024 18:46'!llamarPregunta(categoria = 'historia' ) ifTrue:[pregunta elegirPregunta: 1].(categoria = 'deporte' ) ifTrue:[pregunta elegirPregunta: 2].(categoria = 'geografia' ) ifTrue:[pregunta elegirPregunta: 3].(categoria = 'arte' ) ifTrue:[pregunta elegirPregunta: 4].(categoria = 'ciencia' ) ifTrue:[pregunta elegirPregunta: 5].pregunta ponerPregunta.pregunta mostrarPregunta: categoria. ! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/20/2024 12:30'!tamañoMatrizCasilla^TamañoMatriz.! !!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:02'!coordenadasY	^coordenadasY   ! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 12:18'!boton^boton.! !!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:02'!coordenadasX	^coordenadasX  ! !!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 16:46'!dueño^dueño! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!pregunta: anObject	pregunta := anObject! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 18:22'!vecinos: anObject	vecinos := anObject! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 12:17'!boton:xboton:=x! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:05'!colorAzul	color:=Color blue.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:06'!colorAmarillo	color:=Color yellow.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/20/2024 12:30'!tamañoMatrizCasilla:xTamañoMatriz :=x.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:05'!colorRojo	color:=Color red.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 16:53'!dueño:valor	dueño:=valor .! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/26/2024 17:56'!coordenadasX: valorX Y:valorY coordenadasX :=valorX.coordenadasY :=valorY.! !!Casilla methodsFor: 'initialization' stamp: 'Gonzalo 11/21/2024 16:01'!initialize color:=Color blue.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 16:54'!dueñoInicial:valordueño := 'Jugador ',(valor asString).! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 17:01'!coordenadasXY: valorX and:valorY coordenadasX :=valorX.coordenadasY :=valorY.! !Object subclass: #Duelos	instanceVariableNames: 'timer bandJugador1 perdedor categoria'	classVariableNames: ''	package: 'Paradigmas 2024'!!Duelos commentStamp: 'mica 11/5/2024 02:40' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages.- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	jugador1:		<Object>	jugador2:		<Object>    Implementation Points!!Duelos methodsFor: 'initialization' stamp: 'mica 11/23/2024 20:03'!pasarPreguntabandJugador1					ifTrue: [ 						self timer restarSegundos: 1. 						Transcript							show: '1';							cr.]					ifFalse: [ 						self timer restarSegundos: 2.						Transcript							show: '2';							cr.							]! !!Duelos methodsFor: 'initialization' stamp: 'a 11/24/2024 15:41'!iniciarDueloEntre: player1 y: player2 categoria: player2cat dueloExtra: arg1	| pregunta|	timer := Timer new.	timer j1name: player1 .	timer j2name: player2 .	pregunta := Pregunta new.	pregunta j1: player1.	pregunta j2: player2.	pregunta listaPreguntas: OrderedCollection new.	pregunta t: false.	bandJugador1 := true.	pregunta band1: true.	self timer iniciar: 1.	categoria := player2cat.		[ self timer fin ] whileFalse: [ 		self dueloExtra: arg1.		pregunta llamarPregunta: categoria.		pregunta resultado = 5 ifTrue: [ self pasarPregunta ].		pregunta resultado = 1 ifTrue: [ 			self pasarTurno:player1 a:player2.			pregunta band1: bandJugador1 ].		pregunta resultado = 2 ifTrue: [ 			Transcript				show: '------->>   INCORRECTO';				cr.			[ 			pregunta resultado = 1 | (pregunta resultado = 5)			| (pregunta resultado = 0) ] whileFalse: [ 				self timer timer_1 <= 0 | (self timer timer_2 <= 0) ifTrue: [ 					pregunta t: true ].				pregunta mostrarPregunta: self categoria ].			pregunta resultado = 5 ifTrue: [ self pasarPregunta ].			pregunta resultado = 1 ifTrue: [ 				self pasarTurno:player1 a:player2.				pregunta band1: bandJugador1 ] ].].Transcript show: 'PERDEDOR Player ',timer perdedor asString;					cr.(timer ventana_1) delete.(timer ventana_2) delete. (timer ventana_3) delete. self perdedor: timer perdedor! !!Duelos methodsFor: 'extra' stamp: 'mica 11/23/2024 19:46'!dueloExtra: powerUp|listaCat|listaCat := #('historia' 'deporte' 'geografia' 'arte' 'ciencia').(powerUp)ifTrue: [ self categoria: (listaCat at: ((1 to: listaCat size)atRandom))]! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:58'!perdedor	^ perdedor! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:24'!bandJugador1: anObject	bandJugador1 := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:57'!perdedor: anObject	perdedor := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:19'!timer	^ timer! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:24'!bandJugador1	^ bandJugador1! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 19:16'!categoria: anObject	categoria := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 19:16'!categoria	^ categoria! !!Duelos methodsFor: 'accessing' stamp: 'Gonzalo 11/23/2024 21:47'!pasarTurno:jugador1 a:jugador2bandJugador1						ifTrue: [ 							"UIManager default message:'Es el turno del ',jugador2 ."							Transcript								show: '1';								cr.						timer turno: 2.						bandJugador1 := false					]					ifFalse: [ 						"UIManager default message:'Es el turno del ',jugador1 ."						Transcript							show: '2';							cr.						timer turno: 1.						bandJugador1 := true.					]! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:19'!timer: anObject	timer := anObject! !Object subclass: #Interfaz	instanceVariableNames: 'accionMouse'	classVariableNames: ''	package: 'Paradigmas 2024'!!Interfaz commentStamp: 'Gonzalo 11/23/2024 18:13' prior: 0!- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	accionMouse:		<Object>    Implementation Points!!Interfaz methodsFor: 'initialization' stamp: 'Gonzalo 11/21/2024 12:16'!initialize | ventana boton |ventana := Morph new.ventana extent: 600@600; "Tamaño de la ventana"        color: Color white. "Color de fondo"boton := SimpleButtonMorph new.boton label: 'Presióname'; "Texto del botón"       target: [ Transcript show: '¡Botón presionado!!'; cr ]; "Acción al presionar"       actionSelector: #value; "El mensaje enviado al target"       position: 00@00; "Posición dentro de la ventana"       extent: 100@100. "Tamaño del botón"ventana addMorph: boton. "Añadir el botón a la ventana"ventana openInWorld. "Abrir la ventana en el escritorio"! !Object subclass: #Jugador	instanceVariableNames: 'nombre casillas adversarios estado escudo cañon racha'	classVariableNames: ''	package: 'Paradigmas 2024'!!Jugador commentStamp: 'SuarezGonzalo 10/11/2024 17:10' prior: 0!Clase Jugador    Instance Variables	dueño:		<Object>	vecinos:		<Object>    Implementation Points!!Jugador methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 10:38'!cañon	^cañon.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/5/2024 17:07'!nombre^nombre.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/9/2024 18:28'!eliminarCasilla: xcasillas remove: x ifAbsent: [ Error signal: 'Error la casilla no pertenece al jugador' ].! !!Jugador methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 10:38'!escudo	^escudo.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/9/2024 19:32'!adversarios ^adversarios.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 20:40'!casillas^casillas.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 21:03'!obtenerY:nroCasilla^((casillas at:nroCasilla )at:2)! !!Jugador methodsFor: 'accessing' stamp: 'mica 11/16/2024 17:43'!estado	^ estado! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 21:03'!obtenerX:nroCasilla^((casillas at:nroCasilla )at:1)! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 10:42'!escudo:x	escudo:=x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/5/2024 19:01'!adversarios: listaadversarios :=lista.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/9/2024 13:26'!agregarCasilla: xcasillas add:x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 10/31/2024 19:44'!casilla: xcasillas add:x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/9/2024 18:21'!estado:x	estado:=x.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 21:09'!aumentarRacha racha:=racha +1.	(racha=5)ifTrue:[self agregarPowerUp].! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/23/2024 21:14'!agregarPowerUp	| respuesta |	racha :=0.UIManager default message:'El ',nombre ,' obtuvo una racha de 5 victorias'.respuesta := UIManager default    chooseFrom: #('Escudo' 'Cañon')    message: 'Elija PowerUp',String cr,'Escudo : proteje todas tus casillas ante una captura',String cr,'Cañon: permite atacar a cualquier casilla del tablero'.    "Procesar la respuesta"respuesta ifNotNil: [    (respuesta = 1)ifTrue: [ 			escudo:=true.	 ].	(respuesta = 2)ifTrue: [ 			cañon :=true.				 ].] ifNil: [    Transcript show: 'No se seleccionó ninguna opción'; cr.	self agregarPowerUp.].! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 10/31/2024 19:43'!nombre:xnombre:=x.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 10:41'!cañon:x	cañon:=x.! !!Jugador methodsFor: 'initialize' stamp: 'SuarezGonzalo 10/31/2024 19:50'!crearJugador: nombreJugador x:x y:ynombre :=nombreJugador .casillas:= OrderedCollection new.casillas add:(Array with:x with:y)! !!Jugador methodsFor: 'initialize' stamp: 'Gonzalo 11/21/2024 20:54'!initialize 	nombre:='Unkown Player'.	escudo:=false.	cañon :=false.	racha:=0.	casillas:=OrderedCollection new.! !Object subclass: #Pregunta	instanceVariableNames: 'opcion preguntaAleatoria respuestas resultado correcta pregunta nroPregunta frase listaPreguntas j1 j2 band1 rtaPlayer t'	classVariableNames: ''	package: 'Paradigmas 2024'!!Pregunta commentStamp: 'mica 11/4/2024 21:42' prior: 0!-Toma la pregunta, opciones y respuesta correcta de una archivo .txt-Muestra la pregunta y permite al jugador contestar a traves de opciones.!!Pregunta methodsFor: 'converting' stamp: 'mica 11/21/2024 02:41'!opcionNumeroALetra: a"convierte la respuesta del jugador en A, B, C, o D para luego""comparar con la respuesta correcta en mostrarPregunta:y:"|listaOpciones |listaOpciones := #('A' 'B' 'C' 'D' 0).^(listaOpciones at: a)! !!Pregunta methodsFor: 'showing' stamp: 'Gonzalo 11/23/2024 20:35'!mostrarPregunta: cat"muestra al jugador la pregunta con sus opciones.""guarda la respuesta en rtaPlayer y la compara con el parametro 'correcta'""segun coincida rtaPlayer y correcta, devuelve un cartelito de CORRECTO o INCORRECTO" |rtaNum nom|t ifTrue: [ self resultado: 0]ifFalse: [ band1 ifTrue: [nom:= j1]ifFalse: [ nom:= j2].Transcript show: 'Realizando pregunta ', (nroPregunta)  asString; cr.		rtaPlayer := UIManager default 		chooseFrom: respuestas 		message: nom,String cr,pregunta,'?'		title: 'DUELO',String cr,cat.Transcript show: 'rtaPlayer-->', rtaPlayer asString;cr.rtaNum := self opcionNumeroALetra: rtaPlayer.(correcta = (rtaNum))	ifTrue:[self resultado: 1]	ifFalse: [		(rtaPlayer = 5 )		ifTrue: [  			self resultado: 5]	 	ifFalse:[self resultado: 2]	].]	! !!Pregunta methodsFor: 'control' stamp: 'mica 11/22/2024 02:06'!verificarPreguntaRepetidas|band| "QUE VERIFIQUE EN UNA INSTANCIA DE DUELO, NO EN TODO EL JUEGO"band:= true.[band] whileTrue:[ 	preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.	nroPregunta:= (preguntaAleatoria substrings) first.		(listaPreguntas isEmpty)	ifTrue:[		listaPreguntas add: nroPregunta. band:= false]	ifFalse: [ 		(listaPreguntas size = frase size) 						ifTrue:[ band:= false]						ifFalse:[ 							(listaPreguntas includes: nroPregunta)							ifFalse:[									listaPreguntas add: nroPregunta. band:= false]							ifTrue:[								band:= true							]						] 				]].! !!Pregunta methodsFor: 'control' stamp: 'mica 11/21/2024 22:08'!verificarPreguntaRepetidaEn: listaPreguntas|band| "QUE VERIFIQUE EN UNA INSTANCIA DE DUELO, NO EN TODO EL JUEGO"band:= true.[band] whileTrue:[ 	preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.	nroPregunta:= (preguntaAleatoria substrings) first.	(listaPreguntas isEmpty)	ifTrue:[		listaPreguntas add: nroPregunta. band:= false]	ifFalse: [ 		(listaPreguntas size = frase size) 						ifTrue:[ band:= false]						ifFalse:[ 							(listaPreguntas includes: nroPregunta)							ifFalse:[									listaPreguntas add: nroPregunta. band:= false]							ifTrue:[								band:= true							]						] 				]]! !!Pregunta methodsFor: 'initialization' stamp: 'mica 11/22/2024 01:05'!elegirPregunta:categoriaCasilla"elige al azar una linea del archivo Pregunta.txt y la guarda en el atributo preguntaAleatoria "|archivo|archivo := FileSystem disk workingDirectory.(categoriaCasilla = 1)ifTrue:[frase:= ((archivo / 'DEPORTE.txt') contents lines)].(categoriaCasilla = 2)ifTrue:[frase:= ((archivo / 'HISTORIA.txt') contents lines)].(categoriaCasilla = 3)ifTrue:[frase:= ((archivo / 'ARTE.txt') contents lines)].(categoriaCasilla = 4)ifTrue:[frase:= ((archivo / 'GEOGRAFIA.txt') contents lines)].(categoriaCasilla = 5)ifTrue:[frase:= ((archivo / 'CIENCIA.txt') contents lines)].preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.self verificarPreguntaRepetidas! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j2: anObject	j2 := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:55'!llamarPregunta: categoria	(categoria = 'deporte' ) ifTrue:[self elegirPregunta: 1].(categoria = 'historia' ) ifTrue:[self elegirPregunta: 2].(categoria = 'arte' ) ifTrue:[self elegirPregunta: 3].(categoria = 'geografia' ) ifTrue:[self elegirPregunta: 4].(categoria = 'ciencia' ) ifTrue:[self elegirPregunta: 5].self ponerPregunta: categoria.self mostrarPregunta:categoria. ! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!pregunta	^ pregunta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:35'!preguntaAleatoria: anObject	preguntaAleatoria := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j1	^ j1! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:55'!t	^ t! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j1: anObject	j1 := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!correcta	^ correcta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:48'!respuestas: anObject	respuestas := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!pregunta: anObject	pregunta := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!correcta: anObject	correcta := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/3/2024 19:18'!opcion	^ opcion! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/3/2024 19:23'!opcion: anObject	opcion := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:02'!nroPregunta	^ nroPregunta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:35'!preguntaAleatoria	^ preguntaAleatoria! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:55'!t: anObject	t := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/5/2024 18:09'!resultado	^ resultado! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/5/2024 18:09'!resultado: anObject	resultado := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 00:56'!listaPreguntas	^ listaPreguntas! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:12'!frase: anObject	frase := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:48'!respuestas	^ respuestas! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:10'!rtaPlayer	^ rtaPlayer! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j2	^ j2! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 09:39'!ponerPregunta:cat"toma la linea guardada en el atributo preguntaAleatoria""divide la linea en 3 partes: pregunta, opciones y respuesta correcta""ejemplo de linea .txt:" "¿Quién fue el primer presidente de los Estados Unidos?A) Abraham Lincoln%B) George Washington%C) Thomas Jefferson%D) John Adams% B"|restoPregunta opciones signo ops pregSubstring| ops:= ''.signo:='?'.pregunta:=''.respuestas := OrderedCollection new.nroPregunta:= (preguntaAleatoria substrings)first.correcta := (preguntaAleatoria substrings) last.  "Toma solo el ultimo string de toda la frase. Es la respuesta correcta"pregSubstring := (preguntaAleatoria) allButFirst: 3.pregunta:= ( pregSubstring copyUpToSubstring: signo). "copia solo la pregunta sin el signo '?'" restoPregunta := preguntaAleatoria copyAfterLast: $?. "copia el resto despues de '?'"opciones:= restoPregunta allButLast. "copia solo las opciones sin la respuesta ni pregunta"opciones do: [ :i| (i~= $%)ifTrue:[ops:=ops, (i asString)] "recorre la secuencia y acumula los caracteres hasta encontrar %"		ifFalse:[		respuestas add: (ops asString). "cuando llega a un % guarda lo acumulado en el atributo respuestas (definido como OrderedCollection)"		ops:=''.			].		].respuestas add: 'PASAR'.! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:05'!band1	^ band1! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:10'!rtaPlayer: anObject	rtaPlayer := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:05'!band1: anObject	band1 := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:12'!frase	^ frase! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 00:56'!listaPreguntas: anObject	listaPreguntas := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:02'!nroPregunta: anObject	nroPregunta := anObject! !Object subclass: #Tablero	instanceVariableNames: 'cantPlayers matriz listaJugadores tamañoMatriz ventana atacante defensor lista ventana_4 label_4'	classVariableNames: ''	package: 'Paradigmas 2024'!!Tablero commentStamp: 'SuarezGonzalo 10/11/2024 13:25' prior: 0!Prueba para desarrollar una matriz con los casilleros    Instance Variables	cantPlayers:		<Object>    Implementation Points!!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:53'!defensor: anObject	defensor := anObject! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 16:50'!matriz	^matriz.! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/5/2024 18:57'!casillaX:x Y:y^((matriz at:y)at:x)! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:53'!defensor	^ defensor! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:24'!listaJugadores	^listaJugadores! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 02:16'!lista: anObject	lista := anObject! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 02:16'!lista	^ lista! !!Tablero methodsFor: 'search' stamp: 'SuarezGonzalo 11/9/2024 18:06'!transferirDe:nombreJugador2 A:nombreJugador1 laCeldaX: x Y: y|coordenadas nroJugador2 nroJugador1 |Transcript show: 'se ejecuto la transeferencia de celdas';cr.coordenadas:=(Array with: x with:y ).nroJugador2  := (nombreJugador2  findTokens: ' ') last asInteger.nroJugador1  := (nombreJugador1  findTokens: ' ') last asInteger.(listaJugadores at:nroJugador2)eliminarCasilla: (Array with:x with: y).(listaJugadores at:nroJugador1)agregarCasilla: coordenadas.(((listaJugadores at:nroJugador2)casillas )isEmpty)ifTrue: [ self eliminarJugador: (listaJugadores at:nroJugador2) ].! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/20/2024 21:20'!buscarJugador	| indice colection valor |	colection := (1 to: tamañoMatriz * tamañoMatriz) asOrderedCollection.	[ 	indice := colection at: (Random new nextInteger: colection size).	valor := (listaJugadores at: indice) estado.	valor = 'ELIMINADO' ] whileTrue: [  ].	^ indice! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/23/2024 18:58'!masCasillas|mayores primero segundo|primero:=0.segundo:=0.mayores:= Array new:2.1 to:(tamañoMatriz*tamañoMatriz)do:[:i|	(primero < ((listaJugadores at:i)casillas )size)ifTrue:[		primero:=((listaJugadores at:i)casillas )size.		mayores at:1 put: ((listaJugadores at:i))		]ifFalse:[		(segundo < ((listaJugadores at:i)casillas )size)ifTrue:[		segundo :=((listaJugadores at:i)casillas )size.		mayores at:2 put: ((listaJugadores at:i))		]			].].^(mayores).! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/21/2024 20:25'!mostrarAdversariosde: nroJugador	| listaAdversarios cantCasillas x y |		listaAdversarios  := OrderedCollection new.	cantCasillas := ((listaJugadores at: nroJugador) casillas )size.		((listaJugadores at:nroJugador)cañon = false)ifTrue:[	1to:(cantCasillas)do:[:i|				x:=(((listaJugadores at:nroJugador)casillas)at:i)at:1.		y:=(((listaJugadores at:nroJugador)casillas) at:i)at:2.				(x>1)ifTrue:[			(((self casillaX:(x-1) Y:y)dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x-1) with:(y)))ifFalse:[				listaAdversarios  add:(Array with: (x-1) with:(y)).				].				].				].					(x<tamañoMatriz )ifTrue:[								(((self casillaX:(x+1) Y:(y))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x+1) with:(y)))ifFalse:[				listaAdversarios  add:(Array with: (x+1) with:(y)).].				].				].					(y>1)ifTrue:[						(((self casillaX:x Y:(y-1))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x) with:(y-1)))ifFalse:[				listaAdversarios  add:(Array with: (x) with:(y-1)).				].				].			].		(y<tamañoMatriz )ifTrue:[			(((self casillaX:x Y:(y+1))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x) with:(y+1)))ifFalse:[				listaAdversarios  add:(Array with: (x) with:(y+1)).				].			]. ].].]ifFalse: [ 	(listaJugadores at:nroJugador)cañon:false. 	1 to: tamañoMatriz do:[:i|		1 to: tamañoMatriz do:[:j|			(((self casillaX:i Y:(j))dueño )~=(listaJugadores at:nroJugador)nombre)ifTrue:[				listaAdversarios  add:(Array with: (i) with:(j)).						].		].].].(listaJugadores at:(nroJugador))adversarios: listaAdversarios .^listaAdversarios.! !!Tablero methodsFor: 'initialization' stamp: 'a 11/24/2024 16:35'!iniciarJuego|nroAtacante listaAdversarios respuesta duelo contadorDuelos | contadorDuelos :=0.	self crearVentanaJuego .	duelo :=Duelos new.	self interfazCrearVentana.	Transcript show: '----INICIA EL JUEGO----';cr.	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.					[ cantPlayers > 1 ]whileTrue: [  	Transcript show:'Cantidad de Jugadores: ';show:cantPlayers;cr.	Transcript show: 'Jugador: ';show:(listaJugadores at:nroAtacante)nombre;show:' Selecciona a cual de las siguientes casillas atacar:';cr.	(contadorDuelos =10)ifTrue:[		nroAtacante:=(((self masCasillas at:1)nombre)findTokens:' ') last asInteger.		atacante :=listaJugadores at:nroAtacante.		defensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).		Transcript show: '----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----';cr.		self mensajeDueloExtra:(atacante nombre)y:(defensor dueño).		duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.		contadorDuelos :=0.		]	ifFalse:[			self mostrarAdversariosde: nroAtacante.	listaAdversarios:=(listaJugadores at:nroAtacante)adversarios.	Transcript show: '---COLUMNA---FILA---CATEGORIA---------JUGADOR---';cr.	1 to:(listaAdversarios size)do:[:i|		Transcript show: '      ';show:((listaAdversarios at:i)at:1);show:'      '.		Transcript show: ' ';show:((listaAdversarios at:i)at:2);show:' '.		Transcript show: '     ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:' '.		Transcript show: '   ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:' ';cr.		].	self coloresAtacante: (listaJugadores at:nroAtacante)casillas.	self coloresAdversarios: listaAdversarios.	self interfazCrearVentana.	self cargarBotones."INTERFAZ----------------------------------------------------------------"  	self coloresAzul.	respuesta  := UIManager default     chooseFrom: listaAdversarios    message: 'Elige un contrincante'    title: 'DUELO'.  ventana delete.defensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. contadorDuelos :=contadorDuelos +1.].(duelo perdedor = 1)ifTrue:[	self captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).	nroAtacante :=((defensor dueño)findTokens:' ') last asInteger.	atacante := listaJugadores at:nroAtacante	]ifFalse: [ 	self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).	 ].(contadorDuelos  < 10)ifTrue:[respuesta  := UIManager default     chooseFrom: #('Seguir Atacando' 'Pasar Turno')    message: '¿Desea seguir atacando?'    title: 'DUELO'.(respuesta = 2)ifTrue:[	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.	].]ifFalse:[nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.].].	 	 Transcript show: 'GAME OVER'; cr.	 Transcript show: 'El ganador es el jugador:';show:(atacante nombre); cr.! !!Tablero methodsFor: 'initialization' stamp: 'Gonzalo 11/20/2024 20:32'!tamañoDeLaMatriz|entrada numero|	entrada :=(UIManager default request:'Ingrese el tamaño de la matriz')asInteger.	entrada ifNotNil:[ 		(entrada isInteger)ifTrue: [  		numero:=entrada asInteger.]]	 ifNil: [ 		self error: 'Debe ingresar un numero valido'.		 ].	^numero.! !!Tablero methodsFor: 'initialization' stamp: 'a 11/24/2024 16:32'!crearVentanaJuego	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_4:= Morph  new.    ventana_4 color: Color green.    ventana_4 := (ImageReadWriter formFromStream: '/home/josuecenturion/Descargas/IMAGENES PROCESADAS/relojes/reloj.png' asFileReference binaryReadStream) asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 600)@1. "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: ''.    label_4 color: Color green.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_4 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_4 addMorph: label_4.    ventana_4 openInWorld.! !!Tablero methodsFor: 'initialization' stamp: 'a 11/24/2024 16:35'!initialize 	|cont|	Transcript clear.	cont:=0.	tamañoMatriz:= self tamañoDeLaMatriz.	listaJugadores:= Array new:(tamañoMatriz * tamañoMatriz).		matriz := Array new: tamañoMatriz .	cantPlayers:=tamañoMatriz *tamañoMatriz .	1 to: tamañoMatriz  do:[:y| matriz at:y put:( Array new:tamañoMatriz)].	1 to: tamañoMatriz  do:[:y| 		1 to: tamañoMatriz  do:[:x| 			(matriz at:y) at:x put:(Casilla new).			(((matriz at:y)at:x))tamañoMatrizCasilla: tamañoMatriz.			cont:=cont+1.			((matriz at:y) at:x) dueñoInicial: (cont).			((matriz at:y) at:x) asignarCategoria.			(listaJugadores) at:cont put:(Jugador new).			(listaJugadores at:cont)nombre:(((matriz at:y) at:x)dueño).			(listaJugadores at:cont)agregarCasilla:(Array with:x with:y).			((matriz at:y) at:x) coordenadasX: x Y: y.			((matriz at:y) at:x) encontrarVecinos.						].		].	Transcript show: 'Se creo el tablero de forma exitosa';cr.! !!Tablero methodsFor: 'changing state' stamp: 'SuarezGonzalo 11/9/2024 19:43'!eliminarJugador: objetoJugador objetoJugador estado: 'ELIMINADO'.	cantPlayers :=cantPlayers -1.! !!Tablero methodsFor: 'changing state' stamp: 'Gonzalo 11/21/2024 22:09'!captura: casilla1 a: casilla2| nombreCapturado nombreCapturador xCapturado yCapturado nroCapturador nroCapturado|xCapturado := casilla2 coordenadasX.yCapturado := casilla2 coordenadasY.nombreCapturado := casilla2 dueño.nombreCapturador := casilla1 dueño.nroCapturado:=((casilla2 dueño)findTokens:' ') last asInteger.((listaJugadores at:nroCapturado)escudo = false)ifTrue:[casilla2 dueño: casilla1 dueño.self transferirDe: nombreCapturado A: nombreCapturador laCeldaX: xCapturado Y: yCapturado.xCapturado > 1 ifTrue: [    ((self casillaX: xCapturado - 1 Y: yCapturado) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado - 1 Y: yCapturado)]].xCapturado < tamañoMatriz  ifTrue: [    ((self casillaX: xCapturado + 1 Y: yCapturado) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado + 1 Y: yCapturado)]].yCapturado > 1 ifTrue: [    ((self casillaX: xCapturado Y: yCapturado - 1) dueño = nombreCapturado)        ifTrue: [self captura: casilla1 a: (self casillaX: xCapturado Y: yCapturado - 1)]].yCapturado < tamañoMatriz  ifTrue: [    ((self casillaX: xCapturado Y: yCapturado + 1) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado Y: yCapturado + 1)]].nroCapturador := ((casilla1 dueño)findTokens:' ') last asInteger.(listaJugadores at:nroCapturador)aumentarRacha.]ifFalse:[UIManager default message:((nombreCapturado),' uso su escudo, sus celdas fueron protegidas').(listaJugadores at: nroCapturado )escudo: false.].! !!Tablero methodsFor: 'interface' stamp: 'a 11/24/2024 16:28'!label_4	^label_4 .! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 19:40'!cargarBotones|texto |texto := TextMorph new.1 to: tamañoMatriz  do:[:i|	1 to: tamañoMatriz do:[:j|		(self casillaX: i Y:j)boton:SimpleButtonMorph new.		(self casillaX: i Y:j)boton label:'';  "Texto del botón"      		target: [ [ defensor:= self casillaX: i Y:j.self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: (defensor coordenadasX ) Y: (defensor coordenadasY)) ]]; "Acción al presionar"			color: ((self casillaX: i Y:j )color);    	  	actionSelector: #value; "El mensaje enviado al target"      		position: (100*(i-1))@(100*(j-1)); "Posición dentro de la ventana"      		extent: 100@100. "Tamaño del botón"		texto contents: ((self casillaX: i Y:j)dueño), String crlf, ((self casillaX: i Y:j)categoria) ,String crlf,     'Posición: (', i asString, ',', j asString, ')'; "Texto en dos líneas"       	color: Color black;       	font: (TextStyle default fontAt: 12);       	center: (self casillaX: i Y:j)boton bounds center. "Centrar el texto dentro del botón"		(self casillaX: i Y:j )boton addMorph: texto. "Añadir el texto al botón"		ventana addMorph:(self casillaX: i Y:j)boton . "Añadir el botón a la ventana"		texto:=TextMorph new.		].	]. ! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/23/2024 20:49'!mensajeDueloExtra:jugadorA y:jugadorBUIManager default message:'Duelo entre titanes ',String cr,jugadorA,' se enfrentara al ',jugadorB.! !!Tablero methodsFor: 'interface'!interfazCrearVentana|boton|		ventana := Morph new.	ventana extent: (100*(tamañoMatriz) )@(100*(tamañoMatriz) ); "Tamaño de la ventana"        color: Color white. "Color de fondo"boton:=SimpleButtonMorph new.boton label:'X';	actionSelector: #delete;	target:ventana;	position:(tamañoMatriz *100)@(tamañoMatriz *100);	extent: 10@10.	ventana addMorph:boton.	ventana openInWorld. "Abrir la ventana en el escritorio"! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 16:14'!coloresAdversarios:listaAdversarios1 to: (listaAdversarios size)do:[:i|	(self casillaX: ((listaAdversarios at:i)at:1) Y: ((listaAdversarios at:i)at:2))colorRojo 	].! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 16:19'!coloresAtacante:listaAtacante1 to: (listaAtacante  size)do:[:i|	(self casillaX: ((listaAtacante  at:i)at:1) Y: ((listaAtacante at:i)at:2))colorAmarillo 	].! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 16:38'!coloresAzul	1 to:tamañoMatriz  do:[:i|		1 to:tamañoMatriz  do:[:j|		 (self casillaX: i Y:j)colorAzul. 		]. 		] ! !!Tablero methodsFor: 'interface' stamp: 'a 11/24/2024 16:28'!ventana_4	^ventana_4.! !Object subclass: #Timer	instanceVariableNames: 'timer_1 timer_2 ventana_1 ventana_2 ventana_3 label_1 label_2 label_3 proceso turno perdedor fin j1name j2name'	classVariableNames: ''	package: 'Paradigmas 2024'!!Timer commentStamp: 'Gonzalo 11/23/2024 18:13' prior: 0!- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	fin:		<Object>	j1name:		<Object>	j2name:		<Object>	label_1:		<Object>	label_2:		<Object>	perdedor:		<Object>	proceso:		<Object>	timer_1:		<Object>	timer_2:		<Object>	turno:		<Object>	ventana_1:		<Object>	ventana_2:		<Object>    Implementation Points!!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!ventana_1	^ ventana_1! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!label_2: anObject	label_2 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:12'!perdedor	^ perdedor! !!Timer methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:31'!timer_1	^ timer_1! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j2name	^ j2name! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!ventana_1: anObject	ventana_1 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!proceso	^ proceso! !!Timer methodsFor: 'accessing' stamp: 'a 11/24/2024 15:41'!ventana_3	^ ventana_3! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!ventana_2: anObject	ventana_2 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!ventana_2	^ ventana_2! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j1name	^ j1name! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!timer_2: anObject	timer_2 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!turno	^ turno! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!label_2	^ label_2! !!Timer methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:31'!timer_1: anObject	timer_1 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j1name: anObject	j1name := anObject! !!Timer methodsFor: 'accessing' stamp: 'a 11/24/2024 15:41'!ventana_3: anObject	ventana_3 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:46'!fin	^ fin! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!label_1	^ label_1! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:12'!perdedor: anObject	perdedor := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!proceso: anObject	^ proceso := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!timer_2	^ timer_2! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:46'!fin: anObject	fin := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!label_1: anObject	label_1 := anObject! !!Timer methodsFor: 'accessing' stamp: 'a 11/24/2024 15:41'!label_3	^ label_3! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j2name: anObject	j2name := anObject! !!Timer methodsFor: 'accessing' stamp: 'a 11/24/2024 15:41'!label_3: anObject	label_3 := anObject! !!Timer methodsFor: 'initialization' stamp: 'a 11/24/2024 16:27'!iniciar:jugadorInicial            |uno_sin_tiempo|				fin:= false.            uno_sin_tiempo :=false.				self fin:false.            turno:=jugadorInicial .                self crearVentana.    proceso := [                             [ uno_sin_tiempo ] whileFalse: [                  "va a ver si alguien se quedo sin tiempo"            (   (timer_1=0) | (timer_2=0) ) ifTrue: [ uno_sin_tiempo :=true ].            (Delay forSeconds: 1) wait.             "creamos 1 sola vez la ventana"            "(timer_1 = 5 )ifTrue: [self crearVentana]."            "vamos escribiendo los 2 tiempos sobre las 2 ventanas "           label_1 contents: j1name , String cr, 'Segundos: ', timer_1 printString.           label_2 contents: j2name , String cr, 'Segundos: ', timer_2 printString.                "veo de quien es el turno"                (turno=1) ifTrue: [ timer_1 := timer_1  - 1]                ifFalse: [ timer_2 := timer_2 -1 ]                                .                   "eliminamos la ventana"                                                                (timer_1 <=0) ifTrue: [							self perdedor: 1.							self fin:true.                    label_1 contents: 'Time is Over'.                          label_2 contents: 'You won this battle'.                        ventana_1 color: Color red.                        ventana_2 color: Color green."                    (Delay forSeconds: 2) wait.                     ventana_1 delete.                    ventana_1 := nil.                          ventana_2 delete.                    ventana_2 := nil."							"Aca perdio el jugador 1"							"tratamiento"							                                ].                                              (timer_2 <=0) ifTrue: [							self perdedor: 2.							self fin:true.                    label_1 contents: 'You won this battle'.                          label_2 contents: 'Time is Over'.                        ventana_1 color: Color green.                        ventana_2 color: Color red .						"Aca perdio el jugador 2"						"iniciar tratamiento"                                ].					          		].         ] fork. ! !!Timer methodsFor: 'initialization' stamp: 'IngPepeGrillo 11/19/2024 23:03'!detener    proceso ifNotNil: [         proceso terminate.        proceso := nil.         ]! !!Timer methodsFor: 'initialization' stamp: 'IngPepeGrillo 11/19/2024 23:04'!turno:anValue    turno:=anValue .! !!Timer methodsFor: 'initialization' stamp: 'mica 11/22/2024 14:16'!initialize     timer_1 :=10.    timer_2:=10.    proceso:=nil.! !!Timer methodsFor: 'initialization' stamp: 'a 11/24/2024 15:41'!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromStream: 'IMAGENES PROCESADAS/carpinchitoIzquierda.png' asFileReference binaryReadStream) asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 520)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromStream: 'IMAGENES PROCESADAS/carpinchitoDerecha.png' asFileReference binaryReadStream) asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromStream: 'IMAGENES PROCESADAS/theFloor.png' asFileReference binaryReadStream) asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'mica 11/22/2024 13:01'!restarSegundos:anPlayer "1 o 2"		(anPlayer  = 1) ifTrue: [ timer_1 :=timer_1 - 2 ].		(anPlayer  = 2) ifTrue: [ timer_2 :=timer_2 - 2 ].! !PackageManifest subclass: #ManifestParadigmas2024	instanceVariableNames: ''	classVariableNames: ''	package: 'Paradigmas 2024-Manifest'!!ManifestParadigmas2024 commentStamp: '<historical>' prior: 0!Please describe the package using the class comment of the included manifest class. The manifest class also includes other additional metadata for the package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManifestParadigmas2024 class	instanceVariableNames: ''!!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 22:39'!ruleWhileTrueRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T22:39:35.225-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 20:00'!ruleCascadedNextPutAllsRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T20:00:50.167-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/21/2024 11:49'!ruleClassNotReferencedRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Interfaz)) #'2024-11-21T11:49:50.953-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/21/2024 11:49'!ruleNoClassCommentRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Interfaz)) #'2024-11-21T11:49:44.516-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 20:00'!ruleNotEliminationRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T20:00:46.733-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 22:00'!ruleToDoRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T22:00:34.205-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 22:04'!ruleCodeCruftLeftInMethodsRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #initialize #false)) #'2024-11-20T22:04:43.412-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/21/2024 16:08'!ruleStringConcatenationRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #cargarBotonesAtacante:Adversarios: #false)) #'2024-11-21T15:41:06.333-03:00') #(#(#RGMethodDefinition #(#Tablero #cargarBotones #false)) #'2024-11-21T16:08:01.18-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/21/2024 11:49'!ruleReIvarNeitherReadNorWrittenRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Interfaz)) #'2024-11-21T11:49:48.037-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/21/2024 11:49'!ruleReClassNotCategorizedRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Interfaz)) #'2024-11-21T11:49:41.926-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'a 11/24/2024 15:39'!ruleLongMethodsRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #initialize #false)) #'2024-11-20T20:05:03.367-03:00') #(#(#RGMethodDefinition #(#Tablero #mostrarAdversariosde: #false)) #'2024-11-20T22:04:13.202-03:00') #(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T22:39:10.841-03:00') #(#(#RGPackageDefinition #(#'Paradigmas 2024')) #'2024-11-24T15:39:45.424607-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'a 11/24/2024 15:41'!ruleSearchingLiteralRuleV1FalsePositive	^ #(#(#(#RGPackageDefinition #(#'Paradigmas 2024')) #'2024-11-24T15:41:23.397273-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 20:05'!ruleToDoWithIncrementRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #initialize #false)) #'2024-11-20T20:05:08.856-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 22:01'!ruleUnclassifiedMethodsRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #tamañoDeLaMatriz #false)) #'2024-11-20T20:16:36.668-03:00') #(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T22:01:06.978-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 20:05'!ruleToDoCollectRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #initialize #false)) #'2024-11-20T20:05:06.639-03:00') )! !----End fileIn----!!Tablero methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 16:42' prior: 33738911!crearVentanaJuego	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_4:= Morph  new.    ventana_4 color: Color green.    ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/pim.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 600)@1. "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: ''.    label_4 color: Color green.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_4 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_4 addMorph: label_4.    ventana_4 openInWorld.! !!Tablero methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 16:42' prior: 33758718!crearVentanaJuego	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_4:= Morph  new.    ventana_4 color: Color green.    ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/theFloor.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 600)@1. "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: ''.    label_4 color: Color green.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_4 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_4 addMorph: label_4.    ventana_4 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 16:43' prior: 33751619!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 520)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromStream: 'IMAGENES PROCESADAS/theFloor.png' asFileReference binaryReadStream) asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 16:44' prior: 33760731!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 520)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Tablero methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 16:53' prior: 33759723!crearVentanaJuego	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_4:= Morph  new.    ventana_4 color: Color green.    ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/theFloor.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 700)@1. "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: ''.    label_4 color: Color green.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_4 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_4 addMorph: label_4.    ventana_4 openInWorld.! !!Tablero methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 16:53' prior: 33765355!crearVentanaJuego	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_4:= Morph  new.    ventana_4 color: Color green.    ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/theFloor.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 00)@1. "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: ''.    label_4 color: Color green.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_4 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_4 addMorph: label_4.    ventana_4 openInWorld.! !!Tablero methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 16:54' prior: 33766365!crearVentanaJuego	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_4:= Morph  new.    ventana_4 color: Color green.    ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/theFloor.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 750)@1. "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: ''.    label_4 color: Color green.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_4 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_4 addMorph: label_4.    ventana_4 openInWorld.! !!Tablero methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 16:55' prior: 33767374!crearVentanaJuego	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_4:= Morph  new.    ventana_4 color: Color green.    ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/theFloor.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 950)@1. "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: ''.    label_4 color: Color green.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_4 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_4 addMorph: label_4.    ventana_4 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:14' prior: 33763061!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 520)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (500@500).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:18' prior: 33769392!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1000)@((screenHeight // 2)). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (500@500).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:19' prior: 33771684!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1200)@((screenHeight // 2 + 90)). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (500@500).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:19' prior: 33773972!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1200)@(1000). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (500@500).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:20' prior: 33776265!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1200)@(50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (500@500).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:20' prior: 33778538!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1200)@(500). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (500@500).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:20' prior: 33780809!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1200)@(350). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (500@500).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:21' prior: 33783081!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1200)@(290). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (500@500).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:23' prior: 33785353!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1200)@(350). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (500@500).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:23' prior: 33787625!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1000)@(350). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (500@500).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:24' prior: 33789897!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1000)@(350). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (500@500).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 500)@(350). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:25' prior: 33792169!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (500@500).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:25' prior: 33794420!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1000)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (500@500).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:26' prior: 33796671!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (500@500).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:26' prior: 33798922!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (100@100).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:26' prior: 33801173!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (500@200).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:27' prior: 33803424!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (400@150).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:27' prior: 33805675!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:27' prior: 33807926!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (165@150).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:28' prior: 33810177!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@150).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:28' prior: 33812428!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (165@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:28' prior: 33814679!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:35' prior: 33816930!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (100)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:39' prior: 33819181!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (50)@ 100. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:39' prior: 33821418!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (50)@(50). "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:40' prior: 33823656!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (50)@(20). "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !Timer class	instanceVariableNames: 'cant_duelos'!Object subclass: #Timer	instanceVariableNames: 'timer_1 timer_2 ventana_1 ventana_2 ventana_3 label_1 label_2 label_3 proceso turno perdedor fin j1name j2name'	classVariableNames: ''	package: 'Paradigmas 2024'!!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 18:13' prior: 33825894!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld.(self class cantidadDuelos = 10) ifTrue: ["ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromStream: 'IMAGENES PROCESADAS/theFloor.png' asFileReference binaryReadStream) asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld.] ifFalse: [ "ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromStream: 'IMAGENES PROCESADAS/theFloor.png' asFileReference binaryReadStream) asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld. ].! !!Timer methodsFor: 'as yet unclassified' stamp: 'TiagoBernal 11/24/2024 18:15'!cantidadDuelos	^ cant_duelos.! !Timer class	instanceVariableNames: 'cant_duelos a '!!Timer class methodsFor: 'as yet unclassified' stamp: 'TiagoBernal 11/24/2024 18:17'!devolverA ^a! !Timer class removeSelector: #devolverA!Timer class	instanceVariableNames: 'cant_duelos'!!Timer class methodsFor: 'as yet unclassified' stamp: 'TiagoBernal 11/24/2024 18:17'!cantidadDuelos ^cant_duelos! !!Timer class methodsFor: 'as yet unclassified' stamp: 'TiagoBernal 11/24/2024 18:18'!new     (cant_duelos isNil) ifTrue: [         cant_duelos := 0         ].    cant_duelos :=cant_duelos +1.    (cant_duelos >11) ifTrue: [ cant_duelos :=1 ].    ^super new.! !!Duelos methodsFor: 'extra' stamp: 'TiagoBernal 11/24/2024 18:19' prior: 33716271!dueloExtra: powerUp|listaCat|listaCat := #('historia' 'deporte' 'geografia' 'arte' 'ciencia').(powerUp)ifTrue: [ self categoria: (listaCat at: ((1 to: listaCat size)atRandom))].! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 18:20' prior: 33828399!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld.(self class cantidadDuelos = 10) ifTrue: ["ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vsdt.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld.] ifFalse: [ "ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld. ].! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 18:21' prior: 33832364!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld.(self class cantidadDuelos = 2) ifTrue: ["ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vsdt.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld.] ifFalse: [ "ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld. ].! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 18:23' prior: 33835233!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld.(self class cantidadDuelos = 2) ifTrue: ["ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vsdt.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (50)@50. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld.] ifFalse: [ "ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: 50@50. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld. ].! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 18:24' prior: 33838101!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld.(self class cantidadDuelos = 2) ifTrue: ["ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vsdt.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (50)@50. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld.] ifFalse: [ "ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: 50@50. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld. ].! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'TiagoBernal 11/24/2024 18:26'!ruleEndTrueFalseRuleV1FalsePositive	^ #()! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'TiagoBernal 11/24/2024 18:26' prior: 33843778!ruleEndTrueFalseRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Timer #crearVentana #false)) #'2024-11-24T18:26:50.735-03:00') )! !!Timer class methodsFor: 'as yet unclassified' stamp: 'TiagoBernal 11/24/2024 18:28' prior: 33831820!new     (cant_duelos isNil) ifTrue: [         cant_duelos := 0         ].    cant_duelos :=cant_duelos +1.    (cant_duelos >10) ifTrue: [ cant_duelos :=1 ].    ^super new.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 18:29' prior: 33840937!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld.(self class cantidadDuelos = 2) ifTrue: ["ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/victoria.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (50)@50. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld.] ifFalse: [ "ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: 50@50. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld. ].! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 18:30' prior: 33844448!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld.(self class cantidadDuelos = 2) ifTrue: ["ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vsdt.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (50)@50. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld.] ifFalse: [ "ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: 50@50. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld. ].! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 18:32' prior: 33847288!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld.(self class cantidadDuelos = 2) ifTrue: ["ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/duelodetitanes.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (50)@50. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld.] ifFalse: [ "ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: 50@50. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld. ].! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 18:33' prior: 33850124!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld.(self class cantidadDuelos >= 2) ifTrue: ["ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/duelodetitanes.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (50)@50. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld.] ifFalse: [ "ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: 50@50. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld. ].! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 18:33' prior: 33852970!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld.(self class cantidadDuelos >= 2) ifTrue: ["ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/duelodetitanes.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (50)@50. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld.] ifFalse: [ "ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: 50@50. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld. ].! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 18:34' prior: 33855817!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld.(self class cantidadDuelos = 2) ifTrue: ["ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/duelodetitanes.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (50)@50. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld.] ifFalse: [ "ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: 50@50. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld. ].! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 18:34' prior: 33858664!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld.(self class cantidadDuelos = 10) ifTrue: ["ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/duelodetitanes.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (50)@50. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld.] ifFalse: [ "ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: 50@50. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld. ].! !!Timer class methodsFor: 'as yet unclassified' stamp: 'TiagoBernal 11/24/2024 18:35' prior: 33844174!new     (cant_duelos isNil) ifTrue: [         cant_duelos := 0         ].    cant_duelos :=cant_duelos +1.    (cant_duelos = 11) ifTrue: [ cant_duelos :=1 ].    ^super new.! !!Timer class methodsFor: 'as yet unclassified' stamp: 'TiagoBernal 11/24/2024 18:35' prior: 33864368!new     (cant_duelos isNil) ifTrue: [         cant_duelos := 0         ].    cant_duelos :=cant_duelos +1.    (cant_duelos > 2) ifTrue: [ cant_duelos :=1 ].    ^super new.! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 18:36' prior: 33861510!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld.(self class cantidadDuelos = 2) ifTrue: ["ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/duelodetitanes.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (50)@50. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld.] ifFalse: [ "ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.     ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: 50@50. "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"    ventana_3 addMorph: label_3.    ventana_3 openInWorld. ].! !!Timer class methodsFor: 'as yet unclassified' stamp: 'TiagoBernal 11/24/2024 18:38'!inicializar	cant_duelos:=0! !!Timer class methodsFor: 'as yet unclassified' stamp: 'TiagoBernal 11/24/2024 18:39' prior: 33864654!new	self class inicializar.     (cant_duelos isNil) ifTrue: [         cant_duelos := 0         ].    cant_duelos :=cant_duelos +1.    (cant_duelos > 2) ifTrue: [ cant_duelos :=1 ].    ^super new.! !!Timer class methodsFor: 'as yet unclassified' stamp: 'TiagoBernal 11/24/2024 18:39' prior: 33867902!new     (cant_duelos isNil) ifTrue: [         cant_duelos := 0         ].    cant_duelos :=cant_duelos +1.    (cant_duelos > 2) ifTrue: [ cant_duelos :=1 ].    ^super new.! !----QUIT/NOSAVE----2024-11-24T18:42:47.434-03:00 Tiago.image priorSource: 148163!!Tablero methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 19:15' prior: 33683462!initialize 	|cont|	Transcript clear.	cont:=0.	tamañoMatriz:= self tamañoDeLaMatriz.	listaJugadores:= Array new:(tamañoMatriz * tamañoMatriz).	matriz := Array new: tamañoMatriz .	cantPlayers:=tamañoMatriz *tamañoMatriz .	1 to: tamañoMatriz  do:[:y| matriz at:y put:( Array new:tamañoMatriz)].	1 to: tamañoMatriz  do:[:y| 		1 to: tamañoMatriz  do:[:x| 			(matriz at:y) at:x put:(Casilla new).			(((matriz at:y)at:x))tamañoMatrizCasilla: tamañoMatriz.			cont:=cont+1.			((matriz at:y) at:x) dueñoInicial: (cont).			((matriz at:y) at:x) asignarCategoria.			(listaJugadores) at:cont put:(Jugador new).			(listaJugadores at:cont)nombre:(((matriz at:y) at:x)dueño).			(listaJugadores at:cont)agregarCasilla:(Array with:x with:y).			((matriz at:y) at:x) coordenadasX: x Y: y.			((matriz at:y) at:x) encontrarVecinos.						].		].	Transcript show: 'Se creo el tablero de forma exitosa';cr.! !!Tablero methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 19:16' prior: 33679568!iniciarJuego|nroAtacante listaAdversarios respuesta duelo contadorDuelos | contadorDuelos :=0.	duelo :=Duelos new.	self interfazCrearVentana.	Transcript show: '----INICIA EL JUEGO----';cr.	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.					[ cantPlayers > 1 ]whileTrue: [  	Transcript show:'Cantidad de Jugadores: ';show:cantPlayers;cr.	Transcript show: 'Jugador: ';show:(listaJugadores at:nroAtacante)nombre;show:' Selecciona a cual de las siguientes casillas atacar:';cr.	(contadorDuelos =10)ifTrue:[		nroAtacante:=(((self masCasillas at:1)nombre)findTokens:' ') last asInteger.		atacante :=listaJugadores at:nroAtacante.		defensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).		Transcript show: '----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----';cr.		self mensajeDueloExtra:(atacante nombre)y:(defensor dueño).		duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.		contadorDuelos :=0.		]	ifFalse:[			self mostrarAdversariosde: nroAtacante.	listaAdversarios:=(listaJugadores at:nroAtacante)adversarios.	Transcript show: '---COLUMNA---FILA---CATEGORIA---------JUGADOR---';cr.	1 to:(listaAdversarios size)do:[:i|		Transcript show: '      ';show:((listaAdversarios at:i)at:1);show:'      '.		Transcript show: ' ';show:((listaAdversarios at:i)at:2);show:' '.		Transcript show: '     ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:' '.		Transcript show: '   ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:' ';cr.		].	self coloresAtacante: (listaJugadores at:nroAtacante)casillas.	self coloresAdversarios: listaAdversarios.	self interfazCrearVentana.	self cargarBotones."INTERFAZ----------------------------------------------------------------"  	self coloresAzul.	respuesta  := UIManager default     chooseFrom: listaAdversarios    message: 'Elige un contrincante'    title: 'DUELO'.  ventana delete.defensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. contadorDuelos :=contadorDuelos +1.].(duelo perdedor = 1)ifTrue:[	self captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).	nroAtacante :=((defensor dueño)findTokens:' ') last asInteger.	atacante := listaJugadores at:nroAtacante	]ifFalse: [ 	self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).	 ].(contadorDuelos  < 10)ifTrue:[respuesta  := UIManager default     chooseFrom: #('Seguir Atacando' 'Pasar Turno')    message: '¿Desea seguir atacando?'    title: 'DUELO'.(respuesta = 2)ifTrue:[	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.	].]ifFalse:[nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.].].	 	 Transcript show: 'GAME OVER'; cr.	 Transcript show: 'El ganador es el jugador:';show:(atacante nombre); cr.	! !----QUIT/NOSAVE----2024-11-24T19:21:27.026-03:00 Tiago.image priorSource: 148163!Smalltalk globals removeClassNamed: #AnObsoleteTablero!Smalltalk globals removeClassNamed: #AnObsoleteCasilla!Smalltalk globals removeClassNamed: #AnObsoleteInterfaz!Smalltalk globals removeClassNamed: #AnObsoletePregunta!Smalltalk globals removeClassNamed: #AnObsoleteTimer!Smalltalk globals removeClassNamed: #AnObsoleteDuelos!Smalltalk globals removeClassNamed: #AnObsoleteJugador!Object subclass: #Casilla	instanceVariableNames: 'dueño color tema coordenadasX coordenadasY vecinos categoria pregunta boton'	classVariableNames: 'TamañoMatriz'	package: 'Paradigmas 2024'!!Casilla commentStamp: 'SuarezGonzalo 10/11/2024 13:33' prior: 0!Implementation Points!!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:05'!colorAzul	color:=Color blue.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:06'!colorAmarillo	color:=Color yellow.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/20/2024 12:30'!tamañoMatrizCasilla:xTamañoMatriz :=x.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:05'!colorRojo	color:=Color red.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/26/2024 17:56'!coordenadasX: valorX Y:valorY coordenadasX :=valorX.coordenadasY :=valorY.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 16:53'!dueño:valor	dueño:=valor .! !!Casilla methodsFor: 'initialization' stamp: 'Gonzalo 11/21/2024 16:01'!initialize color:=Color blue.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 17:01'!coordenadasXY: valorX and:valorY coordenadasX :=valorX.coordenadasY :=valorY.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 16:54'!dueñoInicial:valordueño := 'Jugador ',(valor asString).! !!Casilla methodsFor: 'add/remove' stamp: 'Gonzalo 11/20/2024 12:26'!encontrarVecinosvecinos:=(OrderedCollection new).(coordenadasX >1)ifTrue:[vecinos add:(Array with: (coordenadasX -1) with: coordenadasY )].(coordenadasX <TamañoMatriz )ifTrue:[vecinos add:(Array with: (coordenadasX +1) with: coordenadasY )].(coordenadasY >1)ifTrue:[vecinos add:(Array with: coordenadasX with: (coordenadasY -1))].(coordenadasY <TamañoMatriz )ifTrue:[vecinos add:(Array with: coordenadasX with: (coordenadasY +1))].! !!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:02'!coordenadasY	^coordenadasY   ! !!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:02'!coordenadasX	^coordenadasX  ! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!pregunta: anObject	pregunta := anObject! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!categoria	^ categoria! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!pregunta	^ pregunta! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 18:22'!vecinos: anObject	vecinos := anObject! !!Casilla methodsFor: 'accessing'!asignarCategoria"1 --Hisoria		2--Deporte	3--Geografia 4--Arte 5--ciencia"|listaCategoria|listaCategoria := #('historia' 'deporte' 'geografia' 'arte' 'ciencia').categoria:=  (listaCategoria at: (1 to: listaCategoria size)atRandom)! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!categoria: anObject	categoria := anObject! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 12:18'!boton^boton.! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/14/2024 18:46'!llamarPregunta(categoria = 'historia' ) ifTrue:[pregunta elegirPregunta: 1].(categoria = 'deporte' ) ifTrue:[pregunta elegirPregunta: 2].(categoria = 'geografia' ) ifTrue:[pregunta elegirPregunta: 3].(categoria = 'arte' ) ifTrue:[pregunta elegirPregunta: 4].(categoria = 'ciencia' ) ifTrue:[pregunta elegirPregunta: 5].pregunta ponerPregunta.pregunta mostrarPregunta: categoria. ! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 18:22'!vecinos	^ vecinos! !!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 16:46'!dueño^dueño! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/20/2024 12:30'!tamañoMatrizCasilla^TamañoMatriz.! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 12:17'!boton:xboton:=x! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 16:04'!color	^color.! !Object subclass: #Duelos	instanceVariableNames: 'timer bandJugador1 perdedor categoria'	classVariableNames: ''	package: 'Paradigmas 2024'!!Duelos commentStamp: 'mica 11/5/2024 02:40' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages.- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	jugador1:		<Object>	jugador2:		<Object>    Implementation Points!!Duelos methodsFor: 'extra' stamp: 'mica 11/23/2024 19:46'!dueloExtra: powerUp|listaCat|listaCat := #('historia' 'deporte' 'geografia' 'arte' 'ciencia').(powerUp)ifTrue: [ self categoria: (listaCat at: ((1 to: listaCat size)atRandom))]! !!Duelos methodsFor: 'accessing' stamp: 'Gonzalo 11/23/2024 21:47'!pasarTurno:jugador1 a:jugador2bandJugador1						ifTrue: [ 							"UIManager default message:'Es el turno del ',jugador2 ."							Transcript								show: '1';								cr.						timer turno: 2.						bandJugador1 := false					]					ifFalse: [ 						"UIManager default message:'Es el turno del ',jugador1 ."						Transcript							show: '2';							cr.						timer turno: 1.						bandJugador1 := true.					]! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:57'!perdedor: anObject	perdedor := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:19'!timer	^ timer! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:24'!bandJugador1: anObject	bandJugador1 := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 19:16'!categoria	^ categoria! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:19'!timer: anObject	timer := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 19:16'!categoria: anObject	categoria := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:58'!perdedor	^ perdedor! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:24'!bandJugador1	^ bandJugador1! !!Duelos methodsFor: 'initialization' stamp: 'a 11/24/2024 15:41'!iniciarDueloEntre: player1 y: player2 categoria: player2cat dueloExtra: arg1	| pregunta|	timer := Timer new.	timer j1name: player1 .	timer j2name: player2 .	pregunta := Pregunta new.	pregunta j1: player1.	pregunta j2: player2.	pregunta listaPreguntas: OrderedCollection new.	pregunta t: false.	bandJugador1 := true.	pregunta band1: true.	self timer iniciar: 1.	categoria := player2cat.		[ self timer fin ] whileFalse: [ 		self dueloExtra: arg1.		pregunta llamarPregunta: categoria.		pregunta resultado = 5 ifTrue: [ self pasarPregunta ].		pregunta resultado = 1 ifTrue: [ 			self pasarTurno:player1 a:player2.			pregunta band1: bandJugador1 ].		pregunta resultado = 2 ifTrue: [ 			Transcript				show: '------->>   INCORRECTO';				cr.			[ 			pregunta resultado = 1 | (pregunta resultado = 5)			| (pregunta resultado = 0) ] whileFalse: [ 				self timer timer_1 <= 0 | (self timer timer_2 <= 0) ifTrue: [ 					pregunta t: true ].				pregunta mostrarPregunta: self categoria ].			pregunta resultado = 5 ifTrue: [ self pasarPregunta ].			pregunta resultado = 1 ifTrue: [ 				self pasarTurno:player1 a:player2.				pregunta band1: bandJugador1 ] ].].Transcript show: 'PERDEDOR Player ',timer perdedor asString;					cr.(timer ventana_1) delete.(timer ventana_2) delete. (timer ventana_3) delete. self perdedor: timer perdedor! !!Duelos methodsFor: 'initialization' stamp: 'mica 11/23/2024 20:03'!pasarPreguntabandJugador1					ifTrue: [ 						self timer restarSegundos: 1. 						Transcript							show: '1';							cr.]					ifFalse: [ 						self timer restarSegundos: 2.						Transcript							show: '2';							cr.							]! !Object subclass: #Interfaz	instanceVariableNames: 'accionMouse'	classVariableNames: ''	package: 'Paradigmas 2024'!!Interfaz commentStamp: 'Gonzalo 11/23/2024 18:13' prior: 0!- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	accionMouse:		<Object>    Implementation Points!!Interfaz methodsFor: 'initialization' stamp: 'Gonzalo 11/21/2024 12:16'!initialize | ventana boton |ventana := Morph new.ventana extent: 600@600; "Tamaño de la ventana"        color: Color white. "Color de fondo"boton := SimpleButtonMorph new.boton label: 'Presióname'; "Texto del botón"       target: [ Transcript show: '¡Botón presionado!!'; cr ]; "Acción al presionar"       actionSelector: #value; "El mensaje enviado al target"       position: 00@00; "Posición dentro de la ventana"       extent: 100@100. "Tamaño del botón"ventana addMorph: boton. "Añadir el botón a la ventana"ventana openInWorld. "Abrir la ventana en el escritorio"! !Object subclass: #Jugador	instanceVariableNames: 'nombre casillas adversarios estado escudo cañon racha'	classVariableNames: ''	package: 'Paradigmas 2024'!!Jugador commentStamp: 'SuarezGonzalo 10/11/2024 17:10' prior: 0!Clase Jugador    Instance Variables	dueño:		<Object>	vecinos:		<Object>    Implementation Points!!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/5/2024 17:07'!nombre^nombre.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 21:03'!obtenerX:nroCasilla^((casillas at:nroCasilla )at:1)! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/9/2024 18:28'!eliminarCasilla: xcasillas remove: x ifAbsent: [ Error signal: 'Error la casilla no pertenece al jugador' ].! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/9/2024 19:32'!adversarios ^adversarios.! !!Jugador methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 10:38'!cañon	^cañon.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 20:40'!casillas^casillas.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 21:03'!obtenerY:nroCasilla^((casillas at:nroCasilla )at:2)! !!Jugador methodsFor: 'accessing' stamp: 'mica 11/16/2024 17:43'!estado	^ estado! !!Jugador methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 10:38'!escudo	^escudo.! !!Jugador methodsFor: 'initialize' stamp: 'SuarezGonzalo 10/31/2024 19:50'!crearJugador: nombreJugador x:x y:ynombre :=nombreJugador .casillas:= OrderedCollection new.casillas add:(Array with:x with:y)! !!Jugador methodsFor: 'initialize' stamp: 'Gonzalo 11/21/2024 20:54'!initialize 	nombre:='Unkown Player'.	escudo:=false.	cañon :=false.	racha:=0.	casillas:=OrderedCollection new.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/23/2024 21:14'!agregarPowerUp	| respuesta |	racha :=0.UIManager default message:'El ',nombre ,' obtuvo una racha de 5 victorias'.respuesta := UIManager default    chooseFrom: #('Escudo' 'Cañon')    message: 'Elija PowerUp',String cr,'Escudo : proteje todas tus casillas ante una captura',String cr,'Cañon: permite atacar a cualquier casilla del tablero'.    "Procesar la respuesta"respuesta ifNotNil: [    (respuesta = 1)ifTrue: [ 			escudo:=true.	 ].	(respuesta = 2)ifTrue: [ 			cañon :=true.				 ].] ifNil: [    Transcript show: 'No se seleccionó ninguna opción'; cr.	self agregarPowerUp.].! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 10:41'!cañon:x	cañon:=x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/9/2024 18:21'!estado:x	estado:=x.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 10:42'!escudo:x	escudo:=x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 10/31/2024 19:43'!nombre:xnombre:=x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 10/31/2024 19:44'!casilla: xcasillas add:x.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 21:09'!aumentarRacha racha:=racha +1.	(racha=5)ifTrue:[self agregarPowerUp].! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/9/2024 13:26'!agregarCasilla: xcasillas add:x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/5/2024 19:01'!adversarios: listaadversarios :=lista.! !Object subclass: #Pregunta	instanceVariableNames: 'opcion preguntaAleatoria respuestas resultado correcta pregunta nroPregunta frase listaPreguntas j1 j2 band1 rtaPlayer t'	classVariableNames: ''	package: 'Paradigmas 2024'!!Pregunta commentStamp: 'mica 11/4/2024 21:42' prior: 0!-Toma la pregunta, opciones y respuesta correcta de una archivo .txt-Muestra la pregunta y permite al jugador contestar a traves de opciones.!!Pregunta methodsFor: 'control' stamp: 'mica 11/22/2024 02:06'!verificarPreguntaRepetidas|band| "QUE VERIFIQUE EN UNA INSTANCIA DE DUELO, NO EN TODO EL JUEGO"band:= true.[band] whileTrue:[ 	preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.	nroPregunta:= (preguntaAleatoria substrings) first.		(listaPreguntas isEmpty)	ifTrue:[		listaPreguntas add: nroPregunta. band:= false]	ifFalse: [ 		(listaPreguntas size = frase size) 						ifTrue:[ band:= false]						ifFalse:[ 							(listaPreguntas includes: nroPregunta)							ifFalse:[									listaPreguntas add: nroPregunta. band:= false]							ifTrue:[								band:= true							]						] 				]].! !!Pregunta methodsFor: 'control' stamp: 'mica 11/21/2024 22:08'!verificarPreguntaRepetidaEn: listaPreguntas|band| "QUE VERIFIQUE EN UNA INSTANCIA DE DUELO, NO EN TODO EL JUEGO"band:= true.[band] whileTrue:[ 	preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.	nroPregunta:= (preguntaAleatoria substrings) first.	(listaPreguntas isEmpty)	ifTrue:[		listaPreguntas add: nroPregunta. band:= false]	ifFalse: [ 		(listaPreguntas size = frase size) 						ifTrue:[ band:= false]						ifFalse:[ 							(listaPreguntas includes: nroPregunta)							ifFalse:[									listaPreguntas add: nroPregunta. band:= false]							ifTrue:[								band:= true							]						] 				]]! !!Pregunta methodsFor: 'converting' stamp: 'mica 11/21/2024 02:41'!opcionNumeroALetra: a"convierte la respuesta del jugador en A, B, C, o D para luego""comparar con la respuesta correcta en mostrarPregunta:y:"|listaOpciones |listaOpciones := #('A' 'B' 'C' 'D' 0).^(listaOpciones at: a)! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:35'!preguntaAleatoria: anObject	preguntaAleatoria := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!correcta: anObject	correcta := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:48'!respuestas	^ respuestas! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:12'!frase	^ frase! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:55'!t	^ t! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j1: anObject	j1 := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:02'!nroPregunta	^ nroPregunta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:10'!rtaPlayer: anObject	rtaPlayer := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/3/2024 19:23'!opcion: anObject	opcion := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:55'!t: anObject	t := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:05'!band1	^ band1! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!pregunta	^ pregunta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:55'!llamarPregunta: categoria	(categoria = 'deporte' ) ifTrue:[self elegirPregunta: 1].(categoria = 'historia' ) ifTrue:[self elegirPregunta: 2].(categoria = 'arte' ) ifTrue:[self elegirPregunta: 3].(categoria = 'geografia' ) ifTrue:[self elegirPregunta: 4].(categoria = 'ciencia' ) ifTrue:[self elegirPregunta: 5].self ponerPregunta: categoria.self mostrarPregunta:categoria. ! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 00:56'!listaPreguntas	^ listaPreguntas! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:10'!rtaPlayer	^ rtaPlayer! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j1	^ j1! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j2	^ j2! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:02'!nroPregunta: anObject	nroPregunta := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!correcta	^ correcta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/5/2024 18:09'!resultado: anObject	resultado := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:12'!frase: anObject	frase := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:05'!band1: anObject	band1 := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:35'!preguntaAleatoria	^ preguntaAleatoria! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 00:56'!listaPreguntas: anObject	listaPreguntas := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!pregunta: anObject	pregunta := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 09:39'!ponerPregunta:cat"toma la linea guardada en el atributo preguntaAleatoria""divide la linea en 3 partes: pregunta, opciones y respuesta correcta""ejemplo de linea .txt:" "¿Quién fue el primer presidente de los Estados Unidos?A) Abraham Lincoln%B) George Washington%C) Thomas Jefferson%D) John Adams% B"|restoPregunta opciones signo ops pregSubstring| ops:= ''.signo:='?'.pregunta:=''.respuestas := OrderedCollection new.nroPregunta:= (preguntaAleatoria substrings)first.correcta := (preguntaAleatoria substrings) last.  "Toma solo el ultimo string de toda la frase. Es la respuesta correcta"pregSubstring := (preguntaAleatoria) allButFirst: 3.pregunta:= ( pregSubstring copyUpToSubstring: signo). "copia solo la pregunta sin el signo '?'" restoPregunta := preguntaAleatoria copyAfterLast: $?. "copia el resto despues de '?'"opciones:= restoPregunta allButLast. "copia solo las opciones sin la respuesta ni pregunta"opciones do: [ :i| (i~= $%)ifTrue:[ops:=ops, (i asString)] "recorre la secuencia y acumula los caracteres hasta encontrar %"		ifFalse:[		respuestas add: (ops asString). "cuando llega a un % guarda lo acumulado en el atributo respuestas (definido como OrderedCollection)"		ops:=''.			].		].respuestas add: 'PASAR'.! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j2: anObject	j2 := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:48'!respuestas: anObject	respuestas := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/5/2024 18:09'!resultado	^ resultado! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/3/2024 19:18'!opcion	^ opcion! !!Pregunta methodsFor: 'initialization' stamp: 'mica 11/22/2024 01:05'!elegirPregunta:categoriaCasilla"elige al azar una linea del archivo Pregunta.txt y la guarda en el atributo preguntaAleatoria "|archivo|archivo := FileSystem disk workingDirectory.(categoriaCasilla = 1)ifTrue:[frase:= ((archivo / 'DEPORTE.txt') contents lines)].(categoriaCasilla = 2)ifTrue:[frase:= ((archivo / 'HISTORIA.txt') contents lines)].(categoriaCasilla = 3)ifTrue:[frase:= ((archivo / 'ARTE.txt') contents lines)].(categoriaCasilla = 4)ifTrue:[frase:= ((archivo / 'GEOGRAFIA.txt') contents lines)].(categoriaCasilla = 5)ifTrue:[frase:= ((archivo / 'CIENCIA.txt') contents lines)].preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.self verificarPreguntaRepetidas! !!Pregunta methodsFor: 'showing' stamp: 'Gonzalo 11/23/2024 20:35'!mostrarPregunta: cat"muestra al jugador la pregunta con sus opciones.""guarda la respuesta en rtaPlayer y la compara con el parametro 'correcta'""segun coincida rtaPlayer y correcta, devuelve un cartelito de CORRECTO o INCORRECTO" |rtaNum nom|t ifTrue: [ self resultado: 0]ifFalse: [ band1 ifTrue: [nom:= j1]ifFalse: [ nom:= j2].Transcript show: 'Realizando pregunta ', (nroPregunta)  asString; cr.		rtaPlayer := UIManager default 		chooseFrom: respuestas 		message: nom,String cr,pregunta,'?'		title: 'DUELO',String cr,cat.Transcript show: 'rtaPlayer-->', rtaPlayer asString;cr.rtaNum := self opcionNumeroALetra: rtaPlayer.(correcta = (rtaNum))	ifTrue:[self resultado: 1]	ifFalse: [		(rtaPlayer = 5 )		ifTrue: [  			self resultado: 5]	 	ifFalse:[self resultado: 2]	].]	! !Object subclass: #Tablero	instanceVariableNames: 'cantPlayers matriz listaJugadores tamañoMatriz ventana atacante defensor lista ventana_4 label_4'	classVariableNames: ''	package: 'Paradigmas 2024'!!Tablero commentStamp: 'SuarezGonzalo 10/11/2024 13:25' prior: 0!Prueba para desarrollar una matriz con los casilleros    Instance Variables	cantPlayers:		<Object>    Implementation Points!!Tablero methodsFor: 'changing state' stamp: 'Gonzalo 11/21/2024 22:09'!captura: casilla1 a: casilla2| nombreCapturado nombreCapturador xCapturado yCapturado nroCapturador nroCapturado|xCapturado := casilla2 coordenadasX.yCapturado := casilla2 coordenadasY.nombreCapturado := casilla2 dueño.nombreCapturador := casilla1 dueño.nroCapturado:=((casilla2 dueño)findTokens:' ') last asInteger.((listaJugadores at:nroCapturado)escudo = false)ifTrue:[casilla2 dueño: casilla1 dueño.self transferirDe: nombreCapturado A: nombreCapturador laCeldaX: xCapturado Y: yCapturado.xCapturado > 1 ifTrue: [    ((self casillaX: xCapturado - 1 Y: yCapturado) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado - 1 Y: yCapturado)]].xCapturado < tamañoMatriz  ifTrue: [    ((self casillaX: xCapturado + 1 Y: yCapturado) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado + 1 Y: yCapturado)]].yCapturado > 1 ifTrue: [    ((self casillaX: xCapturado Y: yCapturado - 1) dueño = nombreCapturado)        ifTrue: [self captura: casilla1 a: (self casillaX: xCapturado Y: yCapturado - 1)]].yCapturado < tamañoMatriz  ifTrue: [    ((self casillaX: xCapturado Y: yCapturado + 1) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado Y: yCapturado + 1)]].nroCapturador := ((casilla1 dueño)findTokens:' ') last asInteger.(listaJugadores at:nroCapturador)aumentarRacha.]ifFalse:[UIManager default message:((nombreCapturado),' uso su escudo, sus celdas fueron protegidas').(listaJugadores at: nroCapturado )escudo: false.].! !!Tablero methodsFor: 'changing state' stamp: 'SuarezGonzalo 11/9/2024 19:43'!eliminarJugador: objetoJugador objetoJugador estado: 'ELIMINADO'.	cantPlayers :=cantPlayers -1.! !!Tablero methodsFor: 'initialization' stamp: 'a 11/24/2024 16:35'!initialize 	|cont|	Transcript clear.	cont:=0.	tamañoMatriz:= self tamañoDeLaMatriz.	listaJugadores:= Array new:(tamañoMatriz * tamañoMatriz).		matriz := Array new: tamañoMatriz .	cantPlayers:=tamañoMatriz *tamañoMatriz .	1 to: tamañoMatriz  do:[:y| matriz at:y put:( Array new:tamañoMatriz)].	1 to: tamañoMatriz  do:[:y| 		1 to: tamañoMatriz  do:[:x| 			(matriz at:y) at:x put:(Casilla new).			(((matriz at:y)at:x))tamañoMatrizCasilla: tamañoMatriz.			cont:=cont+1.			((matriz at:y) at:x) dueñoInicial: (cont).			((matriz at:y) at:x) asignarCategoria.			(listaJugadores) at:cont put:(Jugador new).			(listaJugadores at:cont)nombre:(((matriz at:y) at:x)dueño).			(listaJugadores at:cont)agregarCasilla:(Array with:x with:y).			((matriz at:y) at:x) coordenadasX: x Y: y.			((matriz at:y) at:x) encontrarVecinos.						].		].	Transcript show: 'Se creo el tablero de forma exitosa';cr.! !!Tablero methodsFor: 'initialization' stamp: 'Gonzalo 11/20/2024 20:32'!tamañoDeLaMatriz|entrada numero|	entrada :=(UIManager default request:'Ingrese el tamaño de la matriz')asInteger.	entrada ifNotNil:[ 		(entrada isInteger)ifTrue: [  		numero:=entrada asInteger.]]	 ifNil: [ 		self error: 'Debe ingresar un numero valido'.		 ].	^numero.! !!Tablero methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 16:55'!crearVentanaJuego	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_4:= Morph  new.    ventana_4 color: Color green.    ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/theFloor.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 950)@1. "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: ''.    label_4 color: Color green.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_4 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_4 addMorph: label_4.    ventana_4 openInWorld.! !!Tablero methodsFor: 'initialization' stamp: 'a 11/24/2024 16:35'!iniciarJuego|nroAtacante listaAdversarios respuesta duelo contadorDuelos | contadorDuelos :=0.	self crearVentanaJuego .	duelo :=Duelos new.	self interfazCrearVentana.	Transcript show: '----INICIA EL JUEGO----';cr.	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.					[ cantPlayers > 1 ]whileTrue: [  	Transcript show:'Cantidad de Jugadores: ';show:cantPlayers;cr.	Transcript show: 'Jugador: ';show:(listaJugadores at:nroAtacante)nombre;show:' Selecciona a cual de las siguientes casillas atacar:';cr.	(contadorDuelos =10)ifTrue:[		nroAtacante:=(((self masCasillas at:1)nombre)findTokens:' ') last asInteger.		atacante :=listaJugadores at:nroAtacante.		defensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).		Transcript show: '----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----';cr.		self mensajeDueloExtra:(atacante nombre)y:(defensor dueño).		duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.		contadorDuelos :=0.		]	ifFalse:[			self mostrarAdversariosde: nroAtacante.	listaAdversarios:=(listaJugadores at:nroAtacante)adversarios.	Transcript show: '---COLUMNA---FILA---CATEGORIA---------JUGADOR---';cr.	1 to:(listaAdversarios size)do:[:i|		Transcript show: '      ';show:((listaAdversarios at:i)at:1);show:'      '.		Transcript show: ' ';show:((listaAdversarios at:i)at:2);show:' '.		Transcript show: '     ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:' '.		Transcript show: '   ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:' ';cr.		].	self coloresAtacante: (listaJugadores at:nroAtacante)casillas.	self coloresAdversarios: listaAdversarios.	self interfazCrearVentana.	self cargarBotones."INTERFAZ----------------------------------------------------------------"  	self coloresAzul.	respuesta  := UIManager default     chooseFrom: listaAdversarios    message: 'Elige un contrincante'    title: 'DUELO'.  ventana delete.defensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. contadorDuelos :=contadorDuelos +1.].(duelo perdedor = 1)ifTrue:[	self captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).	nroAtacante :=((defensor dueño)findTokens:' ') last asInteger.	atacante := listaJugadores at:nroAtacante	]ifFalse: [ 	self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).	 ].(contadorDuelos  < 10)ifTrue:[respuesta  := UIManager default     chooseFrom: #('Seguir Atacando' 'Pasar Turno')    message: '¿Desea seguir atacando?'    title: 'DUELO'.(respuesta = 2)ifTrue:[	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.	].]ifFalse:[nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.].].	 	 Transcript show: 'GAME OVER'; cr.	 Transcript show: 'El ganador es el jugador:';show:(atacante nombre); cr.! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 02:16'!lista	^ lista! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 16:50'!matriz	^matriz.! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:24'!listaJugadores	^listaJugadores! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:53'!defensor: anObject	defensor := anObject! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 02:16'!lista: anObject	lista := anObject! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:53'!defensor	^ defensor! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/5/2024 18:57'!casillaX:x Y:y^((matriz at:y)at:x)! !!Tablero methodsFor: 'search' stamp: 'SuarezGonzalo 11/9/2024 18:06'!transferirDe:nombreJugador2 A:nombreJugador1 laCeldaX: x Y: y|coordenadas nroJugador2 nroJugador1 |Transcript show: 'se ejecuto la transeferencia de celdas';cr.coordenadas:=(Array with: x with:y ).nroJugador2  := (nombreJugador2  findTokens: ' ') last asInteger.nroJugador1  := (nombreJugador1  findTokens: ' ') last asInteger.(listaJugadores at:nroJugador2)eliminarCasilla: (Array with:x with: y).(listaJugadores at:nroJugador1)agregarCasilla: coordenadas.(((listaJugadores at:nroJugador2)casillas )isEmpty)ifTrue: [ self eliminarJugador: (listaJugadores at:nroJugador2) ].! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/20/2024 21:20'!buscarJugador	| indice colection valor |	colection := (1 to: tamañoMatriz * tamañoMatriz) asOrderedCollection.	[ 	indice := colection at: (Random new nextInteger: colection size).	valor := (listaJugadores at: indice) estado.	valor = 'ELIMINADO' ] whileTrue: [  ].	^ indice! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/23/2024 18:58'!masCasillas|mayores primero segundo|primero:=0.segundo:=0.mayores:= Array new:2.1 to:(tamañoMatriz*tamañoMatriz)do:[:i|	(primero < ((listaJugadores at:i)casillas )size)ifTrue:[		primero:=((listaJugadores at:i)casillas )size.		mayores at:1 put: ((listaJugadores at:i))		]ifFalse:[		(segundo < ((listaJugadores at:i)casillas )size)ifTrue:[		segundo :=((listaJugadores at:i)casillas )size.		mayores at:2 put: ((listaJugadores at:i))		]			].].^(mayores).! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/21/2024 20:25'!mostrarAdversariosde: nroJugador	| listaAdversarios cantCasillas x y |		listaAdversarios  := OrderedCollection new.	cantCasillas := ((listaJugadores at: nroJugador) casillas )size.		((listaJugadores at:nroJugador)cañon = false)ifTrue:[	1to:(cantCasillas)do:[:i|				x:=(((listaJugadores at:nroJugador)casillas)at:i)at:1.		y:=(((listaJugadores at:nroJugador)casillas) at:i)at:2.				(x>1)ifTrue:[			(((self casillaX:(x-1) Y:y)dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x-1) with:(y)))ifFalse:[				listaAdversarios  add:(Array with: (x-1) with:(y)).				].				].				].					(x<tamañoMatriz )ifTrue:[								(((self casillaX:(x+1) Y:(y))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x+1) with:(y)))ifFalse:[				listaAdversarios  add:(Array with: (x+1) with:(y)).].				].				].					(y>1)ifTrue:[						(((self casillaX:x Y:(y-1))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x) with:(y-1)))ifFalse:[				listaAdversarios  add:(Array with: (x) with:(y-1)).				].				].			].		(y<tamañoMatriz )ifTrue:[			(((self casillaX:x Y:(y+1))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x) with:(y+1)))ifFalse:[				listaAdversarios  add:(Array with: (x) with:(y+1)).				].			]. ].].]ifFalse: [ 	(listaJugadores at:nroJugador)cañon:false. 	1 to: tamañoMatriz do:[:i|		1 to: tamañoMatriz do:[:j|			(((self casillaX:i Y:(j))dueño )~=(listaJugadores at:nroJugador)nombre)ifTrue:[				listaAdversarios  add:(Array with: (i) with:(j)).						].		].].].(listaJugadores at:(nroJugador))adversarios: listaAdversarios .^listaAdversarios.! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 16:14'!coloresAdversarios:listaAdversarios1 to: (listaAdversarios size)do:[:i|	(self casillaX: ((listaAdversarios at:i)at:1) Y: ((listaAdversarios at:i)at:2))colorRojo 	].! !!Tablero methodsFor: 'interface' stamp: 'a 11/24/2024 16:28'!label_4	^label_4 .! !!Tablero methodsFor: 'interface' stamp: 'a 11/24/2024 16:28'!ventana_4	^ventana_4.! !!Tablero methodsFor: 'interface'!interfazCrearVentana|boton|		ventana := Morph new.	ventana extent: (100*(tamañoMatriz) )@(100*(tamañoMatriz) ); "Tamaño de la ventana"        color: Color white. "Color de fondo"boton:=SimpleButtonMorph new.boton label:'X';	actionSelector: #delete;	target:ventana;	position:(tamañoMatriz *100)@(tamañoMatriz *100);	extent: 10@10.	ventana addMorph:boton.	ventana openInWorld. "Abrir la ventana en el escritorio"! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/23/2024 20:49'!mensajeDueloExtra:jugadorA y:jugadorBUIManager default message:'Duelo entre titanes ',String cr,jugadorA,' se enfrentara al ',jugadorB.! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 19:40'!cargarBotones|texto |texto := TextMorph new.1 to: tamañoMatriz  do:[:i|	1 to: tamañoMatriz do:[:j|		(self casillaX: i Y:j)boton:SimpleButtonMorph new.		(self casillaX: i Y:j)boton label:'';  "Texto del botón"      		target: [ [ defensor:= self casillaX: i Y:j.self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: (defensor coordenadasX ) Y: (defensor coordenadasY)) ]]; "Acción al presionar"			color: ((self casillaX: i Y:j )color);    	  	actionSelector: #value; "El mensaje enviado al target"      		position: (100*(i-1))@(100*(j-1)); "Posición dentro de la ventana"      		extent: 100@100. "Tamaño del botón"		texto contents: ((self casillaX: i Y:j)dueño), String crlf, ((self casillaX: i Y:j)categoria) ,String crlf,     'Posición: (', i asString, ',', j asString, ')'; "Texto en dos líneas"       	color: Color black;       	font: (TextStyle default fontAt: 12);       	center: (self casillaX: i Y:j)boton bounds center. "Centrar el texto dentro del botón"		(self casillaX: i Y:j )boton addMorph: texto. "Añadir el texto al botón"		ventana addMorph:(self casillaX: i Y:j)boton . "Añadir el botón a la ventana"		texto:=TextMorph new.		].	]. ! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 16:19'!coloresAtacante:listaAtacante1 to: (listaAtacante  size)do:[:i|	(self casillaX: ((listaAtacante  at:i)at:1) Y: ((listaAtacante at:i)at:2))colorAmarillo 	].! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 16:38'!coloresAzul	1 to:tamañoMatriz  do:[:i|		1 to:tamañoMatriz  do:[:j|		 (self casillaX: i Y:j)colorAzul. 		]. 		] ! !Object subclass: #Timer	instanceVariableNames: 'timer_1 timer_2 ventana_1 ventana_2 ventana_3 label_1 label_2 label_3 proceso turno perdedor fin j1name j2name'	classVariableNames: ''	package: 'Paradigmas 2024'!!Timer commentStamp: 'Gonzalo 11/23/2024 18:13' prior: 0!- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	fin:		<Object>	j1name:		<Object>	j2name:		<Object>	label_1:		<Object>	label_2:		<Object>	perdedor:		<Object>	proceso:		<Object>	timer_1:		<Object>	timer_2:		<Object>	turno:		<Object>	ventana_1:		<Object>	ventana_2:		<Object>    Implementation Points!!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!ventana_1: anObject	ventana_1 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!label_2	^ label_2! !!Timer methodsFor: 'accessing' stamp: 'a 11/24/2024 15:41'!ventana_3	^ ventana_3! !!Timer methodsFor: 'accessing' stamp: 'a 11/24/2024 15:41'!label_3: anObject	label_3 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j2name: anObject	j2name := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:46'!fin: anObject	fin := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!label_1: anObject	label_1 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:12'!perdedor	^ perdedor! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!ventana_1	^ ventana_1! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j2name	^ j2name! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!label_2: anObject	label_2 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:31'!timer_1	^ timer_1! !!Timer methodsFor: 'accessing' stamp: 'a 11/24/2024 15:41'!ventana_3: anObject	ventana_3 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!label_1	^ label_1! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!turno	^ turno! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:12'!perdedor: anObject	perdedor := anObject! !!Timer methodsFor: 'accessing' stamp: 'a 11/24/2024 15:41'!label_3	^ label_3! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!ventana_2	^ ventana_2! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!proceso	^ proceso! !!Timer methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:31'!timer_1: anObject	timer_1 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!timer_2	^ timer_2! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!proceso: anObject	^ proceso := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j1name: anObject	j1name := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!timer_2: anObject	timer_2 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j1name	^ j1name! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!ventana_2: anObject	ventana_2 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:46'!fin	^ fin! !!Timer methodsFor: 'initialization' stamp: 'IngPepeGrillo 11/19/2024 23:03'!detener    proceso ifNotNil: [         proceso terminate.        proceso := nil.         ]! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:40'!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (50)@(20). "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'mica 11/22/2024 13:01'!restarSegundos:anPlayer "1 o 2"		(anPlayer  = 1) ifTrue: [ timer_1 :=timer_1 - 2 ].		(anPlayer  = 2) ifTrue: [ timer_2 :=timer_2 - 2 ].! !!Timer methodsFor: 'initialization' stamp: 'a 11/24/2024 16:27'!iniciar:jugadorInicial            |uno_sin_tiempo|				fin:= false.            uno_sin_tiempo :=false.				self fin:false.            turno:=jugadorInicial .                self crearVentana.    proceso := [                             [ uno_sin_tiempo ] whileFalse: [                  "va a ver si alguien se quedo sin tiempo"            (   (timer_1=0) | (timer_2=0) ) ifTrue: [ uno_sin_tiempo :=true ].            (Delay forSeconds: 1) wait.             "creamos 1 sola vez la ventana"            "(timer_1 = 5 )ifTrue: [self crearVentana]."            "vamos escribiendo los 2 tiempos sobre las 2 ventanas "           label_1 contents: j1name , String cr, 'Segundos: ', timer_1 printString.           label_2 contents: j2name , String cr, 'Segundos: ', timer_2 printString.                "veo de quien es el turno"                (turno=1) ifTrue: [ timer_1 := timer_1  - 1]                ifFalse: [ timer_2 := timer_2 -1 ]                                .                   "eliminamos la ventana"                                                                (timer_1 <=0) ifTrue: [							self perdedor: 1.							self fin:true.                    label_1 contents: 'Time is Over'.                          label_2 contents: 'You won this battle'.                        ventana_1 color: Color red.                        ventana_2 color: Color green."                    (Delay forSeconds: 2) wait.                     ventana_1 delete.                    ventana_1 := nil.                          ventana_2 delete.                    ventana_2 := nil."							"Aca perdio el jugador 1"							"tratamiento"							                                ].                                              (timer_2 <=0) ifTrue: [							self perdedor: 2.							self fin:true.                    label_1 contents: 'You won this battle'.                          label_2 contents: 'Time is Over'.                        ventana_1 color: Color green.                        ventana_2 color: Color red .						"Aca perdio el jugador 2"						"iniciar tratamiento"                                ].					          		].         ] fork. ! !!Timer methodsFor: 'initialization' stamp: 'mica 11/22/2024 14:16'!initialize     timer_1 :=10.    timer_2:=10.    proceso:=nil.! !!Timer methodsFor: 'initialization' stamp: 'IngPepeGrillo 11/19/2024 23:04'!turno:anValue    turno:=anValue .! !PackageManifest subclass: #ManifestParadigmas2024	instanceVariableNames: ''	classVariableNames: ''	package: 'Paradigmas 2024-Manifest'!!ManifestParadigmas2024 commentStamp: '<historical>' prior: 0!Please describe the package using the class comment of the included manifest class. The manifest class also includes other additional metadata for the package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManifestParadigmas2024 class	instanceVariableNames: ''!!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 22:39'!ruleWhileTrueRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T22:39:35.225-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'a 11/24/2024 15:39'!ruleLongMethodsRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #initialize #false)) #'2024-11-20T20:05:03.367-03:00') #(#(#RGMethodDefinition #(#Tablero #mostrarAdversariosde: #false)) #'2024-11-20T22:04:13.202-03:00') #(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T22:39:10.841-03:00') #(#(#RGPackageDefinition #(#'Paradigmas 2024')) #'2024-11-24T15:39:45.424607-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/21/2024 11:49'!ruleClassNotReferencedRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Interfaz)) #'2024-11-21T11:49:50.953-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 22:00'!ruleToDoRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T22:00:34.205-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 22:04'!ruleCodeCruftLeftInMethodsRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #initialize #false)) #'2024-11-20T22:04:43.412-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/21/2024 11:49'!ruleReIvarNeitherReadNorWrittenRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Interfaz)) #'2024-11-21T11:49:48.037-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 20:00'!ruleNotEliminationRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T20:00:46.733-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/21/2024 16:08'!ruleStringConcatenationRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #cargarBotonesAtacante:Adversarios: #false)) #'2024-11-21T15:41:06.333-03:00') #(#(#RGMethodDefinition #(#Tablero #cargarBotones #false)) #'2024-11-21T16:08:01.18-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'a 11/24/2024 15:41'!ruleSearchingLiteralRuleV1FalsePositive	^ #(#(#(#RGPackageDefinition #(#'Paradigmas 2024')) #'2024-11-24T15:41:23.397273-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 20:05'!ruleToDoWithIncrementRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #initialize #false)) #'2024-11-20T20:05:08.856-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/21/2024 11:49'!ruleNoClassCommentRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Interfaz)) #'2024-11-21T11:49:44.516-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 20:00'!ruleCascadedNextPutAllsRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T20:00:50.167-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 22:01'!ruleUnclassifiedMethodsRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #tamañoDeLaMatriz #false)) #'2024-11-20T20:16:36.668-03:00') #(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T22:01:06.978-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/21/2024 11:49'!ruleReClassNotCategorizedRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Interfaz)) #'2024-11-21T11:49:41.926-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 20:05'!ruleToDoCollectRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #initialize #false)) #'2024-11-20T20:05:06.639-03:00') )! !----End fileIn----!!Tablero methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 19:23' prior: 33898949!iniciarJuego|nroAtacante listaAdversarios respuesta duelo contadorDuelos ventanavictoria screenWidth | contadorDuelos :=0.	self crearVentanaJuego .	duelo :=Duelos new.	self interfazCrearVentana.	Transcript show: '----INICIA EL JUEGO----';cr.	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.					[ cantPlayers > 1 ]whileTrue: [  	Transcript show:'Cantidad de Jugadores: ';show:cantPlayers;cr.	Transcript show: 'Jugador: ';show:(listaJugadores at:nroAtacante)nombre;show:' Selecciona a cual de las siguientes casillas atacar:';cr.	(contadorDuelos =10)ifTrue:[		nroAtacante:=(((self masCasillas at:1)nombre)findTokens:' ') last asInteger.		atacante :=listaJugadores at:nroAtacante.		defensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).		Transcript show: '----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----';cr.		self mensajeDueloExtra:(atacante nombre)y:(defensor dueño).		duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.		contadorDuelos :=0.		]	ifFalse:[			self mostrarAdversariosde: nroAtacante.	listaAdversarios:=(listaJugadores at:nroAtacante)adversarios.	Transcript show: '---COLUMNA---FILA---CATEGORIA---------JUGADOR---';cr.	1 to:(listaAdversarios size)do:[:i|		Transcript show: '      ';show:((listaAdversarios at:i)at:1);show:'      '.		Transcript show: ' ';show:((listaAdversarios at:i)at:2);show:' '.		Transcript show: '     ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:' '.		Transcript show: '   ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:' ';cr.		].	self coloresAtacante: (listaJugadores at:nroAtacante)casillas.	self coloresAdversarios: listaAdversarios.	self interfazCrearVentana.	self cargarBotones."INTERFAZ----------------------------------------------------------------"  	self coloresAzul.	respuesta  := UIManager default     chooseFrom: listaAdversarios    message: 'Elige un contrincante'    title: 'DUELO'.  ventana delete.defensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. contadorDuelos :=contadorDuelos +1.].(duelo perdedor = 1)ifTrue:[	self captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).	nroAtacante :=((defensor dueño)findTokens:' ') last asInteger.	atacante := listaJugadores at:nroAtacante	]ifFalse: [ 	self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).	 ].(contadorDuelos  < 10)ifTrue:[respuesta  := UIManager default     chooseFrom: #('Seguir Atacando' 'Pasar Turno')    message: '¿Desea seguir atacando?'    title: 'DUELO'.(respuesta = 2)ifTrue:[	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.	].]ifFalse:[nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.].].	 ventanavictoria:= Morph  new.    ventanavictoria color: Color green.    ventanavictoria := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventanavictoria extent: 200@100.    ventanavictoria position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"	 Transcript show: 'GAME OVER'; cr.	 Transcript show: 'El ganador es el jugador:';show:(atacante nombre); cr.	! !!Tablero methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 19:24' prior: 33922382!iniciarJuego|nroAtacante listaAdversarios respuesta duelo contadorDuelos ventanavictoria screenWidth | contadorDuelos :=0.	screenWidth := Display width.	self crearVentanaJuego .	duelo :=Duelos new.	self interfazCrearVentana.	Transcript show: '----INICIA EL JUEGO----';cr.	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.					[ cantPlayers > 1 ]whileTrue: [  	Transcript show:'Cantidad de Jugadores: ';show:cantPlayers;cr.	Transcript show: 'Jugador: ';show:(listaJugadores at:nroAtacante)nombre;show:' Selecciona a cual de las siguientes casillas atacar:';cr.	(contadorDuelos =10)ifTrue:[		nroAtacante:=(((self masCasillas at:1)nombre)findTokens:' ') last asInteger.		atacante :=listaJugadores at:nroAtacante.		defensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).		Transcript show: '----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----';cr.		self mensajeDueloExtra:(atacante nombre)y:(defensor dueño).		duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.		contadorDuelos :=0.		]	ifFalse:[			self mostrarAdversariosde: nroAtacante.	listaAdversarios:=(listaJugadores at:nroAtacante)adversarios.	Transcript show: '---COLUMNA---FILA---CATEGORIA---------JUGADOR---';cr.	1 to:(listaAdversarios size)do:[:i|		Transcript show: '      ';show:((listaAdversarios at:i)at:1);show:'      '.		Transcript show: ' ';show:((listaAdversarios at:i)at:2);show:' '.		Transcript show: '     ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:' '.		Transcript show: '   ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:' ';cr.		].	self coloresAtacante: (listaJugadores at:nroAtacante)casillas.	self coloresAdversarios: listaAdversarios.	self interfazCrearVentana.	self cargarBotones."INTERFAZ----------------------------------------------------------------"  	self coloresAzul.	respuesta  := UIManager default     chooseFrom: listaAdversarios    message: 'Elige un contrincante'    title: 'DUELO'.  ventana delete.defensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. contadorDuelos :=contadorDuelos +1.].(duelo perdedor = 1)ifTrue:[	self captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).	nroAtacante :=((defensor dueño)findTokens:' ') last asInteger.	atacante := listaJugadores at:nroAtacante	]ifFalse: [ 	self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).	 ].(contadorDuelos  < 10)ifTrue:[respuesta  := UIManager default     chooseFrom: #('Seguir Atacando' 'Pasar Turno')    message: '¿Desea seguir atacando?'    title: 'DUELO'.(respuesta = 2)ifTrue:[	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.	].]ifFalse:[nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.].].	 ventanavictoria:= Morph  new.    ventanavictoria color: Color green.    ventanavictoria := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventanavictoria extent: 200@100.    ventanavictoria position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"	 Transcript show: 'GAME OVER'; cr.	 Transcript show: 'El ganador es el jugador:';show:(atacante nombre); cr.	! !!Tablero methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 19:24' prior: 33926346!iniciarJuego|nroAtacante listaAdversarios respuesta duelo contadorDuelos ventanavictoria screenWidth | contadorDuelos :=0.	screenWidth := Display width.	self crearVentanaJuego .	duelo :=Duelos new.	self interfazCrearVentana.	Transcript show: '----INICIA EL JUEGO----';cr.	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.					[ cantPlayers > 1 ]whileTrue: [  	Transcript show:'Cantidad de Jugadores: ';show:cantPlayers;cr.	Transcript show: 'Jugador: ';show:(listaJugadores at:nroAtacante)nombre;show:' Selecciona a cual de las siguientes casillas atacar:';cr.	(contadorDuelos =10)ifTrue:[		nroAtacante:=(((self masCasillas at:1)nombre)findTokens:' ') last asInteger.		atacante :=listaJugadores at:nroAtacante.		defensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).		Transcript show: '----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----';cr.		self mensajeDueloExtra:(atacante nombre)y:(defensor dueño).		duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.		contadorDuelos :=0.		]	ifFalse:[			self mostrarAdversariosde: nroAtacante.	listaAdversarios:=(listaJugadores at:nroAtacante)adversarios.	Transcript show: '---COLUMNA---FILA---CATEGORIA---------JUGADOR---';cr.	1 to:(listaAdversarios size)do:[:i|		Transcript show: '      ';show:((listaAdversarios at:i)at:1);show:'      '.		Transcript show: ' ';show:((listaAdversarios at:i)at:2);show:' '.		Transcript show: '     ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:' '.		Transcript show: '   ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:' ';cr.		].	self coloresAtacante: (listaJugadores at:nroAtacante)casillas.	self coloresAdversarios: listaAdversarios.	self interfazCrearVentana.	self cargarBotones."INTERFAZ----------------------------------------------------------------"  	self coloresAzul.	respuesta  := UIManager default     chooseFrom: listaAdversarios    message: 'Elige un contrincante'    title: 'DUELO'.  ventana delete.defensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. contadorDuelos :=contadorDuelos +1.].(duelo perdedor = 1)ifTrue:[	self captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).	nroAtacante :=((defensor dueño)findTokens:' ') last asInteger.	atacante := listaJugadores at:nroAtacante	]ifFalse: [ 	self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).	 ].(contadorDuelos  < 10)ifTrue:[respuesta  := UIManager default     chooseFrom: #('Seguir Atacando' 'Pasar Turno')    message: '¿Desea seguir atacando?'    title: 'DUELO'.(respuesta = 2)ifTrue:[	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.	].]ifFalse:[nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.].].	 ventanavictoria:= Morph  new.    ventanavictoria color: Color green.    ventanavictoria := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventanavictoria extent: 200@100.    ventanavictoria position: (200)@(200). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"	 Transcript show: 'GAME OVER'; cr.	 Transcript show: 'El ganador es el jugador:';show:(atacante nombre); cr.	! !!Tablero methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 19:30' prior: 33930341!iniciarJuego|nroAtacante listaAdversarios respuesta duelo contadorDuelos ventanavictoria screenWidth | contadorDuelos :=0.	screenWidth := Display width.	self crearVentanaJuego .	duelo :=Duelos new.	self interfazCrearVentana.	Transcript show: '----INICIA EL JUEGO----';cr.	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.					[ cantPlayers > 1 ]whileTrue: [  	Transcript show:'Cantidad de Jugadores: ';show:cantPlayers;cr.	Transcript show: 'Jugador: ';show:(listaJugadores at:nroAtacante)nombre;show:' Selecciona a cual de las siguientes casillas atacar:';cr.	(contadorDuelos =10)ifTrue:[		nroAtacante:=(((self masCasillas at:1)nombre)findTokens:' ') last asInteger.		atacante :=listaJugadores at:nroAtacante.		defensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).		Transcript show: '----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----';cr.		self mensajeDueloExtra:(atacante nombre)y:(defensor dueño).		duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.		contadorDuelos :=0.		]	ifFalse:[			self mostrarAdversariosde: nroAtacante.	listaAdversarios:=(listaJugadores at:nroAtacante)adversarios.	Transcript show: '---COLUMNA---FILA---CATEGORIA---------JUGADOR---';cr.	1 to:(listaAdversarios size)do:[:i|		Transcript show: '      ';show:((listaAdversarios at:i)at:1);show:'      '.		Transcript show: ' ';show:((listaAdversarios at:i)at:2);show:' '.		Transcript show: '     ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:' '.		Transcript show: '   ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:' ';cr.		].	self coloresAtacante: (listaJugadores at:nroAtacante)casillas.	self coloresAdversarios: listaAdversarios.	self interfazCrearVentana.	self cargarBotones."INTERFAZ----------------------------------------------------------------"  	self coloresAzul.	respuesta  := UIManager default     chooseFrom: listaAdversarios    message: 'Elige un contrincante'    title: 'DUELO'.  ventana delete.defensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. contadorDuelos :=contadorDuelos +1.].(duelo perdedor = 1)ifTrue:[	self captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).	nroAtacante :=((defensor dueño)findTokens:' ') last asInteger.	atacante := listaJugadores at:nroAtacante	]ifFalse: [ 	self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).	 ].(contadorDuelos  < 10)ifTrue:[respuesta  := UIManager default     chooseFrom: #('Seguir Atacando' 'Pasar Turno')    message: '¿Desea seguir atacando?'    title: 'DUELO'.(respuesta = 2)ifTrue:[	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.	].]ifFalse:[nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.].].	 ventanavictoria:= Morph  new.    ventanavictoria color: Color green.    ventanavictoria := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/victoria.png') asMorph.    ventanavictoria extent: 200@100.    ventanavictoria position: (200)@(200). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"	 Transcript show: 'GAME OVER'; cr.	 Transcript show: 'El ganador es el jugador:';show:(atacante nombre); cr.	! !!Tablero methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 19:32' prior: 33934321!iniciarJuego|nroAtacante listaAdversarios respuesta duelo contadorDuelos ventanavictoria screenWidth labelvictoria | contadorDuelos :=0.	screenWidth := Display width.	self crearVentanaJuego .	duelo :=Duelos new.	self interfazCrearVentana.	Transcript show: '----INICIA EL JUEGO----';cr.	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.					[ cantPlayers > 1 ]whileTrue: [  	Transcript show:'Cantidad de Jugadores: ';show:cantPlayers;cr.	Transcript show: 'Jugador: ';show:(listaJugadores at:nroAtacante)nombre;show:' Selecciona a cual de las siguientes casillas atacar:';cr.	(contadorDuelos =10)ifTrue:[		nroAtacante:=(((self masCasillas at:1)nombre)findTokens:' ') last asInteger.		atacante :=listaJugadores at:nroAtacante.		defensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).		Transcript show: '----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----';cr.		self mensajeDueloExtra:(atacante nombre)y:(defensor dueño).		duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.		contadorDuelos :=0.		]	ifFalse:[			self mostrarAdversariosde: nroAtacante.	listaAdversarios:=(listaJugadores at:nroAtacante)adversarios.	Transcript show: '---COLUMNA---FILA---CATEGORIA---------JUGADOR---';cr.	1 to:(listaAdversarios size)do:[:i|		Transcript show: '      ';show:((listaAdversarios at:i)at:1);show:'      '.		Transcript show: ' ';show:((listaAdversarios at:i)at:2);show:' '.		Transcript show: '     ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:' '.		Transcript show: '   ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:' ';cr.		].	self coloresAtacante: (listaJugadores at:nroAtacante)casillas.	self coloresAdversarios: listaAdversarios.	self interfazCrearVentana.	self cargarBotones."INTERFAZ----------------------------------------------------------------"  	self coloresAzul.	respuesta  := UIManager default     chooseFrom: listaAdversarios    message: 'Elige un contrincante'    title: 'DUELO'.  ventana delete.defensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. contadorDuelos :=contadorDuelos +1.].(duelo perdedor = 1)ifTrue:[	self captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).	nroAtacante :=((defensor dueño)findTokens:' ') last asInteger.	atacante := listaJugadores at:nroAtacante	]ifFalse: [ 	self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).	 ].(contadorDuelos  < 10)ifTrue:[respuesta  := UIManager default     chooseFrom: #('Seguir Atacando' 'Pasar Turno')    message: '¿Desea seguir atacando?'    title: 'DUELO'.(respuesta = 2)ifTrue:[	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.	].]ifFalse:[nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.].].	 ventanavictoria:= Morph  new.    ventanavictoria color: Color green.    ventanavictoria := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/victoria.png') asMorph.    ventanavictoria extent: 200@100.    ventanavictoria position: (200)@(200). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente" 	 labelvictoria := TextMorph new.    "mensaje de la ventana al iniciar"    labelvictoria contents: ''.    labelvictoria color: Color red.    labelvictoria position: (ventanavictoria bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventanavictoria addMorph: labelvictoria.    ventanavictoria openInWorld.	 Transcript show: 'GAME OVER'; cr.	 Transcript show: 'El ganador es el jugador:';show:(atacante nombre); cr.	! !----QUIT/NOSAVE----2024-11-24T19:33:51.432-03:00 Tiago.image priorSource: 148163!----QUIT/NOSAVE----2024-11-24T19:35:48.756-03:00 Tiago.image priorSource: 148163!Smalltalk globals removeClassNamed: #AnObsoleteTablero!Smalltalk globals removeClassNamed: #AnObsoleteCasilla!Smalltalk globals removeClassNamed: #AnObsoleteInterfaz!Smalltalk globals removeClassNamed: #AnObsoletePregunta!Smalltalk globals removeClassNamed: #AnObsoleteTimer!Smalltalk globals removeClassNamed: #AnObsoleteDuelos!Smalltalk globals removeClassNamed: #AnObsoleteJugador!Object subclass: #Casilla	instanceVariableNames: 'dueño color tema coordenadasX coordenadasY vecinos categoria pregunta boton'	classVariableNames: 'TamañoMatriz'	package: 'Paradigmas 2024'!!Casilla commentStamp: 'SuarezGonzalo 10/11/2024 13:33' prior: 0!Implementation Points!!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:05'!colorAzul	color:=Color blue.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:06'!colorAmarillo	color:=Color yellow.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/20/2024 12:30'!tamañoMatrizCasilla:xTamañoMatriz :=x.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:05'!colorRojo	color:=Color red.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/26/2024 17:56'!coordenadasX: valorX Y:valorY coordenadasX :=valorX.coordenadasY :=valorY.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 16:53'!dueño:valor	dueño:=valor .! !!Casilla methodsFor: 'initialization' stamp: 'Gonzalo 11/21/2024 16:01'!initialize color:=Color blue.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 17:01'!coordenadasXY: valorX and:valorY coordenadasX :=valorX.coordenadasY :=valorY.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 16:54'!dueñoInicial:valordueño := 'Jugador ',(valor asString).! !!Casilla methodsFor: 'add/remove' stamp: 'Gonzalo 11/20/2024 12:26'!encontrarVecinosvecinos:=(OrderedCollection new).(coordenadasX >1)ifTrue:[vecinos add:(Array with: (coordenadasX -1) with: coordenadasY )].(coordenadasX <TamañoMatriz )ifTrue:[vecinos add:(Array with: (coordenadasX +1) with: coordenadasY )].(coordenadasY >1)ifTrue:[vecinos add:(Array with: coordenadasX with: (coordenadasY -1))].(coordenadasY <TamañoMatriz )ifTrue:[vecinos add:(Array with: coordenadasX with: (coordenadasY +1))].! !!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:02'!coordenadasY	^coordenadasY   ! !!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:02'!coordenadasX	^coordenadasX  ! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!pregunta: anObject	pregunta := anObject! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!categoria	^ categoria! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!pregunta	^ pregunta! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 18:22'!vecinos: anObject	vecinos := anObject! !!Casilla methodsFor: 'accessing'!asignarCategoria"1 --Hisoria		2--Deporte	3--Geografia 4--Arte 5--ciencia"|listaCategoria|listaCategoria := #('historia' 'deporte' 'geografia' 'arte' 'ciencia').categoria:=  (listaCategoria at: (1 to: listaCategoria size)atRandom)! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!categoria: anObject	categoria := anObject! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 12:18'!boton^boton.! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/14/2024 18:46'!llamarPregunta(categoria = 'historia' ) ifTrue:[pregunta elegirPregunta: 1].(categoria = 'deporte' ) ifTrue:[pregunta elegirPregunta: 2].(categoria = 'geografia' ) ifTrue:[pregunta elegirPregunta: 3].(categoria = 'arte' ) ifTrue:[pregunta elegirPregunta: 4].(categoria = 'ciencia' ) ifTrue:[pregunta elegirPregunta: 5].pregunta ponerPregunta.pregunta mostrarPregunta: categoria. ! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 18:22'!vecinos	^ vecinos! !!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 16:46'!dueño^dueño! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/20/2024 12:30'!tamañoMatrizCasilla^TamañoMatriz.! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 12:17'!boton:xboton:=x! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 16:04'!color	^color.! !Object subclass: #Duelos	instanceVariableNames: 'timer bandJugador1 perdedor categoria'	classVariableNames: ''	package: 'Paradigmas 2024'!!Duelos commentStamp: 'mica 11/5/2024 02:40' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages.- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	jugador1:		<Object>	jugador2:		<Object>    Implementation Points!!Duelos methodsFor: 'extra' stamp: 'mica 11/23/2024 19:46'!dueloExtra: powerUp|listaCat|listaCat := #('historia' 'deporte' 'geografia' 'arte' 'ciencia').(powerUp)ifTrue: [ self categoria: (listaCat at: ((1 to: listaCat size)atRandom))]! !!Duelos methodsFor: 'accessing' stamp: 'Gonzalo 11/23/2024 21:47'!pasarTurno:jugador1 a:jugador2bandJugador1						ifTrue: [ 							"UIManager default message:'Es el turno del ',jugador2 ."							Transcript								show: '1';								cr.						timer turno: 2.						bandJugador1 := false					]					ifFalse: [ 						"UIManager default message:'Es el turno del ',jugador1 ."						Transcript							show: '2';							cr.						timer turno: 1.						bandJugador1 := true.					]! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:57'!perdedor: anObject	perdedor := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:19'!timer	^ timer! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:24'!bandJugador1: anObject	bandJugador1 := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 19:16'!categoria	^ categoria! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:19'!timer: anObject	timer := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 19:16'!categoria: anObject	categoria := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:58'!perdedor	^ perdedor! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:24'!bandJugador1	^ bandJugador1! !!Duelos methodsFor: 'initialization' stamp: 'a 11/24/2024 15:41'!iniciarDueloEntre: player1 y: player2 categoria: player2cat dueloExtra: arg1	| pregunta|	timer := Timer new.	timer j1name: player1 .	timer j2name: player2 .	pregunta := Pregunta new.	pregunta j1: player1.	pregunta j2: player2.	pregunta listaPreguntas: OrderedCollection new.	pregunta t: false.	bandJugador1 := true.	pregunta band1: true.	self timer iniciar: 1.	categoria := player2cat.		[ self timer fin ] whileFalse: [ 		self dueloExtra: arg1.		pregunta llamarPregunta: categoria.		pregunta resultado = 5 ifTrue: [ self pasarPregunta ].		pregunta resultado = 1 ifTrue: [ 			self pasarTurno:player1 a:player2.			pregunta band1: bandJugador1 ].		pregunta resultado = 2 ifTrue: [ 			Transcript				show: '------->>   INCORRECTO';				cr.			[ 			pregunta resultado = 1 | (pregunta resultado = 5)			| (pregunta resultado = 0) ] whileFalse: [ 				self timer timer_1 <= 0 | (self timer timer_2 <= 0) ifTrue: [ 					pregunta t: true ].				pregunta mostrarPregunta: self categoria ].			pregunta resultado = 5 ifTrue: [ self pasarPregunta ].			pregunta resultado = 1 ifTrue: [ 				self pasarTurno:player1 a:player2.				pregunta band1: bandJugador1 ] ].].Transcript show: 'PERDEDOR Player ',timer perdedor asString;					cr.(timer ventana_1) delete.(timer ventana_2) delete. (timer ventana_3) delete. self perdedor: timer perdedor! !!Duelos methodsFor: 'initialization' stamp: 'mica 11/23/2024 20:03'!pasarPreguntabandJugador1					ifTrue: [ 						self timer restarSegundos: 1. 						Transcript							show: '1';							cr.]					ifFalse: [ 						self timer restarSegundos: 2.						Transcript							show: '2';							cr.							]! !Object subclass: #Interfaz	instanceVariableNames: 'accionMouse'	classVariableNames: ''	package: 'Paradigmas 2024'!!Interfaz commentStamp: 'Gonzalo 11/23/2024 18:13' prior: 0!- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	accionMouse:		<Object>    Implementation Points!!Interfaz methodsFor: 'initialization' stamp: 'Gonzalo 11/21/2024 12:16'!initialize | ventana boton |ventana := Morph new.ventana extent: 600@600; "Tamaño de la ventana"        color: Color white. "Color de fondo"boton := SimpleButtonMorph new.boton label: 'Presióname'; "Texto del botón"       target: [ Transcript show: '¡Botón presionado!!'; cr ]; "Acción al presionar"       actionSelector: #value; "El mensaje enviado al target"       position: 00@00; "Posición dentro de la ventana"       extent: 100@100. "Tamaño del botón"ventana addMorph: boton. "Añadir el botón a la ventana"ventana openInWorld. "Abrir la ventana en el escritorio"! !Object subclass: #Jugador	instanceVariableNames: 'nombre casillas adversarios estado escudo cañon racha'	classVariableNames: ''	package: 'Paradigmas 2024'!!Jugador commentStamp: 'SuarezGonzalo 10/11/2024 17:10' prior: 0!Clase Jugador    Instance Variables	dueño:		<Object>	vecinos:		<Object>    Implementation Points!!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/5/2024 17:07'!nombre^nombre.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 21:03'!obtenerX:nroCasilla^((casillas at:nroCasilla )at:1)! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/9/2024 18:28'!eliminarCasilla: xcasillas remove: x ifAbsent: [ Error signal: 'Error la casilla no pertenece al jugador' ].! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/9/2024 19:32'!adversarios ^adversarios.! !!Jugador methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 10:38'!cañon	^cañon.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 20:40'!casillas^casillas.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 21:03'!obtenerY:nroCasilla^((casillas at:nroCasilla )at:2)! !!Jugador methodsFor: 'accessing' stamp: 'mica 11/16/2024 17:43'!estado	^ estado! !!Jugador methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 10:38'!escudo	^escudo.! !!Jugador methodsFor: 'initialize' stamp: 'SuarezGonzalo 10/31/2024 19:50'!crearJugador: nombreJugador x:x y:ynombre :=nombreJugador .casillas:= OrderedCollection new.casillas add:(Array with:x with:y)! !!Jugador methodsFor: 'initialize' stamp: 'Gonzalo 11/21/2024 20:54'!initialize 	nombre:='Unkown Player'.	escudo:=false.	cañon :=false.	racha:=0.	casillas:=OrderedCollection new.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/23/2024 21:14'!agregarPowerUp	| respuesta |	racha :=0.UIManager default message:'El ',nombre ,' obtuvo una racha de 5 victorias'.respuesta := UIManager default    chooseFrom: #('Escudo' 'Cañon')    message: 'Elija PowerUp',String cr,'Escudo : proteje todas tus casillas ante una captura',String cr,'Cañon: permite atacar a cualquier casilla del tablero'.    "Procesar la respuesta"respuesta ifNotNil: [    (respuesta = 1)ifTrue: [ 			escudo:=true.	 ].	(respuesta = 2)ifTrue: [ 			cañon :=true.				 ].] ifNil: [    Transcript show: 'No se seleccionó ninguna opción'; cr.	self agregarPowerUp.].! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 10:41'!cañon:x	cañon:=x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/9/2024 18:21'!estado:x	estado:=x.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 10:42'!escudo:x	escudo:=x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 10/31/2024 19:43'!nombre:xnombre:=x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 10/31/2024 19:44'!casilla: xcasillas add:x.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 21:09'!aumentarRacha racha:=racha +1.	(racha=5)ifTrue:[self agregarPowerUp].! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/9/2024 13:26'!agregarCasilla: xcasillas add:x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/5/2024 19:01'!adversarios: listaadversarios :=lista.! !Object subclass: #Pregunta	instanceVariableNames: 'opcion preguntaAleatoria respuestas resultado correcta pregunta nroPregunta frase listaPreguntas j1 j2 band1 rtaPlayer t'	classVariableNames: ''	package: 'Paradigmas 2024'!!Pregunta commentStamp: 'mica 11/4/2024 21:42' prior: 0!-Toma la pregunta, opciones y respuesta correcta de una archivo .txt-Muestra la pregunta y permite al jugador contestar a traves de opciones.!!Pregunta methodsFor: 'control' stamp: 'mica 11/22/2024 02:06'!verificarPreguntaRepetidas|band| "QUE VERIFIQUE EN UNA INSTANCIA DE DUELO, NO EN TODO EL JUEGO"band:= true.[band] whileTrue:[ 	preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.	nroPregunta:= (preguntaAleatoria substrings) first.		(listaPreguntas isEmpty)	ifTrue:[		listaPreguntas add: nroPregunta. band:= false]	ifFalse: [ 		(listaPreguntas size = frase size) 						ifTrue:[ band:= false]						ifFalse:[ 							(listaPreguntas includes: nroPregunta)							ifFalse:[									listaPreguntas add: nroPregunta. band:= false]							ifTrue:[								band:= true							]						] 				]].! !!Pregunta methodsFor: 'control' stamp: 'mica 11/21/2024 22:08'!verificarPreguntaRepetidaEn: listaPreguntas|band| "QUE VERIFIQUE EN UNA INSTANCIA DE DUELO, NO EN TODO EL JUEGO"band:= true.[band] whileTrue:[ 	preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.	nroPregunta:= (preguntaAleatoria substrings) first.	(listaPreguntas isEmpty)	ifTrue:[		listaPreguntas add: nroPregunta. band:= false]	ifFalse: [ 		(listaPreguntas size = frase size) 						ifTrue:[ band:= false]						ifFalse:[ 							(listaPreguntas includes: nroPregunta)							ifFalse:[									listaPreguntas add: nroPregunta. band:= false]							ifTrue:[								band:= true							]						] 				]]! !!Pregunta methodsFor: 'converting' stamp: 'mica 11/21/2024 02:41'!opcionNumeroALetra: a"convierte la respuesta del jugador en A, B, C, o D para luego""comparar con la respuesta correcta en mostrarPregunta:y:"|listaOpciones |listaOpciones := #('A' 'B' 'C' 'D' 0).^(listaOpciones at: a)! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:35'!preguntaAleatoria: anObject	preguntaAleatoria := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!correcta: anObject	correcta := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:48'!respuestas	^ respuestas! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:12'!frase	^ frase! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:55'!t	^ t! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j1: anObject	j1 := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:02'!nroPregunta	^ nroPregunta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:10'!rtaPlayer: anObject	rtaPlayer := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/3/2024 19:23'!opcion: anObject	opcion := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:55'!t: anObject	t := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:05'!band1	^ band1! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!pregunta	^ pregunta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:55'!llamarPregunta: categoria	(categoria = 'deporte' ) ifTrue:[self elegirPregunta: 1].(categoria = 'historia' ) ifTrue:[self elegirPregunta: 2].(categoria = 'arte' ) ifTrue:[self elegirPregunta: 3].(categoria = 'geografia' ) ifTrue:[self elegirPregunta: 4].(categoria = 'ciencia' ) ifTrue:[self elegirPregunta: 5].self ponerPregunta: categoria.self mostrarPregunta:categoria. ! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 00:56'!listaPreguntas	^ listaPreguntas! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:10'!rtaPlayer	^ rtaPlayer! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j1	^ j1! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j2	^ j2! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:02'!nroPregunta: anObject	nroPregunta := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!correcta	^ correcta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/5/2024 18:09'!resultado: anObject	resultado := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:12'!frase: anObject	frase := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:05'!band1: anObject	band1 := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:35'!preguntaAleatoria	^ preguntaAleatoria! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 00:56'!listaPreguntas: anObject	listaPreguntas := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!pregunta: anObject	pregunta := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 09:39'!ponerPregunta:cat"toma la linea guardada en el atributo preguntaAleatoria""divide la linea en 3 partes: pregunta, opciones y respuesta correcta""ejemplo de linea .txt:" "¿Quién fue el primer presidente de los Estados Unidos?A) Abraham Lincoln%B) George Washington%C) Thomas Jefferson%D) John Adams% B"|restoPregunta opciones signo ops pregSubstring| ops:= ''.signo:='?'.pregunta:=''.respuestas := OrderedCollection new.nroPregunta:= (preguntaAleatoria substrings)first.correcta := (preguntaAleatoria substrings) last.  "Toma solo el ultimo string de toda la frase. Es la respuesta correcta"pregSubstring := (preguntaAleatoria) allButFirst: 3.pregunta:= ( pregSubstring copyUpToSubstring: signo). "copia solo la pregunta sin el signo '?'" restoPregunta := preguntaAleatoria copyAfterLast: $?. "copia el resto despues de '?'"opciones:= restoPregunta allButLast. "copia solo las opciones sin la respuesta ni pregunta"opciones do: [ :i| (i~= $%)ifTrue:[ops:=ops, (i asString)] "recorre la secuencia y acumula los caracteres hasta encontrar %"		ifFalse:[		respuestas add: (ops asString). "cuando llega a un % guarda lo acumulado en el atributo respuestas (definido como OrderedCollection)"		ops:=''.			].		].respuestas add: 'PASAR'.! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j2: anObject	j2 := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:48'!respuestas: anObject	respuestas := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/5/2024 18:09'!resultado	^ resultado! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/3/2024 19:18'!opcion	^ opcion! !!Pregunta methodsFor: 'initialization' stamp: 'mica 11/22/2024 01:05'!elegirPregunta:categoriaCasilla"elige al azar una linea del archivo Pregunta.txt y la guarda en el atributo preguntaAleatoria "|archivo|archivo := FileSystem disk workingDirectory.(categoriaCasilla = 1)ifTrue:[frase:= ((archivo / 'DEPORTE.txt') contents lines)].(categoriaCasilla = 2)ifTrue:[frase:= ((archivo / 'HISTORIA.txt') contents lines)].(categoriaCasilla = 3)ifTrue:[frase:= ((archivo / 'ARTE.txt') contents lines)].(categoriaCasilla = 4)ifTrue:[frase:= ((archivo / 'GEOGRAFIA.txt') contents lines)].(categoriaCasilla = 5)ifTrue:[frase:= ((archivo / 'CIENCIA.txt') contents lines)].preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.self verificarPreguntaRepetidas! !!Pregunta methodsFor: 'showing' stamp: 'Gonzalo 11/23/2024 20:35'!mostrarPregunta: cat"muestra al jugador la pregunta con sus opciones.""guarda la respuesta en rtaPlayer y la compara con el parametro 'correcta'""segun coincida rtaPlayer y correcta, devuelve un cartelito de CORRECTO o INCORRECTO" |rtaNum nom|t ifTrue: [ self resultado: 0]ifFalse: [ band1 ifTrue: [nom:= j1]ifFalse: [ nom:= j2].Transcript show: 'Realizando pregunta ', (nroPregunta)  asString; cr.		rtaPlayer := UIManager default 		chooseFrom: respuestas 		message: nom,String cr,pregunta,'?'		title: 'DUELO',String cr,cat.Transcript show: 'rtaPlayer-->', rtaPlayer asString;cr.rtaNum := self opcionNumeroALetra: rtaPlayer.(correcta = (rtaNum))	ifTrue:[self resultado: 1]	ifFalse: [		(rtaPlayer = 5 )		ifTrue: [  			self resultado: 5]	 	ifFalse:[self resultado: 2]	].]	! !Object subclass: #Tablero	instanceVariableNames: 'cantPlayers matriz listaJugadores tamañoMatriz ventana atacante defensor lista ventana_4 label_4'	classVariableNames: ''	package: 'Paradigmas 2024'!!Tablero commentStamp: 'SuarezGonzalo 10/11/2024 13:25' prior: 0!Prueba para desarrollar una matriz con los casilleros    Instance Variables	cantPlayers:		<Object>    Implementation Points!!Tablero methodsFor: 'changing state' stamp: 'Gonzalo 11/21/2024 22:09'!captura: casilla1 a: casilla2| nombreCapturado nombreCapturador xCapturado yCapturado nroCapturador nroCapturado|xCapturado := casilla2 coordenadasX.yCapturado := casilla2 coordenadasY.nombreCapturado := casilla2 dueño.nombreCapturador := casilla1 dueño.nroCapturado:=((casilla2 dueño)findTokens:' ') last asInteger.((listaJugadores at:nroCapturado)escudo = false)ifTrue:[casilla2 dueño: casilla1 dueño.self transferirDe: nombreCapturado A: nombreCapturador laCeldaX: xCapturado Y: yCapturado.xCapturado > 1 ifTrue: [    ((self casillaX: xCapturado - 1 Y: yCapturado) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado - 1 Y: yCapturado)]].xCapturado < tamañoMatriz  ifTrue: [    ((self casillaX: xCapturado + 1 Y: yCapturado) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado + 1 Y: yCapturado)]].yCapturado > 1 ifTrue: [    ((self casillaX: xCapturado Y: yCapturado - 1) dueño = nombreCapturado)        ifTrue: [self captura: casilla1 a: (self casillaX: xCapturado Y: yCapturado - 1)]].yCapturado < tamañoMatriz  ifTrue: [    ((self casillaX: xCapturado Y: yCapturado + 1) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado Y: yCapturado + 1)]].nroCapturador := ((casilla1 dueño)findTokens:' ') last asInteger.(listaJugadores at:nroCapturador)aumentarRacha.]ifFalse:[UIManager default message:((nombreCapturado),' uso su escudo, sus celdas fueron protegidas').(listaJugadores at: nroCapturado )escudo: false.].! !!Tablero methodsFor: 'changing state' stamp: 'SuarezGonzalo 11/9/2024 19:43'!eliminarJugador: objetoJugador objetoJugador estado: 'ELIMINADO'.	cantPlayers :=cantPlayers -1.! !!Tablero methodsFor: 'initialization' stamp: 'a 11/24/2024 16:35'!initialize 	|cont|	Transcript clear.	cont:=0.	tamañoMatriz:= self tamañoDeLaMatriz.	listaJugadores:= Array new:(tamañoMatriz * tamañoMatriz).		matriz := Array new: tamañoMatriz .	cantPlayers:=tamañoMatriz *tamañoMatriz .	1 to: tamañoMatriz  do:[:y| matriz at:y put:( Array new:tamañoMatriz)].	1 to: tamañoMatriz  do:[:y| 		1 to: tamañoMatriz  do:[:x| 			(matriz at:y) at:x put:(Casilla new).			(((matriz at:y)at:x))tamañoMatrizCasilla: tamañoMatriz.			cont:=cont+1.			((matriz at:y) at:x) dueñoInicial: (cont).			((matriz at:y) at:x) asignarCategoria.			(listaJugadores) at:cont put:(Jugador new).			(listaJugadores at:cont)nombre:(((matriz at:y) at:x)dueño).			(listaJugadores at:cont)agregarCasilla:(Array with:x with:y).			((matriz at:y) at:x) coordenadasX: x Y: y.			((matriz at:y) at:x) encontrarVecinos.						].		].	Transcript show: 'Se creo el tablero de forma exitosa';cr.! !!Tablero methodsFor: 'initialization' stamp: 'Gonzalo 11/20/2024 20:32'!tamañoDeLaMatriz|entrada numero|	entrada :=(UIManager default request:'Ingrese el tamaño de la matriz')asInteger.	entrada ifNotNil:[ 		(entrada isInteger)ifTrue: [  		numero:=entrada asInteger.]]	 ifNil: [ 		self error: 'Debe ingresar un numero valido'.		 ].	^numero.! !!Tablero methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 16:55'!crearVentanaJuego	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_4:= Morph  new.    ventana_4 color: Color green.    ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/theFloor.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 950)@1. "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: ''.    label_4 color: Color green.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_4 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_4 addMorph: label_4.    ventana_4 openInWorld.! !!Tablero methodsFor: 'initialization' stamp: 'a 11/24/2024 16:35'!iniciarJuego|nroAtacante listaAdversarios respuesta duelo contadorDuelos | contadorDuelos :=0.	self crearVentanaJuego .	duelo :=Duelos new.	self interfazCrearVentana.	Transcript show: '----INICIA EL JUEGO----';cr.	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.					[ cantPlayers > 1 ]whileTrue: [  	Transcript show:'Cantidad de Jugadores: ';show:cantPlayers;cr.	Transcript show: 'Jugador: ';show:(listaJugadores at:nroAtacante)nombre;show:' Selecciona a cual de las siguientes casillas atacar:';cr.	(contadorDuelos =10)ifTrue:[		nroAtacante:=(((self masCasillas at:1)nombre)findTokens:' ') last asInteger.		atacante :=listaJugadores at:nroAtacante.		defensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).		Transcript show: '----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----';cr.		self mensajeDueloExtra:(atacante nombre)y:(defensor dueño).		duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.		contadorDuelos :=0.		]	ifFalse:[			self mostrarAdversariosde: nroAtacante.	listaAdversarios:=(listaJugadores at:nroAtacante)adversarios.	Transcript show: '---COLUMNA---FILA---CATEGORIA---------JUGADOR---';cr.	1 to:(listaAdversarios size)do:[:i|		Transcript show: '      ';show:((listaAdversarios at:i)at:1);show:'      '.		Transcript show: ' ';show:((listaAdversarios at:i)at:2);show:' '.		Transcript show: '     ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:' '.		Transcript show: '   ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:' ';cr.		].	self coloresAtacante: (listaJugadores at:nroAtacante)casillas.	self coloresAdversarios: listaAdversarios.	self interfazCrearVentana.	self cargarBotones."INTERFAZ----------------------------------------------------------------"  	self coloresAzul.	respuesta  := UIManager default     chooseFrom: listaAdversarios    message: 'Elige un contrincante'    title: 'DUELO'.  ventana delete.defensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. contadorDuelos :=contadorDuelos +1.].(duelo perdedor = 1)ifTrue:[	self captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).	nroAtacante :=((defensor dueño)findTokens:' ') last asInteger.	atacante := listaJugadores at:nroAtacante	]ifFalse: [ 	self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).	 ].(contadorDuelos  < 10)ifTrue:[respuesta  := UIManager default     chooseFrom: #('Seguir Atacando' 'Pasar Turno')    message: '¿Desea seguir atacando?'    title: 'DUELO'.(respuesta = 2)ifTrue:[	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.	].]ifFalse:[nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.].].	 	 Transcript show: 'GAME OVER'; cr.	 Transcript show: 'El ganador es el jugador:';show:(atacante nombre); cr.! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 02:16'!lista	^ lista! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 16:50'!matriz	^matriz.! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:24'!listaJugadores	^listaJugadores! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:53'!defensor: anObject	defensor := anObject! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 02:16'!lista: anObject	lista := anObject! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:53'!defensor	^ defensor! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/5/2024 18:57'!casillaX:x Y:y^((matriz at:y)at:x)! !!Tablero methodsFor: 'search' stamp: 'SuarezGonzalo 11/9/2024 18:06'!transferirDe:nombreJugador2 A:nombreJugador1 laCeldaX: x Y: y|coordenadas nroJugador2 nroJugador1 |Transcript show: 'se ejecuto la transeferencia de celdas';cr.coordenadas:=(Array with: x with:y ).nroJugador2  := (nombreJugador2  findTokens: ' ') last asInteger.nroJugador1  := (nombreJugador1  findTokens: ' ') last asInteger.(listaJugadores at:nroJugador2)eliminarCasilla: (Array with:x with: y).(listaJugadores at:nroJugador1)agregarCasilla: coordenadas.(((listaJugadores at:nroJugador2)casillas )isEmpty)ifTrue: [ self eliminarJugador: (listaJugadores at:nroJugador2) ].! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/20/2024 21:20'!buscarJugador	| indice colection valor |	colection := (1 to: tamañoMatriz * tamañoMatriz) asOrderedCollection.	[ 	indice := colection at: (Random new nextInteger: colection size).	valor := (listaJugadores at: indice) estado.	valor = 'ELIMINADO' ] whileTrue: [  ].	^ indice! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/23/2024 18:58'!masCasillas|mayores primero segundo|primero:=0.segundo:=0.mayores:= Array new:2.1 to:(tamañoMatriz*tamañoMatriz)do:[:i|	(primero < ((listaJugadores at:i)casillas )size)ifTrue:[		primero:=((listaJugadores at:i)casillas )size.		mayores at:1 put: ((listaJugadores at:i))		]ifFalse:[		(segundo < ((listaJugadores at:i)casillas )size)ifTrue:[		segundo :=((listaJugadores at:i)casillas )size.		mayores at:2 put: ((listaJugadores at:i))		]			].].^(mayores).! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/21/2024 20:25'!mostrarAdversariosde: nroJugador	| listaAdversarios cantCasillas x y |		listaAdversarios  := OrderedCollection new.	cantCasillas := ((listaJugadores at: nroJugador) casillas )size.		((listaJugadores at:nroJugador)cañon = false)ifTrue:[	1to:(cantCasillas)do:[:i|				x:=(((listaJugadores at:nroJugador)casillas)at:i)at:1.		y:=(((listaJugadores at:nroJugador)casillas) at:i)at:2.				(x>1)ifTrue:[			(((self casillaX:(x-1) Y:y)dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x-1) with:(y)))ifFalse:[				listaAdversarios  add:(Array with: (x-1) with:(y)).				].				].				].					(x<tamañoMatriz )ifTrue:[								(((self casillaX:(x+1) Y:(y))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x+1) with:(y)))ifFalse:[				listaAdversarios  add:(Array with: (x+1) with:(y)).].				].				].					(y>1)ifTrue:[						(((self casillaX:x Y:(y-1))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x) with:(y-1)))ifFalse:[				listaAdversarios  add:(Array with: (x) with:(y-1)).				].				].			].		(y<tamañoMatriz )ifTrue:[			(((self casillaX:x Y:(y+1))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x) with:(y+1)))ifFalse:[				listaAdversarios  add:(Array with: (x) with:(y+1)).				].			]. ].].]ifFalse: [ 	(listaJugadores at:nroJugador)cañon:false. 	1 to: tamañoMatriz do:[:i|		1 to: tamañoMatriz do:[:j|			(((self casillaX:i Y:(j))dueño )~=(listaJugadores at:nroJugador)nombre)ifTrue:[				listaAdversarios  add:(Array with: (i) with:(j)).						].		].].].(listaJugadores at:(nroJugador))adversarios: listaAdversarios .^listaAdversarios.! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 16:14'!coloresAdversarios:listaAdversarios1 to: (listaAdversarios size)do:[:i|	(self casillaX: ((listaAdversarios at:i)at:1) Y: ((listaAdversarios at:i)at:2))colorRojo 	].! !!Tablero methodsFor: 'interface' stamp: 'a 11/24/2024 16:28'!label_4	^label_4 .! !!Tablero methodsFor: 'interface' stamp: 'a 11/24/2024 16:28'!ventana_4	^ventana_4.! !!Tablero methodsFor: 'interface'!interfazCrearVentana|boton|		ventana := Morph new.	ventana extent: (100*(tamañoMatriz) )@(100*(tamañoMatriz) ); "Tamaño de la ventana"        color: Color white. "Color de fondo"boton:=SimpleButtonMorph new.boton label:'X';	actionSelector: #delete;	target:ventana;	position:(tamañoMatriz *100)@(tamañoMatriz *100);	extent: 10@10.	ventana addMorph:boton.	ventana openInWorld. "Abrir la ventana en el escritorio"! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/23/2024 20:49'!mensajeDueloExtra:jugadorA y:jugadorBUIManager default message:'Duelo entre titanes ',String cr,jugadorA,' se enfrentara al ',jugadorB.! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 19:40'!cargarBotones|texto |texto := TextMorph new.1 to: tamañoMatriz  do:[:i|	1 to: tamañoMatriz do:[:j|		(self casillaX: i Y:j)boton:SimpleButtonMorph new.		(self casillaX: i Y:j)boton label:'';  "Texto del botón"      		target: [ [ defensor:= self casillaX: i Y:j.self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: (defensor coordenadasX ) Y: (defensor coordenadasY)) ]]; "Acción al presionar"			color: ((self casillaX: i Y:j )color);    	  	actionSelector: #value; "El mensaje enviado al target"      		position: (100*(i-1))@(100*(j-1)); "Posición dentro de la ventana"      		extent: 100@100. "Tamaño del botón"		texto contents: ((self casillaX: i Y:j)dueño), String crlf, ((self casillaX: i Y:j)categoria) ,String crlf,     'Posición: (', i asString, ',', j asString, ')'; "Texto en dos líneas"       	color: Color black;       	font: (TextStyle default fontAt: 12);       	center: (self casillaX: i Y:j)boton bounds center. "Centrar el texto dentro del botón"		(self casillaX: i Y:j )boton addMorph: texto. "Añadir el texto al botón"		ventana addMorph:(self casillaX: i Y:j)boton . "Añadir el botón a la ventana"		texto:=TextMorph new.		].	]. ! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 16:19'!coloresAtacante:listaAtacante1 to: (listaAtacante  size)do:[:i|	(self casillaX: ((listaAtacante  at:i)at:1) Y: ((listaAtacante at:i)at:2))colorAmarillo 	].! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 16:38'!coloresAzul	1 to:tamañoMatriz  do:[:i|		1 to:tamañoMatriz  do:[:j|		 (self casillaX: i Y:j)colorAzul. 		]. 		] ! !Object subclass: #Timer	instanceVariableNames: 'timer_1 timer_2 ventana_1 ventana_2 ventana_3 label_1 label_2 label_3 proceso turno perdedor fin j1name j2name'	classVariableNames: ''	package: 'Paradigmas 2024'!!Timer commentStamp: 'Gonzalo 11/23/2024 18:13' prior: 0!- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	fin:		<Object>	j1name:		<Object>	j2name:		<Object>	label_1:		<Object>	label_2:		<Object>	perdedor:		<Object>	proceso:		<Object>	timer_1:		<Object>	timer_2:		<Object>	turno:		<Object>	ventana_1:		<Object>	ventana_2:		<Object>    Implementation Points!!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!ventana_1: anObject	ventana_1 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!label_2	^ label_2! !!Timer methodsFor: 'accessing' stamp: 'a 11/24/2024 15:41'!ventana_3	^ ventana_3! !!Timer methodsFor: 'accessing' stamp: 'a 11/24/2024 15:41'!label_3: anObject	label_3 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j2name: anObject	j2name := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:46'!fin: anObject	fin := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!label_1: anObject	label_1 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:12'!perdedor	^ perdedor! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!ventana_1	^ ventana_1! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j2name	^ j2name! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!label_2: anObject	label_2 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:31'!timer_1	^ timer_1! !!Timer methodsFor: 'accessing' stamp: 'a 11/24/2024 15:41'!ventana_3: anObject	ventana_3 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!label_1	^ label_1! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!turno	^ turno! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:12'!perdedor: anObject	perdedor := anObject! !!Timer methodsFor: 'accessing' stamp: 'a 11/24/2024 15:41'!label_3	^ label_3! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!ventana_2	^ ventana_2! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!proceso	^ proceso! !!Timer methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:31'!timer_1: anObject	timer_1 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!timer_2	^ timer_2! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!proceso: anObject	^ proceso := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j1name: anObject	j1name := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!timer_2: anObject	timer_2 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j1name	^ j1name! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!ventana_2: anObject	ventana_2 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:46'!fin	^ fin! !!Timer methodsFor: 'initialization' stamp: 'IngPepeGrillo 11/19/2024 23:03'!detener    proceso ifNotNil: [         proceso terminate.        proceso := nil.         ]! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:40'!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (50)@(20). "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'mica 11/22/2024 13:01'!restarSegundos:anPlayer "1 o 2"		(anPlayer  = 1) ifTrue: [ timer_1 :=timer_1 - 2 ].		(anPlayer  = 2) ifTrue: [ timer_2 :=timer_2 - 2 ].! !!Timer methodsFor: 'initialization' stamp: 'a 11/24/2024 16:27'!iniciar:jugadorInicial            |uno_sin_tiempo|				fin:= false.            uno_sin_tiempo :=false.				self fin:false.            turno:=jugadorInicial .                self crearVentana.    proceso := [                             [ uno_sin_tiempo ] whileFalse: [                  "va a ver si alguien se quedo sin tiempo"            (   (timer_1=0) | (timer_2=0) ) ifTrue: [ uno_sin_tiempo :=true ].            (Delay forSeconds: 1) wait.             "creamos 1 sola vez la ventana"            "(timer_1 = 5 )ifTrue: [self crearVentana]."            "vamos escribiendo los 2 tiempos sobre las 2 ventanas "           label_1 contents: j1name , String cr, 'Segundos: ', timer_1 printString.           label_2 contents: j2name , String cr, 'Segundos: ', timer_2 printString.                "veo de quien es el turno"                (turno=1) ifTrue: [ timer_1 := timer_1  - 1]                ifFalse: [ timer_2 := timer_2 -1 ]                                .                   "eliminamos la ventana"                                                                (timer_1 <=0) ifTrue: [							self perdedor: 1.							self fin:true.                    label_1 contents: 'Time is Over'.                          label_2 contents: 'You won this battle'.                        ventana_1 color: Color red.                        ventana_2 color: Color green."                    (Delay forSeconds: 2) wait.                     ventana_1 delete.                    ventana_1 := nil.                          ventana_2 delete.                    ventana_2 := nil."							"Aca perdio el jugador 1"							"tratamiento"							                                ].                                              (timer_2 <=0) ifTrue: [							self perdedor: 2.							self fin:true.                    label_1 contents: 'You won this battle'.                          label_2 contents: 'Time is Over'.                        ventana_1 color: Color green.                        ventana_2 color: Color red .						"Aca perdio el jugador 2"						"iniciar tratamiento"                                ].					          		].         ] fork. ! !!Timer methodsFor: 'initialization' stamp: 'mica 11/22/2024 14:16'!initialize     timer_1 :=10.    timer_2:=10.    proceso:=nil.! !!Timer methodsFor: 'initialization' stamp: 'IngPepeGrillo 11/19/2024 23:04'!turno:anValue    turno:=anValue .! !PackageManifest subclass: #ManifestParadigmas2024	instanceVariableNames: ''	classVariableNames: ''	package: 'Paradigmas 2024-Manifest'!!ManifestParadigmas2024 commentStamp: '<historical>' prior: 0!Please describe the package using the class comment of the included manifest class. The manifest class also includes other additional metadata for the package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManifestParadigmas2024 class	instanceVariableNames: ''!!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 22:39'!ruleWhileTrueRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T22:39:35.225-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'a 11/24/2024 15:39'!ruleLongMethodsRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #initialize #false)) #'2024-11-20T20:05:03.367-03:00') #(#(#RGMethodDefinition #(#Tablero #mostrarAdversariosde: #false)) #'2024-11-20T22:04:13.202-03:00') #(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T22:39:10.841-03:00') #(#(#RGPackageDefinition #(#'Paradigmas 2024')) #'2024-11-24T15:39:45.424607-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/21/2024 11:49'!ruleClassNotReferencedRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Interfaz)) #'2024-11-21T11:49:50.953-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 22:00'!ruleToDoRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T22:00:34.205-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 22:04'!ruleCodeCruftLeftInMethodsRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #initialize #false)) #'2024-11-20T22:04:43.412-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/21/2024 11:49'!ruleReIvarNeitherReadNorWrittenRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Interfaz)) #'2024-11-21T11:49:48.037-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 20:00'!ruleNotEliminationRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T20:00:46.733-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/21/2024 16:08'!ruleStringConcatenationRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #cargarBotonesAtacante:Adversarios: #false)) #'2024-11-21T15:41:06.333-03:00') #(#(#RGMethodDefinition #(#Tablero #cargarBotones #false)) #'2024-11-21T16:08:01.18-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'a 11/24/2024 15:41'!ruleSearchingLiteralRuleV1FalsePositive	^ #(#(#(#RGPackageDefinition #(#'Paradigmas 2024')) #'2024-11-24T15:41:23.397273-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 20:05'!ruleToDoWithIncrementRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #initialize #false)) #'2024-11-20T20:05:08.856-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/21/2024 11:49'!ruleNoClassCommentRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Interfaz)) #'2024-11-21T11:49:44.516-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 20:00'!ruleCascadedNextPutAllsRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T20:00:50.167-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 22:01'!ruleUnclassifiedMethodsRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #tamañoDeLaMatriz #false)) #'2024-11-20T20:16:36.668-03:00') #(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T22:01:06.978-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/21/2024 11:49'!ruleReClassNotCategorizedRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Interfaz)) #'2024-11-21T11:49:41.926-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 20:05'!ruleToDoCollectRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #initialize #false)) #'2024-11-20T20:05:06.639-03:00') )! !----End fileIn----!!Tablero methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 19:37' prior: 33968496!iniciarJuego|nroAtacante listaAdversarios respuesta duelo contadorDuelos ventanaVictoria labelVictoria | contadorDuelos :=0.	self crearVentanaJuego .	duelo :=Duelos new.	self interfazCrearVentana.	Transcript show: '----INICIA EL JUEGO----';cr.	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.					[ cantPlayers > 1 ]whileTrue: [  	Transcript show:'Cantidad de Jugadores: ';show:cantPlayers;cr.	Transcript show: 'Jugador: ';show:(listaJugadores at:nroAtacante)nombre;show:' Selecciona a cual de las siguientes casillas atacar:';cr.	(contadorDuelos =10)ifTrue:[		nroAtacante:=(((self masCasillas at:1)nombre)findTokens:' ') last asInteger.		atacante :=listaJugadores at:nroAtacante.		defensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).		Transcript show: '----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----';cr.		self mensajeDueloExtra:(atacante nombre)y:(defensor dueño).		duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.		contadorDuelos :=0.		]	ifFalse:[			self mostrarAdversariosde: nroAtacante.	listaAdversarios:=(listaJugadores at:nroAtacante)adversarios.	Transcript show: '---COLUMNA---FILA---CATEGORIA---------JUGADOR---';cr.	1 to:(listaAdversarios size)do:[:i|		Transcript show: '      ';show:((listaAdversarios at:i)at:1);show:'      '.		Transcript show: ' ';show:((listaAdversarios at:i)at:2);show:' '.		Transcript show: '     ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:' '.		Transcript show: '   ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:' ';cr.		].	self coloresAtacante: (listaJugadores at:nroAtacante)casillas.	self coloresAdversarios: listaAdversarios.	self interfazCrearVentana.	self cargarBotones."INTERFAZ----------------------------------------------------------------"  	self coloresAzul.	respuesta  := UIManager default     chooseFrom: listaAdversarios    message: 'Elige un contrincante'    title: 'DUELO'.  ventana delete.defensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. contadorDuelos :=contadorDuelos +1.].(duelo perdedor = 1)ifTrue:[	self captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).	nroAtacante :=((defensor dueño)findTokens:' ') last asInteger.	atacante := listaJugadores at:nroAtacante	]ifFalse: [ 	self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).	 ].(contadorDuelos  < 10)ifTrue:[respuesta  := UIManager default     chooseFrom: #('Seguir Atacando' 'Pasar Turno')    message: '¿Desea seguir atacando?'    title: 'DUELO'.(respuesta = 2)ifTrue:[	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.	].]ifFalse:[nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.].].	 ventanaVictoria := Morph new.ventanaVictoria color: Color green.ventanaVictoria := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.ventanaVictoria extent: 200@100.ventanaVictoria position: (50)@(20). "Arriba en el medio"labelVictoria := TextMorph new."Mensaje de la ventana al iniciar"labelVictoria contents: ''.labelVictoria color: Color red.labelVictoria position: (ventanaVictoria bounds origin) + (50@100). "Posiciona el label dentro de la ventana"ventanaVictoria addMorph: labelVictoria.ventanaVictoria openInWorld.	 Transcript show: 'GAME OVER'; cr.	 Transcript show: 'El ganador es el jugador:';show:(atacante nombre); cr.! !!Tablero methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 19:38' prior: 33991929!iniciarJuego|nroAtacante listaAdversarios respuesta duelo contadorDuelos ventanaVictoria labelVictoria | contadorDuelos :=0.	self crearVentanaJuego .	duelo :=Duelos new.	self interfazCrearVentana.	Transcript show: '----INICIA EL JUEGO----';cr.	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.					[ cantPlayers > 1 ]whileTrue: [  	Transcript show:'Cantidad de Jugadores: ';show:cantPlayers;cr.	Transcript show: 'Jugador: ';show:(listaJugadores at:nroAtacante)nombre;show:' Selecciona a cual de las siguientes casillas atacar:';cr.	(contadorDuelos =10)ifTrue:[		nroAtacante:=(((self masCasillas at:1)nombre)findTokens:' ') last asInteger.		atacante :=listaJugadores at:nroAtacante.		defensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).		Transcript show: '----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----';cr.		self mensajeDueloExtra:(atacante nombre)y:(defensor dueño).		duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.		contadorDuelos :=0.		]	ifFalse:[			self mostrarAdversariosde: nroAtacante.	listaAdversarios:=(listaJugadores at:nroAtacante)adversarios.	Transcript show: '---COLUMNA---FILA---CATEGORIA---------JUGADOR---';cr.	1 to:(listaAdversarios size)do:[:i|		Transcript show: '      ';show:((listaAdversarios at:i)at:1);show:'      '.		Transcript show: ' ';show:((listaAdversarios at:i)at:2);show:' '.		Transcript show: '     ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:' '.		Transcript show: '   ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:' ';cr.		].	self coloresAtacante: (listaJugadores at:nroAtacante)casillas.	self coloresAdversarios: listaAdversarios.	self interfazCrearVentana.	self cargarBotones."INTERFAZ----------------------------------------------------------------"  	self coloresAzul.	respuesta  := UIManager default     chooseFrom: listaAdversarios    message: 'Elige un contrincante'    title: 'DUELO'.  ventana delete.defensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. contadorDuelos :=contadorDuelos +1.].(duelo perdedor = 1)ifTrue:[	self captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).	nroAtacante :=((defensor dueño)findTokens:' ') last asInteger.	atacante := listaJugadores at:nroAtacante	]ifFalse: [ 	self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).	 ].(contadorDuelos  < 10)ifTrue:[respuesta  := UIManager default     chooseFrom: #('Seguir Atacando' 'Pasar Turno')    message: '¿Desea seguir atacando?'    title: 'DUELO'.(respuesta = 2)ifTrue:[	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.	].]ifFalse:[nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.].].	 ventanaVictoria := Morph new.ventanaVictoria color: Color green.ventanaVictoria := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/victoria.png') asMorph.ventanaVictoria extent: 200@100.ventanaVictoria position: (50)@(20). "Arriba en el medio"labelVictoria := TextMorph new."Mensaje de la ventana al iniciar"labelVictoria contents: ''.labelVictoria color: Color red.labelVictoria position: (ventanaVictoria bounds origin) + (50@100). "Posiciona el label dentro de la ventana"ventanaVictoria addMorph: labelVictoria.ventanaVictoria openInWorld.	 Transcript show: 'GAME OVER'; cr.	 Transcript show: 'El ganador es el jugador:';show:(atacante nombre); cr.! !!Tablero methodsFor: 'interface' stamp: 'TiagoBernal 11/24/2024 19:41' prior: 33976157!coloresAdversarios: listaAdversarios    1 to: (listaAdversarios size) do: [:i |         (self casillaX: ((listaAdversarios at: i) at: 1)                      Y: ((listaAdversarios at: i) at: 2))             color: (Color r: 1.0 g: 0.4 b: 0.4).    ].! !!Tablero methodsFor: 'interface' stamp: 'TiagoBernal 11/24/2024 19:43' prior: 34000276!coloresAdversarios:listaAdversarios1 to: (listaAdversarios size)do:[:i|	(self casillaX: ((listaAdversarios at:i)at:1) Y: ((listaAdversarios at:i)at:2))colorRojo 	].! !----QUIT/NOSAVE----2024-11-24T19:45:37.127-03:00 Tiago.image priorSource: 148163!----QUIT/NOSAVE----2024-11-24T20:01:53.355-03:00 PP-C2-F-BBGQS.image priorSource: 148163!Smalltalk globals removeClassNamed: #AnObsoleteTablero!Smalltalk globals removeClassNamed: #AnObsoleteCasilla!Smalltalk globals removeClassNamed: #AnObsoleteInterfaz!Smalltalk globals removeClassNamed: #AnObsoletePregunta!Smalltalk globals removeClassNamed: #AnObsoleteTimer!Smalltalk globals removeClassNamed: #AnObsoleteDuelos!Smalltalk globals removeClassNamed: #AnObsoleteJugador!PackageManifest subclass: #ManifestParadigmas2024	instanceVariableNames: ''	classVariableNames: ''	package: 'Paradigmas 2024-Manifest'!!ManifestParadigmas2024 commentStamp: '<historical>' prior: 0!Please describe the package using the class comment of the included manifest class. The manifest class also includes other additional metadata for the package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ManifestParadigmas2024 class	instanceVariableNames: ''!!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 22:39'!ruleWhileTrueRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T22:39:35.225-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'a 11/24/2024 15:39'!ruleLongMethodsRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #initialize #false)) #'2024-11-20T20:05:03.367-03:00') #(#(#RGMethodDefinition #(#Tablero #mostrarAdversariosde: #false)) #'2024-11-20T22:04:13.202-03:00') #(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T22:39:10.841-03:00') #(#(#RGPackageDefinition #(#'Paradigmas 2024')) #'2024-11-24T15:39:45.424607-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/21/2024 11:49'!ruleClassNotReferencedRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Interfaz)) #'2024-11-21T11:49:50.953-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/21/2024 11:49'!ruleNoClassCommentRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Interfaz)) #'2024-11-21T11:49:44.516-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 20:00'!ruleNotEliminationRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T20:00:46.733-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/21/2024 16:08'!ruleStringConcatenationRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #cargarBotonesAtacante:Adversarios: #false)) #'2024-11-21T15:41:06.333-03:00') #(#(#RGMethodDefinition #(#Tablero #cargarBotones #false)) #'2024-11-21T16:08:01.18-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/21/2024 11:49'!ruleReClassNotCategorizedRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Interfaz)) #'2024-11-21T11:49:41.926-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 20:05'!ruleToDoCollectRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #initialize #false)) #'2024-11-20T20:05:06.639-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/21/2024 11:49'!ruleReIvarNeitherReadNorWrittenRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#Interfaz)) #'2024-11-21T11:49:48.037-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 20:00'!ruleCascadedNextPutAllsRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T20:00:50.167-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 20:05'!ruleToDoWithIncrementRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #initialize #false)) #'2024-11-20T20:05:08.856-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 22:01'!ruleUnclassifiedMethodsRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #tamañoDeLaMatriz #false)) #'2024-11-20T20:16:36.668-03:00') #(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T22:01:06.978-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 22:04'!ruleCodeCruftLeftInMethodsRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #initialize #false)) #'2024-11-20T22:04:43.412-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'Gonzalo 11/20/2024 22:00'!ruleToDoRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #'2024-11-20T22:00:34.205-03:00') )! !!ManifestParadigmas2024 class methodsFor: 'code-critics' stamp: 'a 11/24/2024 15:41'!ruleSearchingLiteralRuleV1FalsePositive	^ #(#(#(#RGPackageDefinition #(#'Paradigmas 2024')) #'2024-11-24T15:41:23.397273-03:00') )! !Object subclass: #Casilla	instanceVariableNames: 'dueño color tema coordenadasX coordenadasY vecinos categoria pregunta boton'	classVariableNames: 'TamañoMatriz'	package: 'Paradigmas 2024'!!Casilla commentStamp: 'SuarezGonzalo 10/11/2024 13:33' prior: 0!Implementation Points!!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:02'!coordenadasY	^coordenadasY   ! !!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:02'!coordenadasX	^coordenadasX  ! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 18:22'!vecinos: anObject	vecinos := anObject! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!categoria	^ categoria! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!pregunta	^ pregunta! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 16:04'!color	^color.! !!Casilla methodsFor: 'accessing'!asignarCategoria"1 --Hisoria		2--Deporte	3--Geografia 4--Arte 5--ciencia"|listaCategoria|listaCategoria := #('historia' 'deporte' 'geografia' 'arte' 'ciencia').categoria:=  (listaCategoria at: (1 to: listaCategoria size)atRandom)! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!categoria: anObject	categoria := anObject! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 12:18'!boton^boton.! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/14/2024 18:46'!llamarPregunta(categoria = 'historia' ) ifTrue:[pregunta elegirPregunta: 1].(categoria = 'deporte' ) ifTrue:[pregunta elegirPregunta: 2].(categoria = 'geografia' ) ifTrue:[pregunta elegirPregunta: 3].(categoria = 'arte' ) ifTrue:[pregunta elegirPregunta: 4].(categoria = 'ciencia' ) ifTrue:[pregunta elegirPregunta: 5].pregunta ponerPregunta.pregunta mostrarPregunta: categoria. ! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 18:22'!vecinos	^ vecinos! !!Casilla methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 16:46'!dueño^dueño! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/20/2024 12:30'!tamañoMatrizCasilla^TamañoMatriz.! !!Casilla methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 12:17'!boton:xboton:=x! !!Casilla methodsFor: 'accessing' stamp: 'mica 11/10/2024 12:48'!pregunta: anObject	pregunta := anObject! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/26/2024 17:56'!coordenadasX: valorX Y:valorY coordenadasX :=valorX.coordenadasY :=valorY.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 16:53'!dueño:valor	dueño:=valor .! !!Casilla methodsFor: 'initialization' stamp: 'Gonzalo 11/21/2024 16:01'!initialize color:=Color blue.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 17:01'!coordenadasXY: valorX and:valorY coordenadasX :=valorX.coordenadasY :=valorY.! !!Casilla methodsFor: 'initialization' stamp: 'SuarezGonzalo 10/11/2024 16:54'!dueñoInicial:valordueño := 'Jugador ',(valor asString).! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:05'!colorAzul	color:=Color blue.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:06'!colorAmarillo	color:=Color yellow.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/20/2024 12:30'!tamañoMatrizCasilla:xTamañoMatriz :=x.! !!Casilla methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 16:05'!colorRojo	color:=Color red.! !!Casilla methodsFor: 'add/remove' stamp: 'Gonzalo 11/20/2024 12:26'!encontrarVecinosvecinos:=(OrderedCollection new).(coordenadasX >1)ifTrue:[vecinos add:(Array with: (coordenadasX -1) with: coordenadasY )].(coordenadasX <TamañoMatriz )ifTrue:[vecinos add:(Array with: (coordenadasX +1) with: coordenadasY )].(coordenadasY >1)ifTrue:[vecinos add:(Array with: coordenadasX with: (coordenadasY -1))].(coordenadasY <TamañoMatriz )ifTrue:[vecinos add:(Array with: coordenadasX with: (coordenadasY +1))].! !Object subclass: #Duelos	instanceVariableNames: 'timer bandJugador1 perdedor categoria'	classVariableNames: ''	package: 'Paradigmas 2024'!!Duelos commentStamp: 'mica 11/5/2024 02:40' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages.- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	jugador1:		<Object>	jugador2:		<Object>    Implementation Points!!Duelos methodsFor: 'extra' stamp: 'mica 11/23/2024 19:46'!dueloExtra: powerUp|listaCat|listaCat := #('historia' 'deporte' 'geografia' 'arte' 'ciencia').(powerUp)ifTrue: [ self categoria: (listaCat at: ((1 to: listaCat size)atRandom))]! !!Duelos methodsFor: 'accessing' stamp: 'Gonzalo 11/23/2024 21:47'!pasarTurno:jugador1 a:jugador2bandJugador1						ifTrue: [ 							"UIManager default message:'Es el turno del ',jugador2 ."							Transcript								show: '1';								cr.						timer turno: 2.						bandJugador1 := false					]					ifFalse: [ 						"UIManager default message:'Es el turno del ',jugador1 ."						Transcript							show: '2';							cr.						timer turno: 1.						bandJugador1 := true.					]! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:57'!perdedor: anObject	perdedor := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:19'!timer	^ timer! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 19:16'!categoria	^ categoria! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:24'!bandJugador1: anObject	bandJugador1 := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:19'!timer: anObject	timer := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 19:16'!categoria: anObject	categoria := anObject! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:58'!perdedor	^ perdedor! !!Duelos methodsFor: 'accessing' stamp: 'mica 11/22/2024 12:24'!bandJugador1	^ bandJugador1! !!Duelos methodsFor: 'initialization' stamp: 'a 11/24/2024 15:41'!iniciarDueloEntre: player1 y: player2 categoria: player2cat dueloExtra: arg1	| pregunta|	timer := Timer new.	timer j1name: player1 .	timer j2name: player2 .	pregunta := Pregunta new.	pregunta j1: player1.	pregunta j2: player2.	pregunta listaPreguntas: OrderedCollection new.	pregunta t: false.	bandJugador1 := true.	pregunta band1: true.	self timer iniciar: 1.	categoria := player2cat.		[ self timer fin ] whileFalse: [ 		self dueloExtra: arg1.		pregunta llamarPregunta: categoria.		pregunta resultado = 5 ifTrue: [ self pasarPregunta ].		pregunta resultado = 1 ifTrue: [ 			self pasarTurno:player1 a:player2.			pregunta band1: bandJugador1 ].		pregunta resultado = 2 ifTrue: [ 			Transcript				show: '------->>   INCORRECTO';				cr.			[ 			pregunta resultado = 1 | (pregunta resultado = 5)			| (pregunta resultado = 0) ] whileFalse: [ 				self timer timer_1 <= 0 | (self timer timer_2 <= 0) ifTrue: [ 					pregunta t: true ].				pregunta mostrarPregunta: self categoria ].			pregunta resultado = 5 ifTrue: [ self pasarPregunta ].			pregunta resultado = 1 ifTrue: [ 				self pasarTurno:player1 a:player2.				pregunta band1: bandJugador1 ] ].].Transcript show: 'PERDEDOR Player ',timer perdedor asString;					cr.(timer ventana_1) delete.(timer ventana_2) delete. (timer ventana_3) delete. self perdedor: timer perdedor! !!Duelos methodsFor: 'initialization' stamp: 'mica 11/23/2024 20:03'!pasarPreguntabandJugador1					ifTrue: [ 						self timer restarSegundos: 1. 						Transcript							show: '1';							cr.]					ifFalse: [ 						self timer restarSegundos: 2.						Transcript							show: '2';							cr.							]! !Object subclass: #Interfaz	instanceVariableNames: 'accionMouse'	classVariableNames: ''	package: 'Paradigmas 2024'!!Interfaz commentStamp: 'Gonzalo 11/23/2024 18:13' prior: 0!- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	accionMouse:		<Object>    Implementation Points!!Interfaz methodsFor: 'initialization' stamp: 'Gonzalo 11/21/2024 12:16'!initialize | ventana boton |ventana := Morph new.ventana extent: 600@600; "Tamaño de la ventana"        color: Color white. "Color de fondo"boton := SimpleButtonMorph new.boton label: 'Presióname'; "Texto del botón"       target: [ Transcript show: '¡Botón presionado!!'; cr ]; "Acción al presionar"       actionSelector: #value; "El mensaje enviado al target"       position: 00@00; "Posición dentro de la ventana"       extent: 100@100. "Tamaño del botón"ventana addMorph: boton. "Añadir el botón a la ventana"ventana openInWorld. "Abrir la ventana en el escritorio"! !Object subclass: #Jugador	instanceVariableNames: 'nombre casillas adversarios estado escudo cañon racha'	classVariableNames: ''	package: 'Paradigmas 2024'!!Jugador commentStamp: 'SuarezGonzalo 10/11/2024 17:10' prior: 0!Clase Jugador    Instance Variables	dueño:		<Object>	vecinos:		<Object>    Implementation Points!!Jugador methodsFor: 'initialize' stamp: 'SuarezGonzalo 10/31/2024 19:50'!crearJugador: nombreJugador x:x y:ynombre :=nombreJugador .casillas:= OrderedCollection new.casillas add:(Array with:x with:y)! !!Jugador methodsFor: 'initialize' stamp: 'Gonzalo 11/21/2024 20:54'!initialize 	nombre:='Unkown Player'.	escudo:=false.	cañon :=false.	racha:=0.	casillas:=OrderedCollection new.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/9/2024 13:26'!agregarCasilla: xcasillas add:x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/5/2024 19:01'!adversarios: listaadversarios :=lista.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 11/9/2024 18:21'!estado:x	estado:=x.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 10:42'!escudo:x	escudo:=x.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 10:41'!cañon:x	cañon:=x.! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 10/31/2024 19:43'!nombre:xnombre:=x.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/23/2024 21:14'!agregarPowerUp	| respuesta |	racha :=0.UIManager default message:'El ',nombre ,' obtuvo una racha de 5 victorias'.respuesta := UIManager default    chooseFrom: #('Escudo' 'Cañon')    message: 'Elija PowerUp',String cr,'Escudo : proteje todas tus casillas ante una captura',String cr,'Cañon: permite atacar a cualquier casilla del tablero'.    "Procesar la respuesta"respuesta ifNotNil: [    (respuesta = 1)ifTrue: [ 			escudo:=true.	 ].	(respuesta = 2)ifTrue: [ 			cañon :=true.				 ].] ifNil: [    Transcript show: 'No se seleccionó ninguna opción'; cr.	self agregarPowerUp.].! !!Jugador methodsFor: 'setter' stamp: 'SuarezGonzalo 10/31/2024 19:44'!casilla: xcasillas add:x.! !!Jugador methodsFor: 'setter' stamp: 'Gonzalo 11/21/2024 21:09'!aumentarRacha racha:=racha +1.	(racha=5)ifTrue:[self agregarPowerUp].! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/5/2024 17:07'!nombre^nombre.! !!Jugador methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 10:38'!escudo	^escudo.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/9/2024 18:28'!eliminarCasilla: xcasillas remove: x ifAbsent: [ Error signal: 'Error la casilla no pertenece al jugador' ].! !!Jugador methodsFor: 'accessing' stamp: 'Gonzalo 11/21/2024 10:38'!cañon	^cañon.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/9/2024 19:32'!adversarios ^adversarios.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 21:03'!obtenerX:nroCasilla^((casillas at:nroCasilla )at:1)! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 20:40'!casillas^casillas.! !!Jugador methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/31/2024 21:03'!obtenerY:nroCasilla^((casillas at:nroCasilla )at:2)! !!Jugador methodsFor: 'accessing' stamp: 'mica 11/16/2024 17:43'!estado	^ estado! !Object subclass: #Pregunta	instanceVariableNames: 'opcion preguntaAleatoria respuestas resultado correcta pregunta nroPregunta frase listaPreguntas j1 j2 band1 rtaPlayer t'	classVariableNames: ''	package: 'Paradigmas 2024'!!Pregunta commentStamp: 'mica 11/4/2024 21:42' prior: 0!-Toma la pregunta, opciones y respuesta correcta de una archivo .txt-Muestra la pregunta y permite al jugador contestar a traves de opciones.!!Pregunta methodsFor: 'initialization' stamp: 'mica 11/22/2024 01:05'!elegirPregunta:categoriaCasilla"elige al azar una linea del archivo Pregunta.txt y la guarda en el atributo preguntaAleatoria "|archivo|archivo := FileSystem disk workingDirectory.(categoriaCasilla = 1)ifTrue:[frase:= ((archivo / 'DEPORTE.txt') contents lines)].(categoriaCasilla = 2)ifTrue:[frase:= ((archivo / 'HISTORIA.txt') contents lines)].(categoriaCasilla = 3)ifTrue:[frase:= ((archivo / 'ARTE.txt') contents lines)].(categoriaCasilla = 4)ifTrue:[frase:= ((archivo / 'GEOGRAFIA.txt') contents lines)].(categoriaCasilla = 5)ifTrue:[frase:= ((archivo / 'CIENCIA.txt') contents lines)].preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.self verificarPreguntaRepetidas! !!Pregunta methodsFor: 'converting' stamp: 'mica 11/21/2024 02:41'!opcionNumeroALetra: a"convierte la respuesta del jugador en A, B, C, o D para luego""comparar con la respuesta correcta en mostrarPregunta:y:"|listaOpciones |listaOpciones := #('A' 'B' 'C' 'D' 0).^(listaOpciones at: a)! !!Pregunta methodsFor: 'showing' stamp: 'Gonzalo 11/23/2024 20:35'!mostrarPregunta: cat"muestra al jugador la pregunta con sus opciones.""guarda la respuesta en rtaPlayer y la compara con el parametro 'correcta'""segun coincida rtaPlayer y correcta, devuelve un cartelito de CORRECTO o INCORRECTO" |rtaNum nom|t ifTrue: [ self resultado: 0]ifFalse: [ band1 ifTrue: [nom:= j1]ifFalse: [ nom:= j2].Transcript show: 'Realizando pregunta ', (nroPregunta)  asString; cr.		rtaPlayer := UIManager default 		chooseFrom: respuestas 		message: nom,String cr,pregunta,'?'		title: 'DUELO',String cr,cat.Transcript show: 'rtaPlayer-->', rtaPlayer asString;cr.rtaNum := self opcionNumeroALetra: rtaPlayer.(correcta = (rtaNum))	ifTrue:[self resultado: 1]	ifFalse: [		(rtaPlayer = 5 )		ifTrue: [  			self resultado: 5]	 	ifFalse:[self resultado: 2]	].]	! !!Pregunta methodsFor: 'control' stamp: 'mica 11/22/2024 02:06'!verificarPreguntaRepetidas|band| "QUE VERIFIQUE EN UNA INSTANCIA DE DUELO, NO EN TODO EL JUEGO"band:= true.[band] whileTrue:[ 	preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.	nroPregunta:= (preguntaAleatoria substrings) first.		(listaPreguntas isEmpty)	ifTrue:[		listaPreguntas add: nroPregunta. band:= false]	ifFalse: [ 		(listaPreguntas size = frase size) 						ifTrue:[ band:= false]						ifFalse:[ 							(listaPreguntas includes: nroPregunta)							ifFalse:[									listaPreguntas add: nroPregunta. band:= false]							ifTrue:[								band:= true							]						] 				]].! !!Pregunta methodsFor: 'control' stamp: 'mica 11/21/2024 22:08'!verificarPreguntaRepetidaEn: listaPreguntas|band| "QUE VERIFIQUE EN UNA INSTANCIA DE DUELO, NO EN TODO EL JUEGO"band:= true.[band] whileTrue:[ 	preguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.	nroPregunta:= (preguntaAleatoria substrings) first.	(listaPreguntas isEmpty)	ifTrue:[		listaPreguntas add: nroPregunta. band:= false]	ifFalse: [ 		(listaPreguntas size = frase size) 						ifTrue:[ band:= false]						ifFalse:[ 							(listaPreguntas includes: nroPregunta)							ifFalse:[									listaPreguntas add: nroPregunta. band:= false]							ifTrue:[								band:= true							]						] 				]]! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:35'!preguntaAleatoria: anObject	preguntaAleatoria := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:48'!respuestas: anObject	respuestas := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/5/2024 18:09'!resultado	^ resultado! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/3/2024 19:18'!opcion	^ opcion! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:55'!t	^ t! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j1: anObject	j1 := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:10'!rtaPlayer: anObject	rtaPlayer := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:02'!nroPregunta	^ nroPregunta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/3/2024 19:23'!opcion: anObject	opcion := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:55'!t: anObject	t := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:05'!band1	^ band1! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!pregunta	^ pregunta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:55'!llamarPregunta: categoria	(categoria = 'deporte' ) ifTrue:[self elegirPregunta: 1].(categoria = 'historia' ) ifTrue:[self elegirPregunta: 2].(categoria = 'arte' ) ifTrue:[self elegirPregunta: 3].(categoria = 'geografia' ) ifTrue:[self elegirPregunta: 4].(categoria = 'ciencia' ) ifTrue:[self elegirPregunta: 5].self ponerPregunta: categoria.self mostrarPregunta:categoria. ! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 00:56'!listaPreguntas	^ listaPreguntas! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:10'!rtaPlayer	^ rtaPlayer! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:02'!nroPregunta: anObject	nroPregunta := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j2	^ j2! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j1	^ j1! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!correcta	^ correcta! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/5/2024 18:09'!resultado: anObject	resultado := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:12'!frase: anObject	frase := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:05'!band1: anObject	band1 := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:35'!preguntaAleatoria	^ preguntaAleatoria! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 00:56'!listaPreguntas: anObject	listaPreguntas := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!pregunta: anObject	pregunta := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 09:39'!ponerPregunta:cat"toma la linea guardada en el atributo preguntaAleatoria""divide la linea en 3 partes: pregunta, opciones y respuesta correcta""ejemplo de linea .txt:" "¿Quién fue el primer presidente de los Estados Unidos?A) Abraham Lincoln%B) George Washington%C) Thomas Jefferson%D) John Adams% B"|restoPregunta opciones signo ops pregSubstring| ops:= ''.signo:='?'.pregunta:=''.respuestas := OrderedCollection new.nroPregunta:= (preguntaAleatoria substrings)first.correcta := (preguntaAleatoria substrings) last.  "Toma solo el ultimo string de toda la frase. Es la respuesta correcta"pregSubstring := (preguntaAleatoria) allButFirst: 3.pregunta:= ( pregSubstring copyUpToSubstring: signo). "copia solo la pregunta sin el signo '?'" restoPregunta := preguntaAleatoria copyAfterLast: $?. "copia el resto despues de '?'"opciones:= restoPregunta allButLast. "copia solo las opciones sin la respuesta ni pregunta"opciones do: [ :i| (i~= $%)ifTrue:[ops:=ops, (i asString)] "recorre la secuencia y acumula los caracteres hasta encontrar %"		ifFalse:[		respuestas add: (ops asString). "cuando llega a un % guarda lo acumulado en el atributo respuestas (definido como OrderedCollection)"		ops:=''.			].		].respuestas add: 'PASAR'.! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/4/2024 14:48'!respuestas	^ respuestas! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 19:52'!correcta: anObject	correcta := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/22/2024 13:04'!j2: anObject	j2 := anObject! !!Pregunta methodsFor: 'accessing' stamp: 'mica 11/21/2024 20:12'!frase	^ frase! !Object subclass: #Tablero	instanceVariableNames: 'cantPlayers matriz listaJugadores tamañoMatriz ventana atacante defensor lista ventana_4 label_4'	classVariableNames: ''	package: 'Paradigmas 2024'!!Tablero commentStamp: 'SuarezGonzalo 10/11/2024 13:25' prior: 0!Prueba para desarrollar una matriz con los casilleros    Instance Variables	cantPlayers:		<Object>    Implementation Points!!Tablero methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 19:38'!iniciarJuego|nroAtacante listaAdversarios respuesta duelo contadorDuelos ventanaVictoria labelVictoria | contadorDuelos :=0.	self crearVentanaJuego .	duelo :=Duelos new.	self interfazCrearVentana.	Transcript show: '----INICIA EL JUEGO----';cr.	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.					[ cantPlayers > 1 ]whileTrue: [  	Transcript show:'Cantidad de Jugadores: ';show:cantPlayers;cr.	Transcript show: 'Jugador: ';show:(listaJugadores at:nroAtacante)nombre;show:' Selecciona a cual de las siguientes casillas atacar:';cr.	(contadorDuelos =10)ifTrue:[		nroAtacante:=(((self masCasillas at:1)nombre)findTokens:' ') last asInteger.		atacante :=listaJugadores at:nroAtacante.		defensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).		Transcript show: '----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----';cr.		self mensajeDueloExtra:(atacante nombre)y:(defensor dueño).		duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.		contadorDuelos :=0.		]	ifFalse:[			self mostrarAdversariosde: nroAtacante.	listaAdversarios:=(listaJugadores at:nroAtacante)adversarios.	Transcript show: '---COLUMNA---FILA---CATEGORIA---------JUGADOR---';cr.	1 to:(listaAdversarios size)do:[:i|		Transcript show: '      ';show:((listaAdversarios at:i)at:1);show:'      '.		Transcript show: ' ';show:((listaAdversarios at:i)at:2);show:' '.		Transcript show: '     ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:' '.		Transcript show: '   ';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:' ';cr.		].	self coloresAtacante: (listaJugadores at:nroAtacante)casillas.	self coloresAdversarios: listaAdversarios.	self interfazCrearVentana.	self cargarBotones."INTERFAZ----------------------------------------------------------------"  	self coloresAzul.	respuesta  := UIManager default     chooseFrom: listaAdversarios    message: 'Elige un contrincante'    title: 'DUELO'.  ventana delete.defensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).duelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. contadorDuelos :=contadorDuelos +1.].(duelo perdedor = 1)ifTrue:[	self captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).	nroAtacante :=((defensor dueño)findTokens:' ') last asInteger.	atacante := listaJugadores at:nroAtacante	]ifFalse: [ 	self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).	 ].(contadorDuelos  < 10)ifTrue:[respuesta  := UIManager default     chooseFrom: #('Seguir Atacando' 'Pasar Turno')    message: '¿Desea seguir atacando?'    title: 'DUELO'.(respuesta = 2)ifTrue:[	nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.	Transcript show: '----JUGADOR AL AZAR ECONTRADO----';cr.	].]ifFalse:[nroAtacante:=(self buscarJugador).	atacante :=listaJugadores at:nroAtacante.].].	 ventanaVictoria := Morph new.ventanaVictoria color: Color green.ventanaVictoria := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/victoria.png') asMorph.ventanaVictoria extent: 200@100.ventanaVictoria position: (50)@(20). "Arriba en el medio"labelVictoria := TextMorph new."Mensaje de la ventana al iniciar"labelVictoria contents: ''.labelVictoria color: Color red.labelVictoria position: (ventanaVictoria bounds origin) + (50@100). "Posiciona el label dentro de la ventana"ventanaVictoria addMorph: labelVictoria.ventanaVictoria openInWorld.	 Transcript show: 'GAME OVER'; cr.	 Transcript show: 'El ganador es el jugador:';show:(atacante nombre); cr.! !!Tablero methodsFor: 'initialization' stamp: 'Gonzalo 11/20/2024 20:32'!tamañoDeLaMatriz|entrada numero|	entrada :=(UIManager default request:'Ingrese el tamaño de la matriz')asInteger.	entrada ifNotNil:[ 		(entrada isInteger)ifTrue: [  		numero:=entrada asInteger.]]	 ifNil: [ 		self error: 'Debe ingresar un numero valido'.		 ].	^numero.! !!Tablero methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 16:55'!crearVentanaJuego	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_4:= Morph  new.    ventana_4 color: Color green.    ventana_4 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/theFloor.png') asMorph.    ventana_4 extent: 200@100.    ventana_4 position: (screenWidth - 950)@1. "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_4 := TextMorph new.    "mensaje de la ventana al iniciar"    label_4 contents: ''.    label_4 color: Color green.    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"    label_4 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_4 addMorph: label_4.    ventana_4 openInWorld.! !!Tablero methodsFor: 'initialization' stamp: 'a 11/24/2024 16:35'!initialize 	|cont|	Transcript clear.	cont:=0.	tamañoMatriz:= self tamañoDeLaMatriz.	listaJugadores:= Array new:(tamañoMatriz * tamañoMatriz).		matriz := Array new: tamañoMatriz .	cantPlayers:=tamañoMatriz *tamañoMatriz .	1 to: tamañoMatriz  do:[:y| matriz at:y put:( Array new:tamañoMatriz)].	1 to: tamañoMatriz  do:[:y| 		1 to: tamañoMatriz  do:[:x| 			(matriz at:y) at:x put:(Casilla new).			(((matriz at:y)at:x))tamañoMatrizCasilla: tamañoMatriz.			cont:=cont+1.			((matriz at:y) at:x) dueñoInicial: (cont).			((matriz at:y) at:x) asignarCategoria.			(listaJugadores) at:cont put:(Jugador new).			(listaJugadores at:cont)nombre:(((matriz at:y) at:x)dueño).			(listaJugadores at:cont)agregarCasilla:(Array with:x with:y).			((matriz at:y) at:x) coordenadasX: x Y: y.			((matriz at:y) at:x) encontrarVecinos.						].		].	Transcript show: 'Se creo el tablero de forma exitosa';cr.! !!Tablero methodsFor: 'search' stamp: 'SuarezGonzalo 11/9/2024 18:06'!transferirDe:nombreJugador2 A:nombreJugador1 laCeldaX: x Y: y|coordenadas nroJugador2 nroJugador1 |Transcript show: 'se ejecuto la transeferencia de celdas';cr.coordenadas:=(Array with: x with:y ).nroJugador2  := (nombreJugador2  findTokens: ' ') last asInteger.nroJugador1  := (nombreJugador1  findTokens: ' ') last asInteger.(listaJugadores at:nroJugador2)eliminarCasilla: (Array with:x with: y).(listaJugadores at:nroJugador1)agregarCasilla: coordenadas.(((listaJugadores at:nroJugador2)casillas )isEmpty)ifTrue: [ self eliminarJugador: (listaJugadores at:nroJugador2) ].! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/20/2024 21:20'!buscarJugador	| indice colection valor |	colection := (1 to: tamañoMatriz * tamañoMatriz) asOrderedCollection.	[ 	indice := colection at: (Random new nextInteger: colection size).	valor := (listaJugadores at: indice) estado.	valor = 'ELIMINADO' ] whileTrue: [  ].	^ indice! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/23/2024 18:58'!masCasillas|mayores primero segundo|primero:=0.segundo:=0.mayores:= Array new:2.1 to:(tamañoMatriz*tamañoMatriz)do:[:i|	(primero < ((listaJugadores at:i)casillas )size)ifTrue:[		primero:=((listaJugadores at:i)casillas )size.		mayores at:1 put: ((listaJugadores at:i))		]ifFalse:[		(segundo < ((listaJugadores at:i)casillas )size)ifTrue:[		segundo :=((listaJugadores at:i)casillas )size.		mayores at:2 put: ((listaJugadores at:i))		]			].].^(mayores).! !!Tablero methodsFor: 'search' stamp: 'Gonzalo 11/21/2024 20:25'!mostrarAdversariosde: nroJugador	| listaAdversarios cantCasillas x y |		listaAdversarios  := OrderedCollection new.	cantCasillas := ((listaJugadores at: nroJugador) casillas )size.		((listaJugadores at:nroJugador)cañon = false)ifTrue:[	1to:(cantCasillas)do:[:i|				x:=(((listaJugadores at:nroJugador)casillas)at:i)at:1.		y:=(((listaJugadores at:nroJugador)casillas) at:i)at:2.				(x>1)ifTrue:[			(((self casillaX:(x-1) Y:y)dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x-1) with:(y)))ifFalse:[				listaAdversarios  add:(Array with: (x-1) with:(y)).				].				].				].					(x<tamañoMatriz )ifTrue:[								(((self casillaX:(x+1) Y:(y))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x+1) with:(y)))ifFalse:[				listaAdversarios  add:(Array with: (x+1) with:(y)).].				].				].					(y>1)ifTrue:[						(((self casillaX:x Y:(y-1))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x) with:(y-1)))ifFalse:[				listaAdversarios  add:(Array with: (x) with:(y-1)).				].				].			].		(y<tamañoMatriz )ifTrue:[			(((self casillaX:x Y:(y+1))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[				(listaAdversarios includes:(Array with: (x) with:(y+1)))ifFalse:[				listaAdversarios  add:(Array with: (x) with:(y+1)).				].			]. ].].]ifFalse: [ 	(listaJugadores at:nroJugador)cañon:false. 	1 to: tamañoMatriz do:[:i|		1 to: tamañoMatriz do:[:j|			(((self casillaX:i Y:(j))dueño )~=(listaJugadores at:nroJugador)nombre)ifTrue:[				listaAdversarios  add:(Array with: (i) with:(j)).						].		].].].(listaJugadores at:(nroJugador))adversarios: listaAdversarios .^listaAdversarios.! !!Tablero methodsFor: 'changing state' stamp: 'Gonzalo 11/21/2024 22:09'!captura: casilla1 a: casilla2| nombreCapturado nombreCapturador xCapturado yCapturado nroCapturador nroCapturado|xCapturado := casilla2 coordenadasX.yCapturado := casilla2 coordenadasY.nombreCapturado := casilla2 dueño.nombreCapturador := casilla1 dueño.nroCapturado:=((casilla2 dueño)findTokens:' ') last asInteger.((listaJugadores at:nroCapturado)escudo = false)ifTrue:[casilla2 dueño: casilla1 dueño.self transferirDe: nombreCapturado A: nombreCapturador laCeldaX: xCapturado Y: yCapturado.xCapturado > 1 ifTrue: [    ((self casillaX: xCapturado - 1 Y: yCapturado) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado - 1 Y: yCapturado)]].xCapturado < tamañoMatriz  ifTrue: [    ((self casillaX: xCapturado + 1 Y: yCapturado) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado + 1 Y: yCapturado)]].yCapturado > 1 ifTrue: [    ((self casillaX: xCapturado Y: yCapturado - 1) dueño = nombreCapturado)        ifTrue: [self captura: casilla1 a: (self casillaX: xCapturado Y: yCapturado - 1)]].yCapturado < tamañoMatriz  ifTrue: [    ((self casillaX: xCapturado Y: yCapturado + 1) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado Y: yCapturado + 1)]].nroCapturador := ((casilla1 dueño)findTokens:' ') last asInteger.(listaJugadores at:nroCapturador)aumentarRacha.]ifFalse:[UIManager default message:((nombreCapturado),' uso su escudo, sus celdas fueron protegidas').(listaJugadores at: nroCapturado )escudo: false.].! !!Tablero methodsFor: 'changing state' stamp: 'SuarezGonzalo 11/9/2024 19:43'!eliminarJugador: objetoJugador objetoJugador estado: 'ELIMINADO'.	cantPlayers :=cantPlayers -1.! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 11/5/2024 18:57'!casillaX:x Y:y^((matriz at:y)at:x)! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 16:50'!matriz	^matriz.! !!Tablero methodsFor: 'accessing' stamp: 'SuarezGonzalo 10/11/2024 17:24'!listaJugadores	^listaJugadores! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 02:16'!lista: anObject	lista := anObject! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 02:16'!lista	^ lista! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:53'!defensor: anObject	defensor := anObject! !!Tablero methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:53'!defensor	^ defensor! !!Tablero methodsFor: 'interface' stamp: 'a 11/24/2024 16:28'!ventana_4	^ventana_4.! !!Tablero methodsFor: 'interface' stamp: 'a 11/24/2024 16:28'!label_4	^label_4 .! !!Tablero methodsFor: 'interface' stamp: 'TiagoBernal 11/24/2024 19:43'!coloresAdversarios:listaAdversarios1 to: (listaAdversarios size)do:[:i|	(self casillaX: ((listaAdversarios at:i)at:1) Y: ((listaAdversarios at:i)at:2))colorRojo 	].! !!Tablero methodsFor: 'interface'!interfazCrearVentana|boton|		ventana := Morph new.	ventana extent: (100*(tamañoMatriz) )@(100*(tamañoMatriz) ); "Tamaño de la ventana"        color: Color white. "Color de fondo"boton:=SimpleButtonMorph new.boton label:'X';	actionSelector: #delete;	target:ventana;	position:(tamañoMatriz *100)@(tamañoMatriz *100);	extent: 10@10.	ventana addMorph:boton.	ventana openInWorld. "Abrir la ventana en el escritorio"! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/23/2024 20:49'!mensajeDueloExtra:jugadorA y:jugadorBUIManager default message:'Duelo entre titanes ',String cr,jugadorA,' se enfrentara al ',jugadorB.! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 19:40'!cargarBotones|texto |texto := TextMorph new.1 to: tamañoMatriz  do:[:i|	1 to: tamañoMatriz do:[:j|		(self casillaX: i Y:j)boton:SimpleButtonMorph new.		(self casillaX: i Y:j)boton label:'';  "Texto del botón"      		target: [ [ defensor:= self casillaX: i Y:j.self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: (defensor coordenadasX ) Y: (defensor coordenadasY)) ]]; "Acción al presionar"			color: ((self casillaX: i Y:j )color);    	  	actionSelector: #value; "El mensaje enviado al target"      		position: (100*(i-1))@(100*(j-1)); "Posición dentro de la ventana"      		extent: 100@100. "Tamaño del botón"		texto contents: ((self casillaX: i Y:j)dueño), String crlf, ((self casillaX: i Y:j)categoria) ,String crlf,     'Posición: (', i asString, ',', j asString, ')'; "Texto en dos líneas"       	color: Color black;       	font: (TextStyle default fontAt: 12);       	center: (self casillaX: i Y:j)boton bounds center. "Centrar el texto dentro del botón"		(self casillaX: i Y:j )boton addMorph: texto. "Añadir el texto al botón"		ventana addMorph:(self casillaX: i Y:j)boton . "Añadir el botón a la ventana"		texto:=TextMorph new.		].	]. ! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 16:19'!coloresAtacante:listaAtacante1 to: (listaAtacante  size)do:[:i|	(self casillaX: ((listaAtacante  at:i)at:1) Y: ((listaAtacante at:i)at:2))colorAmarillo 	].! !!Tablero methodsFor: 'interface' stamp: 'Gonzalo 11/21/2024 16:38'!coloresAzul	1 to:tamañoMatriz  do:[:i|		1 to:tamañoMatriz  do:[:j|		 (self casillaX: i Y:j)colorAzul. 		]. 		] ! !Object subclass: #Timer	instanceVariableNames: 'timer_1 timer_2 ventana_1 ventana_2 ventana_3 label_1 label_2 label_3 proceso turno perdedor fin j1name j2name'	classVariableNames: ''	package: 'Paradigmas 2024'!!Timer commentStamp: 'Gonzalo 11/23/2024 18:13' prior: 0!- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	fin:		<Object>	j1name:		<Object>	j2name:		<Object>	label_1:		<Object>	label_2:		<Object>	perdedor:		<Object>	proceso:		<Object>	timer_1:		<Object>	timer_2:		<Object>	turno:		<Object>	ventana_1:		<Object>	ventana_2:		<Object>    Implementation Points!!Timer methodsFor: 'initialization' stamp: 'IngPepeGrillo 11/19/2024 23:03'!detener    proceso ifNotNil: [         proceso terminate.        proceso := nil.         ]! !!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 17:40'!crearVentana	| screenWidth screenHeight |    "Obtener dimensiones de la pantalla"     screenWidth := Display width.     screenHeight := Display height.    "Ventana 1: Izquierda"    ventana_1:= Morph  new.    ventana_1 color: Color green.    ventana_1 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoIzquierda.png') asMorph.    ventana_1 extent: 200@100.    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_1 := TextMorph new.    "mensaje de la ventana al iniciar"    label_1 contents: 'Jugador 1'.    label_1 color: Color green.    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"    label_1 font: (LogicalFont familyName: 'Arial' pointSize: 50). "Cambia 'Arial' y 20 según tus necesidades"            ventana_1 addMorph: label_1.    ventana_1 openInWorld.    "Ventana 2: Más a la derecha"    ventana_2 := Morph new.    ventana_2 color: Color green.	ventana_2 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/carpinchitoDerecha.png') asMorph.    ventana_2 extent: 200@100.    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"    label_2 := TextMorph new.    "mensaje de la ventana al iniciar"    label_2 contents: 'Jugador 2'.    label_2 color: Color blue.    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"        ventana_2 addMorph: label_2.    ventana_2 openInWorld."ventana 3"    ventana_3 := Morph new.    ventana_3 color: Color green.	 ventana_3 := (ImageReadWriter formFromFileNamed: 'picturesParaPharo/vs.png') asMorph.    ventana_3 extent: 200@100.    ventana_3 position: (50)@(20). "arriba en el medio"    label_3 := TextMorph new.    "mensaje de la ventana al iniciar"    label_3 contents: ''.    label_3 color: Color red.    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"        ventana_3 addMorph: label_3.    ventana_3 openInWorld.! !!Timer methodsFor: 'initialization' stamp: 'mica 11/22/2024 13:01'!restarSegundos:anPlayer "1 o 2"		(anPlayer  = 1) ifTrue: [ timer_1 :=timer_1 - 2 ].		(anPlayer  = 2) ifTrue: [ timer_2 :=timer_2 - 2 ].! !!Timer methodsFor: 'initialization' stamp: 'a 11/24/2024 16:27'!iniciar:jugadorInicial            |uno_sin_tiempo|				fin:= false.            uno_sin_tiempo :=false.				self fin:false.            turno:=jugadorInicial .                self crearVentana.    proceso := [                             [ uno_sin_tiempo ] whileFalse: [                  "va a ver si alguien se quedo sin tiempo"            (   (timer_1=0) | (timer_2=0) ) ifTrue: [ uno_sin_tiempo :=true ].            (Delay forSeconds: 1) wait.             "creamos 1 sola vez la ventana"            "(timer_1 = 5 )ifTrue: [self crearVentana]."            "vamos escribiendo los 2 tiempos sobre las 2 ventanas "           label_1 contents: j1name , String cr, 'Segundos: ', timer_1 printString.           label_2 contents: j2name , String cr, 'Segundos: ', timer_2 printString.                "veo de quien es el turno"                (turno=1) ifTrue: [ timer_1 := timer_1  - 1]                ifFalse: [ timer_2 := timer_2 -1 ]                                .                   "eliminamos la ventana"                                                                (timer_1 <=0) ifTrue: [							self perdedor: 1.							self fin:true.                    label_1 contents: 'Time is Over'.                          label_2 contents: 'You won this battle'.                        ventana_1 color: Color red.                        ventana_2 color: Color green."                    (Delay forSeconds: 2) wait.                     ventana_1 delete.                    ventana_1 := nil.                          ventana_2 delete.                    ventana_2 := nil."							"Aca perdio el jugador 1"							"tratamiento"							                                ].                                              (timer_2 <=0) ifTrue: [							self perdedor: 2.							self fin:true.                    label_1 contents: 'You won this battle'.                          label_2 contents: 'Time is Over'.                        ventana_1 color: Color green.                        ventana_2 color: Color red .						"Aca perdio el jugador 2"						"iniciar tratamiento"                                ].					          		].         ] fork. ! !!Timer methodsFor: 'initialization' stamp: 'mica 11/22/2024 14:16'!initialize     timer_1 :=10.    timer_2:=10.    proceso:=nil.! !!Timer methodsFor: 'initialization' stamp: 'IngPepeGrillo 11/19/2024 23:04'!turno:anValue    turno:=anValue .! !!Timer methodsFor: 'accessing' stamp: 'a 11/24/2024 15:41'!label_3: anObject	label_3 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!label_2	^ label_2! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!ventana_1: anObject	ventana_1 := anObject! !!Timer methodsFor: 'accessing' stamp: 'a 11/24/2024 15:41'!ventana_3	^ ventana_3! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j2name: anObject	j2name := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:46'!fin: anObject	fin := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!label_1: anObject	label_1 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:12'!perdedor	^ perdedor! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!ventana_1	^ ventana_1! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j2name	^ j2name! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!label_2: anObject	label_2 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!turno	^ turno! !!Timer methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:31'!timer_1	^ timer_1! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!label_1	^ label_1! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:12'!perdedor: anObject	perdedor := anObject! !!Timer methodsFor: 'accessing' stamp: 'a 11/24/2024 15:41'!ventana_3: anObject	ventana_3 := anObject! !!Timer methodsFor: 'accessing' stamp: 'a 11/24/2024 15:41'!label_3	^ label_3! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!ventana_2	^ ventana_2! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!proceso	^ proceso! !!Timer methodsFor: 'accessing' stamp: 'mica 11/22/2024 14:31'!timer_1: anObject	timer_1 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!timer_2	^ timer_2! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!proceso: anObject	^ proceso := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j1name: anObject	j1name := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!timer_2: anObject	timer_2 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/23/2024 01:35'!j1name	^ j1name! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 18:38'!ventana_2: anObject	ventana_2 := anObject! !!Timer methodsFor: 'accessing' stamp: 'mica 11/21/2024 02:46'!fin	^ fin! !----End fileIn----!----SNAPSHOT----2024-11-24T20:03:33.597-03:00 PP-C2-F-BBGQS.image priorSource: 148163!----QUIT----2024-11-24T20:04:12.132-03:00 PP-C2-F-BBGQS.image priorSource: 496292!----QUIT/NOSAVE----2024-11-24T20:05:50.693-03:00 PP-C2-F-BBGQS.image priorSource: 496380!Smalltalk globals removeClassNamed: #AnObsoleteInterfaz!----SNAPSHOT----2024-11-24T20:25:22.978-03:00 PP-C2-F-BBGQS.image priorSource: 496380!----QUIT----2024-11-24T20:25:31.866-03:00 PP-C2-F-BBGQS.image priorSource: 496613!----QUIT----2024-11-24T20:25:55.838-03:00 PP-C2-F-BBGQS.image priorSource: 496701!!Timer methodsFor: 'initialization' stamp: 'TiagoBernal 11/24/2024 20:36' prior: 34047949!initialize     timer_1 :=45.    timer_2:=45.    proceso:=nil.! !!Tablero methodsFor: 'changing state' stamp: 'TiagoBernal 11/24/2024 20:54' prior: 34036972!captura: casilla1 a: casilla2| nombreCapturado nombreCapturador xCapturado yCapturado nroCapturador nroCapturado|xCapturado := casilla2 coordenadasX.yCapturado := casilla2 coordenadasY.nombreCapturado := casilla2 dueño.nombreCapturador := casilla1 dueño.nroCapturado:=((casilla2 dueño)findTokens:' ') last asInteger.((listaJugadores at:nroCapturado)escudo = false)ifTrue:[casilla2 dueño: casilla1 dueño.self transferirDe: nombreCapturado A: nombreCapturador laCeldaX: xCapturado Y: yCapturado.xCapturado > 1 ifTrue: [    ((self casillaX: xCapturado - 1 Y: yCapturado) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado - 1 Y: yCapturado)]].xCapturado < tamañoMatriz  ifTrue: [    ((self casillaX: xCapturado + 1 Y: yCapturado) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado + 1 Y: yCapturado)]].yCapturado > 1 ifTrue: [    ((self casillaX: xCapturado Y: yCapturado - 1) dueño = nombreCapturado)        ifTrue: [self captura: casilla1 a: (self casillaX: xCapturado Y: yCapturado - 1)]].yCapturado < tamañoMatriz  ifTrue: [    ((self casillaX: xCapturado Y: yCapturado + 1) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado Y: yCapturado + 1)]].nroCapturador := ((casilla1 dueño)findTokens:' ') last asInteger.(listaJugadores at:nroCapturador)aumentarRacha.UIManager default message: nombreCapturador title: 'FIN DEL DUELO'.]ifFalse:[UIManager default message:((nombreCapturado),' uso su escudo, sus celdas fueron protegidas').(listaJugadores at: nroCapturado )escudo: false.].! !!Tablero methodsFor: 'changing state' stamp: 'TiagoBernal 11/24/2024 20:55' prior: 34051554!captura: casilla1 a: casilla2| nombreCapturado nombreCapturador xCapturado yCapturado nroCapturador nroCapturado|xCapturado := casilla2 coordenadasX.yCapturado := casilla2 coordenadasY.nombreCapturado := casilla2 dueño.nombreCapturador := casilla1 dueño.nroCapturado:=((casilla2 dueño)findTokens:' ') last asInteger.((listaJugadores at:nroCapturado)escudo = false)ifTrue:[casilla2 dueño: casilla1 dueño.self transferirDe: nombreCapturado A: nombreCapturador laCeldaX: xCapturado Y: yCapturado.xCapturado > 1 ifTrue: [    ((self casillaX: xCapturado - 1 Y: yCapturado) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado - 1 Y: yCapturado)]].xCapturado < tamañoMatriz  ifTrue: [    ((self casillaX: xCapturado + 1 Y: yCapturado) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado + 1 Y: yCapturado)]].yCapturado > 1 ifTrue: [    ((self casillaX: xCapturado Y: yCapturado - 1) dueño = nombreCapturado)        ifTrue: [self captura: casilla1 a: (self casillaX: xCapturado Y: yCapturado - 1)]].yCapturado < tamañoMatriz  ifTrue: [    ((self casillaX: xCapturado Y: yCapturado + 1) dueño = nombreCapturado)        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado Y: yCapturado + 1)]].nroCapturador := ((casilla1 dueño)findTokens:' ') last asInteger.(listaJugadores at:nroCapturador)aumentarRacha.UIManager default message: 'Ganó ', nombreCapturador title: 'FIN DEL DUELO'.]ifFalse:[UIManager default message:((nombreCapturado),' uso su escudo, sus celdas fueron protegidas').(listaJugadores at: nroCapturado )escudo: false.].! !----SNAPSHOT----2024-11-24T20:56:59.774-03:00 PP-C2-F-BBGQS.image priorSource: 496785!----QUIT----2024-11-24T20:57:15.685-03:00 PP-C2-F-BBGQS.image priorSource: 500540!!Tablero methodsFor: 'interface' stamp: 'TiagoBernal 11/24/2024 21:19' prior: 34039690!coloresAdversarios: listaAdversarios    1 to: (listaAdversarios size) do: [:i |        "Color rojo suave para que el texto negro sea legible"        self casillaX: ((listaAdversarios at: i) at: 1) Y: ((listaAdversarios at: i) at: 2) colorRojo.        "Rojo suave con un valor RGB más claro"        self casillaX: ((listaAdversarios at: i) at: 1) Y: ((listaAdversarios at: i) at: 2) color: (Color r: 0.9 g: 0.3 b: 0.3).    ].! !!Tablero methodsFor: 'interface' stamp: 'TiagoBernal 11/24/2024 21:20' prior: 34055233!coloresAdversarios: listaAdversarios    1 to: (listaAdversarios size) do: [:i |        "Color rojo suave para que el texto negro sea legible"        self casillaX: ((listaAdversarios at: i) at: 1) Y: ((listaAdversarios at: i) at: 2) colorRojo.        "Rojo suave con un valor RGB más claro"        self casillaX: ((listaAdversarios at: i) at: 1) Y: ((listaAdversarios at: i) at: 2) color: (Color r: 0.9 g: 0.3 b: 0.3).    ].! !Casilla removeSelector: #llamarPregunta!!Tablero methodsFor: 'interface' stamp: 'TiagoBernal 11/24/2024 21:20' prior: 34055757!coloresAdversarios: listaAdversarios    1 to: (listaAdversarios size) do: [:i |        "Color rojo suave para que el texto negro sea legible"        self casillaX: ((listaAdversarios at: i) at: 1) Y: ((listaAdversarios at: i) at: 2) colorRojo.        "Rojo suave con un valor RGB más claro"        self casillaX: ((listaAdversarios at: i) at: 1) Y: ((listaAdversarios at: i) at: 2) color: (Color r: 0.9 g: 0.3 b: 0.3).    ].! !!Tablero methodsFor: 'interface' stamp: 'TiagoBernal 11/24/2024 21:21' prior: 34056323!coloresAdversarios:listaAdversarios1 to: (listaAdversarios size)do:[:i|	(self casillaX: ((listaAdversarios at:i)at:1) Y: ((listaAdversarios at:i)at:2))colorRojo 	].! !!Tablero methodsFor: 'interface' stamp: 'TiagoBernal 11/24/2024 21:21' prior: 34056847!coloresAdversarios: listaAdversarios    1 to: (listaAdversarios size) do: [:i |        "Color rojo suave para que el texto negro sea legible"        self casillaX: ((listaAdversarios at: i) at: 1) Y: ((listaAdversarios at: i) at: 2) colorRojo.        "Rojo suave con un valor RGB más claro"        self casillaX: ((listaAdversarios at: i) at: 1) Y: ((listaAdversarios at: i) at: 2) color: (Color r: 0.9 g: 0.3 b: 0.3).    ].! !!Tablero methodsFor: 'interface' stamp: 'TiagoBernal 11/24/2024 21:22' prior: 34057106!coloresAdversarios: listaAdversarios    1 to: (listaAdversarios size) do: [:i |        "Color rojo suave para que el texto negro sea legible"        self casillaX: ((listaAdversarios at: i) at: 1) Y: ((listaAdversarios at: i) at: 2) colorRojo.        "Rojo suave con un valor RGB más claro"        self casillaX: ((listaAdversarios at: i) at: 1) Y: ((listaAdversarios at: i) at: 2) color: (Color r: 0.9 g: 0.3 b: 0.3).    ].! !!Tablero methodsFor: 'interface' stamp: 'TiagoBernal 11/24/2024 21:23' prior: 34057629!coloresAdversarios: listaAdversarios    1 to: (listaAdversarios size) do: [:i |        "Establecer el color de la casilla, con un color rojo más suave para mejorar la legibilidad del texto"        | casilla |        casilla := self casillaX: ((listaAdversarios at: i) at: 1) Y: ((listaAdversarios at: i) at: 2).        casilla color: (Color r: 0.9 g: 0.3 b: 0.3).  "Color rojo suave"    ].! !!Tablero methodsFor: 'interface' stamp: 'TiagoBernal 11/24/2024 21:24' prior: 34058152!coloresAdversarios: listaAdversarios    1 to: (listaAdversarios size) do: [:i |        | casilla |        casilla := self casillaX: ((listaAdversarios at: i) at: 1) Y: ((listaAdversarios at: i) at: 2).        casilla color: (Color r: 0.9 g: 0.3 b: 0.3).  "Rojo suave"        "Si tienes un método que realmente cambia el color de la casilla"    ].! !!Tablero methodsFor: 'interface' stamp: 'TiagoBernal 11/24/2024 21:25' prior: 34058641!coloresAdversarios: listaAdversarios    1 to: (listaAdversarios size) do: [:i |        | casilla |        casilla := self casillaX: ((listaAdversarios at: i) at: 1) Y: ((listaAdversarios at: i) at: 2).        casilla color: (Color r: 0.9 g: 0.3 b: 0.3).  "Rojo suave"    ].! !!Tablero methodsFor: 'interface' stamp: 'TiagoBernal 11/24/2024 21:25' prior: 34059086!coloresAdversarios: listaAdversarios    1 to: (listaAdversarios size) do: [:i |        | x y casilla |        x := (listaAdversarios at: i) at: 1.        y := (listaAdversarios at: i) at: 2.                "Crear el Morph para la casilla y asignar el color"        casilla := Morph new.        casilla color: (Color r: 0.9 g: 0.3 b: 0.3).  "Rojo suave"        casilla position: (x @ y).  "Establecer la posición de la casilla"        casilla extent: 100@100.  "Dimensiones de la casilla, ajusta según lo que necesites"                "Agrega el Morph a tu vista o tablero"        World addMorph: casilla.    ].! !----QUIT/NOSAVE----2024-11-24T21:26:11.41-03:00 PP-C2-F-BBGQS.image priorSource: 500628!----QUIT/NOSAVE----2024-11-24T21:26:34.326-03:00 PP-C2-F-BBGQS.image priorSource: 500628!----SNAPSHOT----2024-11-24T22:16:17.246-03:00 PP-C2-F-BBGQS.image priorSource: 500628!----QUIT----2024-11-24T22:16:27.764-03:00 PP-C2-F-BBGQS.image priorSource: 505835!