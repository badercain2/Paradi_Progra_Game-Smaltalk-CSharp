OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.303-03:00' ],		#prior : OmReference [ 'Pharo9.0-SNAPSHOT-64bit-e1bb0fb.3vo3toglw1qa6uu0xu7vcy640', '172' ],		#self : OmReference [ '1' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'casillaX:Y:',			#protocol : #accessing,			#sourceCode : 'casillaX:x Y:y\r^((matriz at:y)at:x)',			#stamp : 'SuarezGonzalo 11/5/2024 18:57',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.303-03:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #iniciarJuego,			#protocol : #initialization,			#sourceCode : 'iniciarJuego\r|nroAtacante listaAdversarios respuesta duelo contadorDuelos | \rcontadorDuelos :=0.\r\tduelo :=Duelos new.\r\tself interfazCrearVentana.\r\tTranscript show: \'----INICIA EL JUEGO----\';cr.\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t\r\t\r\t\r\t\r\t[ cantPlayers > 1 ]whileTrue: [  \r\r\tTranscript show:\'Cantidad de Jugadores: \';show:cantPlayers;cr.\r\tTranscript show: \'Jugador: \';show:(listaJugadores at:nroAtacante)nombre;show:\' Selecciona a cual de las siguientes casillas atacar:\';cr.\r\t(contadorDuelos =10)ifTrue:[\r\t\tnroAtacante:=(((self masCasillas at:1)nombre)findTokens:\' \') last asInteger.\r\t\tatacante :=listaJugadores at:nroAtacante.\r\t\tdefensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).\r\t\tTranscript show: \'----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----\';cr.\r\t\tself mensajeDueloExtra:(atacante nombre)y:(defensor dueño).\r\t\tduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.\r\t\tcontadorDuelos :=0.\r\t\t]\r\tifFalse:[\r\t\t\r\tself mostrarAdversariosde: nroAtacante.\r\tlistaAdversarios:=(listaJugadores at:nroAtacante)adversarios.\r\tTranscript show: \'---COLUMNA---FILA---CATEGORIA---------JUGADOR---\';cr.\r\t1 to:(listaAdversarios size)do:[:i|\r\t\tTranscript show: \'      \';show:((listaAdversarios at:i)at:1);show:\'      \'.\r\t\tTranscript show: \' \';show:((listaAdversarios at:i)at:2);show:\' \'.\r\t\tTranscript show: \'     \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:\' \'.\r\t\tTranscript show: \'   \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:\' \';cr.\r\t\t].\r\tself coloresAtacante: (listaJugadores at:nroAtacante)casillas.\r\tself coloresAdversarios: listaAdversarios.\r\tself interfazCrearVentana.\r\tself cargarBotones."INTERFAZ----------------------------------------------------------------"  \r\tself coloresAzul.\r\trespuesta  := UIManager default \r    chooseFrom: listaAdversarios\r    message: \'Elige un contrincante\'\r    title: \'DUELO\'.\r  ventana delete.\r\rdefensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).\r\r\r\rduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. \rcontadorDuelos :=contadorDuelos +1.\r].\r\r(duelo perdedor = 1)ifTrue:[\r\tself captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).\r\tnroAtacante :=((defensor dueño)findTokens:\' \') last asInteger.\r\tatacante := listaJugadores at:nroAtacante\r\t]ifFalse: [ \r\tself captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).\r\t ].\r(contadorDuelos  < 10)ifTrue:[\rrespuesta  := UIManager default \r    chooseFrom: #(\'Seguir Atacando\' \'Pasar Turno\')\r    message: \'¿Desea seguir atacando?\'\r    title: \'DUELO\'.\r\r(respuesta = 2)ifTrue:[\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t].\r]ifFalse:[\rnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r].\r].\r\r\t \r\t Transcript show: \'GAME OVER\'; cr.\r\t Transcript show: \'El ganador es el jugador:\';show:(atacante nombre); cr.',			#stamp : 'Gonzalo 11/23/2024 21:09',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.305-03:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r \t|cont|\r\tTranscript clear.\r\tcont:=0.\r\ttamañoMatriz:= self tamañoDeLaMatriz.\r\tlistaJugadores:= Array new:(tamañoMatriz * tamañoMatriz).\r\t\r\tmatriz := Array new: tamañoMatriz .\r\tcantPlayers:=tamañoMatriz *tamañoMatriz .\r\t1 to: tamañoMatriz  do:[:y| matriz at:y put:( Array new:tamañoMatriz)].\r\t1 to: tamañoMatriz  do:[:y| \r\t\t1 to: tamañoMatriz  do:[:x| \r\t\t\t(matriz at:y) at:x put:(Casilla new).\r\t\t\t(((matriz at:y)at:x))tamañoMatrizCasilla: tamañoMatriz.\r\t\t\tcont:=cont+1.\r\t\t\t((matriz at:y) at:x) dueñoInicial: (cont).\r\t\t\t((matriz at:y) at:x) asignarCategoria.\r\t\t\t(listaJugadores) at:cont put:(Jugador new).\r\t\t\t(listaJugadores at:cont)nombre:(((matriz at:y) at:x)dueño).\r\t\t\t(listaJugadores at:cont)agregarCasilla:(Array with:x with:y).\r\t\t\t((matriz at:y) at:x) coordenadasX: x Y: y.\r\t\t\t((matriz at:y) at:x) encontrarVecinos.\r\t\t\t\r\t\t\t].\r\t\t].\r\tTranscript show: \'Se creo el tablero de forma exitosa\';cr.\r\r',			#stamp : 'Gonzalo 11/21/2024 15:32',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.305-03:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'lista:',			#protocol : #accessing,			#sourceCode : 'lista: anObject\r\r\tlista := anObject',			#stamp : 'mica 11/23/2024 02:16',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.305-03:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'mostrarAdversariosde:',			#protocol : #search,			#sourceCode : 'mostrarAdversariosde: nroJugador\r\r\t| listaAdversarios cantCasillas x y |\r\t\r\tlistaAdversarios  := OrderedCollection new.\r\tcantCasillas := ((listaJugadores at: nroJugador) casillas )size.\r\t\r\t((listaJugadores at:nroJugador)cañon = false)ifTrue:[\r\t1to:(cantCasillas)do:[:i|\r\t\t\r\t\tx:=(((listaJugadores at:nroJugador)casillas)at:i)at:1.\r\t\ty:=(((listaJugadores at:nroJugador)casillas) at:i)at:2.\r\t\t\r\t\t(x>1)ifTrue:[\r\t\t\t(((self casillaX:(x-1) Y:y)dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[\r\t\t\t\t(listaAdversarios includes:(Array with: (x-1) with:(y)))ifFalse:[\r\t\t\t\tlistaAdversarios  add:(Array with: (x-1) with:(y)).\r\t\t\t\t].\r\t\t\t\t].\r\t\t\t\t].\r\t\t\t\r\t\t(x<tamañoMatriz )ifTrue:[\r\t\t\t\r\t\t\r\t\t\t(((self casillaX:(x+1) Y:(y))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[\r\t\t\t\t(listaAdversarios includes:(Array with: (x+1) with:(y)))ifFalse:[\r\t\t\t\tlistaAdversarios  add:(Array with: (x+1) with:(y)).].\r\t\t\t\t].\r\t\t\t\t].\r\t\t\t\r\t\t(y>1)ifTrue:[\r\t\t\t\r\t\t\t(((self casillaX:x Y:(y-1))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[\r\t\t\t\t(listaAdversarios includes:(Array with: (x) with:(y-1)))ifFalse:[\r\t\t\t\tlistaAdversarios  add:(Array with: (x) with:(y-1)).\r\t\t\t\t].\r\t\t\t\t].\r\t\t\t].\r\t\t(y<tamañoMatriz )ifTrue:[\r\t\t\t(((self casillaX:x Y:(y+1))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[\r\t\t\t\t(listaAdversarios includes:(Array with: (x) with:(y+1)))ifFalse:[\r\t\t\t\tlistaAdversarios  add:(Array with: (x) with:(y+1)).\r\t\t\t\t].\r\t\t\t].\r ].\r].\r\r]ifFalse: [ \r\t(listaJugadores at:nroJugador)cañon:false.\r \t1 to: tamañoMatriz do:[:i|\r\t\t1 to: tamañoMatriz do:[:j|\r\t\t\t(((self casillaX:i Y:(j))dueño )~=(listaJugadores at:nroJugador)nombre)ifTrue:[\r\t\t\t\tlistaAdversarios  add:(Array with: (i) with:(j)).\r\t\t\t\t\r\t\t].\r\t\t].\r].\r].\r(listaJugadores at:(nroJugador))adversarios: listaAdversarios .\r^listaAdversarios.',			#stamp : 'Gonzalo 11/21/2024 20:25',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.307-03:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'defensor:',			#protocol : #accessing,			#sourceCode : 'defensor: anObject\r\r\tdefensor := anObject',			#stamp : 'mica 11/23/2024 01:53',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.308-03:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #masCasillas,			#protocol : #search,			#sourceCode : 'masCasillas\r|mayores primero segundo|\rprimero:=0.\rsegundo:=0.\rmayores:= Array new:2.\r1 to:(tamañoMatriz*tamañoMatriz)do:[:i|\r\t(primero < ((listaJugadores at:i)casillas )size)ifTrue:[\r\t\tprimero:=((listaJugadores at:i)casillas )size.\r\t\tmayores at:1 put: ((listaJugadores at:i))\r\t\t]ifFalse:[\r\t\t(segundo < ((listaJugadores at:i)casillas )size)ifTrue:[\r\t\tsegundo :=((listaJugadores at:i)casillas )size.\r\t\tmayores at:2 put: ((listaJugadores at:i))\r\t\t]\r\t\r\t\t].\r].\r^(mayores).',			#stamp : 'Gonzalo 11/23/2024 18:58',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.308-03:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'coloresAtacante:',			#protocol : #interface,			#sourceCode : 'coloresAtacante:listaAtacante\r1 to: (listaAtacante  size)do:[:i|\r\t(self casillaX: ((listaAtacante  at:i)at:1) Y: ((listaAtacante at:i)at:2))colorAmarillo \r\t].',			#stamp : 'Gonzalo 11/21/2024 16:19',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.309-03:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'coloresAdversarios:',			#protocol : #interface,			#sourceCode : 'coloresAdversarios:listaAdversarios\r1 to: (listaAdversarios size)do:[:i|\r\t(self casillaX: ((listaAdversarios at:i)at:1) Y: ((listaAdversarios at:i)at:2))colorRojo \r\t].',			#stamp : 'Gonzalo 11/21/2024 16:14',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.309-03:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #coloresAzul,			#protocol : #interface,			#sourceCode : 'coloresAzul\r\t1 to:tamañoMatriz  do:[:i|\r\t\t1 to:tamañoMatriz  do:[:j|\r\t\t (self casillaX: i Y:j)colorAzul. \r\t\t]. \r\t\t] ',			#stamp : 'Gonzalo 11/21/2024 16:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.309-03:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'eliminarJugador:',			#protocol : #'changing state',			#sourceCode : 'eliminarJugador: objetoJugador\r objetoJugador estado: \'ELIMINADO\'.\r\tcantPlayers :=cantPlayers -1.\r',			#stamp : 'SuarezGonzalo 11/9/2024 19:43',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.309-03:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #buscarJugador,			#protocol : #search,			#sourceCode : 'buscarJugador\r\r\t| indice colection valor |\r\tcolection := (1 to: tamañoMatriz * tamañoMatriz) asOrderedCollection.\r\t[ \r\tindice := colection at: (Random new nextInteger: colection size).\r\tvalor := (listaJugadores at: indice) estado.\r\tvalor = \'ELIMINADO\' ] whileTrue: [  ].\r\r\t^ indice',			#stamp : 'Gonzalo 11/20/2024 21:20',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.31-03:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #listaJugadores,			#protocol : #accessing,			#sourceCode : 'listaJugadores\r\t^listaJugadores',			#stamp : 'SuarezGonzalo 10/11/2024 17:24',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.31-03:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #interfazCrearVentana,			#protocol : #interface,			#sourceCode : 'interfazCrearVentana\r|boton|\r\t\r\tventana := Morph new.\r\tventana extent: (100*(tamañoMatriz) )@(100*(tamañoMatriz) ); "Tamaño de la ventana"\r        color: Color white. "Color de fondo"\rboton:=SimpleButtonMorph new.\rboton label:\'X\';\r\tactionSelector: #delete;\r\ttarget:ventana;\r\tposition:(tamañoMatriz *100)@(tamañoMatriz *100);\r\textent: 10@10.\r\tventana addMorph:boton.\r\tventana openInWorld. "Abrir la ventana en el escritorio"',			#stamp : '',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.31-03:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'mensajeDueloExtra:y:',			#protocol : #interface,			#sourceCode : 'mensajeDueloExtra:jugadorA y:jugadorB\r\r\r\rUIManager default message:\'Duelo entre titanes \',String cr,jugadorA,\' se enfrentara al \',jugadorB.',			#stamp : 'Gonzalo 11/23/2024 20:49',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.311-03:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'transferirDe:A:laCeldaX:Y:',			#protocol : #search,			#sourceCode : 'transferirDe:nombreJugador2 A:nombreJugador1 laCeldaX: x Y: y\r|coordenadas nroJugador2 nroJugador1 |\rTranscript show: \'se ejecuto la transeferencia de celdas\';cr.\rcoordenadas:=(Array with: x with:y ).\rnroJugador2  := (nombreJugador2  findTokens: \' \') last asInteger.\rnroJugador1  := (nombreJugador1  findTokens: \' \') last asInteger.\r\r(listaJugadores at:nroJugador2)eliminarCasilla: (Array with:x with: y).\r\r(listaJugadores at:nroJugador1)agregarCasilla: coordenadas.\r(((listaJugadores at:nroJugador2)casillas )isEmpty)ifTrue: [ self eliminarJugador: (listaJugadores at:nroJugador2) ].\r',			#stamp : 'SuarezGonzalo 11/9/2024 18:06',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.311-03:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #lista,			#protocol : #accessing,			#sourceCode : 'lista\r\r\t^ lista',			#stamp : 'mica 11/23/2024 02:16',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.312-03:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #cargarBotones,			#protocol : #interface,			#sourceCode : 'cargarBotones\r|texto |\r\rtexto := TextMorph new.\r1 to: tamañoMatriz  do:[:i|\r\t1 to: tamañoMatriz do:[:j|\r\t\t(self casillaX: i Y:j)boton:SimpleButtonMorph new.\r\t\t(self casillaX: i Y:j)boton label:\'\';  "Texto del botón"\r      \t\ttarget: [ [ defensor:= self casillaX: i Y:j.self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: (defensor coordenadasX ) Y: (defensor coordenadasY))\r ]]; "Acción al presionar"\r\t\t\tcolor: ((self casillaX: i Y:j )color);\r    \t  \tactionSelector: #value; "El mensaje enviado al target"\r      \t\tposition: (100*(i-1))@(100*(j-1)); "Posición dentro de la ventana"\r      \t\textent: 100@100. "Tamaño del botón"\r\t\ttexto contents: ((self casillaX: i Y:j)dueño), String crlf, ((self casillaX: i Y:j)categoria) ,String crlf, \r    \'Posición: (\', i asString, \',\', j asString, \')\'; "Texto en dos líneas"\r       \tcolor: Color black;\r       \tfont: (TextStyle default fontAt: 12);\r       \tcenter: (self casillaX: i Y:j)boton bounds center. "Centrar el texto dentro del botón"\r\t\t(self casillaX: i Y:j )boton addMorph: texto. "Añadir el texto al botón"\r\t\tventana addMorph:(self casillaX: i Y:j)boton . "Añadir el botón a la ventana"\r\t\ttexto:=TextMorph new.\r\t\t].\r\t]. \r',			#stamp : 'Gonzalo 11/21/2024 19:40',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.312-03:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'captura:a:',			#protocol : #'changing state',			#sourceCode : 'captura: casilla1 a: casilla2\r| nombreCapturado nombreCapturador xCapturado yCapturado nroCapturador nroCapturado|\rxCapturado := casilla2 coordenadasX.\ryCapturado := casilla2 coordenadasY.\rnombreCapturado := casilla2 dueño.\rnombreCapturador := casilla1 dueño.\rnroCapturado:=((casilla2 dueño)findTokens:\' \') last asInteger.\r((listaJugadores at:nroCapturado)escudo = false)ifTrue:[\rcasilla2 dueño: casilla1 dueño.\rself transferirDe: nombreCapturado A: nombreCapturador laCeldaX: xCapturado Y: yCapturado.\r\rxCapturado > 1 ifTrue: [\r    ((self casillaX: xCapturado - 1 Y: yCapturado) dueño = nombreCapturado)\r        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado - 1 Y: yCapturado)]\r].\rxCapturado < tamañoMatriz  ifTrue: [\r    ((self casillaX: xCapturado + 1 Y: yCapturado) dueño = nombreCapturado)\r        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado + 1 Y: yCapturado)]\r].\ryCapturado > 1 ifTrue: [\r    ((self casillaX: xCapturado Y: yCapturado - 1) dueño = nombreCapturado)\r        ifTrue: [self captura: casilla1 a: (self casillaX: xCapturado Y: yCapturado - 1)]\r].\ryCapturado < tamañoMatriz  ifTrue: [\r    ((self casillaX: xCapturado Y: yCapturado + 1) dueño = nombreCapturado)\r        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado Y: yCapturado + 1)]\r].\rnroCapturador := ((casilla1 dueño)findTokens:\' \') last asInteger.\r(listaJugadores at:nroCapturador)aumentarRacha.\r]ifFalse:[\rUIManager default message:((nombreCapturado),\' uso su escudo, sus celdas fueron protegidas\').\r(listaJugadores at: nroCapturado )escudo: false.\r].',			#stamp : 'Gonzalo 11/21/2024 22:09',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.312-03:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #matriz,			#protocol : #accessing,			#sourceCode : 'matriz\r\t^matriz.',			#stamp : 'SuarezGonzalo 10/11/2024 16:50',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.313-03:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'tamañoDeLaMatriz',			#protocol : #initialization,			#sourceCode : 'tamañoDeLaMatriz\r|entrada numero|\r\tentrada :=(UIManager default request:\'Ingrese el tamaño de la matriz\')asInteger.\r\tentrada ifNotNil:[ \r\t\t(entrada isInteger)ifTrue: [  \r\t\tnumero:=entrada asInteger.]]\r\t ifNil: [ \r\t\tself error: \'Debe ingresar un numero valido\'.\r\t\t ].\r\t^numero.',			#stamp : 'Gonzalo 11/20/2024 20:32',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.313-03:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #defensor,			#protocol : #accessing,			#sourceCode : 'defensor\r\r\t^ defensor',			#stamp : 'mica 11/23/2024 01:53',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.313-03:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Tablero\r\tinstanceVariableNames: \'cantPlayers matriz listaJugadores tamañoMatriz ventana atacante defensor lista\'\r\tclassVariableNames: \'\'\r\tpackage: #\'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Tablero,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTablero,						#isMetaSide : false					},					#name : #cantPlayers,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTablero,						#isMetaSide : false					},					#name : #matriz,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTablero,						#isMetaSide : false					},					#name : #listaJugadores,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTablero,						#isMetaSide : false					},					#name : #'tamañoMatriz',					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTablero,						#isMetaSide : false					},					#name : #ventana,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTablero,						#isMetaSide : false					},					#name : #atacante,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTablero,						#isMetaSide : false					},					#name : #defensor,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTablero,						#isMetaSide : false					},					#name : #lista,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Tablero class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'AnObsoleteTablero class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteTablero,					#isMetaSide : false				},				#parent : @7,				#content : 'Prueba para desarrollar una matriz con los casilleros\r\r    Instance Variables\r\tcantPlayers:\t\t<Object>\r\r\r    Implementation Points',				#stamp : 'SuarezGonzalo 10/11/2024 13:25'			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.388-03:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #colorRojo,			#protocol : #setter,			#sourceCode : 'colorRojo\r\tcolor:=Color red.',			#stamp : 'Gonzalo 11/21/2024 16:05',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.389-03:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'dueño:',			#protocol : #initialization,			#sourceCode : 'dueño:valor\r\tdueño:=valor .',			#stamp : 'SuarezGonzalo 10/11/2024 16:53',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.389-03:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #coordenadasX,			#protocol : #accessing,			#sourceCode : 'coordenadasX\r\t^coordenadasX  ',			#stamp : 'SuarezGonzalo 10/11/2024 17:02',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.39-03:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #coordenadasY,			#protocol : #accessing,			#sourceCode : 'coordenadasY\r\t^coordenadasY   ',			#stamp : 'SuarezGonzalo 10/11/2024 17:02',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.39-03:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'categoria:',			#protocol : #accessing,			#sourceCode : 'categoria: anObject\r\r\tcategoria := anObject',			#stamp : 'mica 11/10/2024 12:48',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.39-03:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #asignarCategoria,			#protocol : #accessing,			#sourceCode : 'asignarCategoria\r"1 --Hisoria\t\t2--Deporte\t3--Geografia 4--Arte 5--ciencia"\r|listaCategoria|\r\rlistaCategoria := #(\'historia\' \'deporte\' \'geografia\' \'arte\' \'ciencia\').\r\rcategoria:=  (listaCategoria at: (1 to: listaCategoria size)atRandom)',			#stamp : '',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.391-03:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #color,			#protocol : #accessing,			#sourceCode : 'color\r\t^color.',			#stamp : 'Gonzalo 11/21/2024 16:04',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.391-03:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'vecinos:',			#protocol : #accessing,			#sourceCode : 'vecinos: anObject\r\r\tvecinos := anObject',			#stamp : 'mica 11/10/2024 18:22',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.391-03:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #colorAmarillo,			#protocol : #setter,			#sourceCode : 'colorAmarillo\r\tcolor:=Color yellow.',			#stamp : 'Gonzalo 11/21/2024 16:06',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.392-03:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #llamarPregunta,			#protocol : #accessing,			#sourceCode : 'llamarPregunta\r\r(categoria = \'historia\' ) ifTrue:[pregunta elegirPregunta: 1].\r(categoria = \'deporte\' ) ifTrue:[pregunta elegirPregunta: 2].\r(categoria = \'geografia\' ) ifTrue:[pregunta elegirPregunta: 3].\r(categoria = \'arte\' ) ifTrue:[pregunta elegirPregunta: 4].\r(categoria = \'ciencia\' ) ifTrue:[pregunta elegirPregunta: 5].\r\rpregunta ponerPregunta.\rpregunta mostrarPregunta: categoria. \r',			#stamp : 'mica 11/14/2024 18:46',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.392-03:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize \rcolor:=Color blue.',			#stamp : 'Gonzalo 11/21/2024 16:01',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.393-03:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'dueñoInicial:',			#protocol : #initialization,			#sourceCode : 'dueñoInicial:valor\rdueño := \'Jugador \',(valor asString).',			#stamp : 'SuarezGonzalo 10/11/2024 16:54',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.393-03:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #pregunta,			#protocol : #accessing,			#sourceCode : 'pregunta\r\r\t^ pregunta',			#stamp : 'mica 11/10/2024 12:48',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.394-03:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'pregunta:',			#protocol : #accessing,			#sourceCode : 'pregunta: anObject\r\r\tpregunta := anObject',			#stamp : 'mica 11/10/2024 12:48',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.394-03:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #boton,			#protocol : #accessing,			#sourceCode : 'boton\r^boton.',			#stamp : 'Gonzalo 11/21/2024 12:18',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.395-03:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #encontrarVecinos,			#protocol : #add/remove,			#sourceCode : 'encontrarVecinos\rvecinos:=(OrderedCollection new).\r(coordenadasX >1)ifTrue:[vecinos add:(Array with: (coordenadasX -1) with: coordenadasY )].\r(coordenadasX <TamañoMatriz )ifTrue:[vecinos add:(Array with: (coordenadasX +1) with: coordenadasY )].\r(coordenadasY >1)ifTrue:[vecinos add:(Array with: coordenadasX with: (coordenadasY -1))].\r(coordenadasY <TamañoMatriz )ifTrue:[vecinos add:(Array with: coordenadasX with: (coordenadasY +1))].',			#stamp : 'Gonzalo 11/20/2024 12:26',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.395-03:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #vecinos,			#protocol : #accessing,			#sourceCode : 'vecinos\r\r\t^ vecinos',			#stamp : 'mica 11/10/2024 18:22',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.396-03:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #categoria,			#protocol : #accessing,			#sourceCode : 'categoria\r\r\t^ categoria',			#stamp : 'mica 11/10/2024 12:48',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.396-03:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'tamañoMatrizCasilla',			#protocol : #accessing,			#sourceCode : 'tamañoMatrizCasilla\r^TamañoMatriz.',			#stamp : 'Gonzalo 11/20/2024 12:30',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.396-03:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'tamañoMatrizCasilla:',			#protocol : #setter,			#sourceCode : 'tamañoMatrizCasilla:x\rTamañoMatriz :=x.',			#stamp : 'Gonzalo 11/20/2024 12:30',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.397-03:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'boton:',			#protocol : #accessing,			#sourceCode : 'boton:x\rboton:=x',			#stamp : 'Gonzalo 11/21/2024 12:17',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.397-03:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #colorAzul,			#protocol : #setter,			#sourceCode : 'colorAzul\r\tcolor:=Color blue.',			#stamp : 'Gonzalo 11/21/2024 16:05',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.398-03:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'dueño',			#protocol : #accessing,			#sourceCode : 'dueño\r^dueño',			#stamp : 'SuarezGonzalo 10/11/2024 16:46',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.398-03:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'coordenadasX:Y:',			#protocol : #initialization,			#sourceCode : 'coordenadasX: valorX Y:valorY \rcoordenadasX :=valorX.\rcoordenadasY :=valorY.\r',			#stamp : 'SuarezGonzalo 10/26/2024 17:56',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.399-03:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'coordenadasXY:and:',			#protocol : #initialization,			#sourceCode : 'coordenadasXY: valorX and:valorY \rcoordenadasX :=valorX.\rcoordenadasY :=valorY.\r',			#stamp : 'SuarezGonzalo 10/11/2024 17:01',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.399-03:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Casilla\r\tinstanceVariableNames: \'dueño color tema coordenadasX coordenadasY vecinos categoria pregunta boton\'\r\tclassVariableNames: \'\'\r\tpackage: #\'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Casilla,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteCasilla,						#isMetaSide : false					},					#name : #'dueño',					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteCasilla,						#isMetaSide : false					},					#name : #color,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteCasilla,						#isMetaSide : false					},					#name : #tema,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteCasilla,						#isMetaSide : false					},					#name : #coordenadasX,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteCasilla,						#isMetaSide : false					},					#name : #coordenadasY,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteCasilla,						#isMetaSide : false					},					#name : #vecinos,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteCasilla,						#isMetaSide : false					},					#name : #categoria,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteCasilla,						#isMetaSide : false					},					#name : #pregunta,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteCasilla,						#isMetaSide : false					},					#name : #boton,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Casilla class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'AnObsoleteCasilla class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteCasilla,					#isMetaSide : false				},				#parent : @7,				#content : 'Implementation Points',				#stamp : 'SuarezGonzalo 10/11/2024 13:33'			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.424-03:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Interfaz,				#isMetaSide : false			},			#name : #ventana_1,			#protocol : #accessing,			#sourceCode : 'ventana_1\r\r\t^ ventana_1',			#stamp : 'mica 11/24/2024 12:27',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.424-03:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Interfaz,				#isMetaSide : false			},			#name : #initializa,			#protocol : #initialization,			#sourceCode : 'initializa\r| ventana boton |\rventana := Morph new.\rventana extent: 600@600; "Tamaño de la ventana"\r        color: Color white. "Color de fondo"\r\rboton := SimpleButtonMorph new.\rboton label: \'Presióname\'; "Texto del botón"\r       target: [ Transcript show: \'¡Botón presionado!\'; cr ]; "Acción al presionar"\r       actionSelector: #value; "El mensaje enviado al target"\r       position: 00@00; "Posición dentro de la ventana"\r       extent: 100@100. "Tamaño del botón"\r\rventana addMorph: boton. "Añadir el botón a la ventana"\rventana openInWorld. "Abrir la ventana en el escritorio"\r',			#stamp : 'mica 11/24/2024 12:30',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.425-03:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Interfaz,				#isMetaSide : false			},			#name : #ventana_4,			#protocol : #accessing,			#sourceCode : 'ventana_4\r\r\t^ ventana_4',			#stamp : 'mica 11/24/2024 12:31',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.425-03:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Interfaz,				#isMetaSide : false			},			#name : #'label_1:',			#protocol : #accessing,			#sourceCode : 'label_1: anObject\r\r\tlabel_1 := anObject',			#stamp : 'mica 11/24/2024 12:31',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.425-03:00' ],		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Interfaz,				#isMetaSide : false			},			#name : #'ventana_1:',			#protocol : #accessing,			#sourceCode : 'ventana_1: anObject\r\r\tventana_1 := anObject',			#stamp : 'mica 11/24/2024 12:27',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.427-03:00' ],		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Interfaz,				#isMetaSide : false			},			#name : #'ventana_4:',			#protocol : #accessing,			#sourceCode : 'ventana_4: anObject\r\r\tventana_4 := anObject',			#stamp : 'mica 11/24/2024 12:31',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.427-03:00' ],		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Interfaz,				#isMetaSide : false			},			#name : #label_3,			#protocol : #accessing,			#sourceCode : 'label_3\r\r\t^ label_3',			#stamp : 'mica 11/24/2024 12:31',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.427-03:00' ],		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Interfaz,				#isMetaSide : false			},			#name : #'ventana_2:',			#protocol : #accessing,			#sourceCode : 'ventana_2: anObject\r\r\tventana_2 := anObject',			#stamp : 'mica 11/24/2024 12:27',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.427-03:00' ],		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Interfaz,				#isMetaSide : false			},			#name : #ventana_3,			#protocol : #accessing,			#sourceCode : 'ventana_3\r\r\t^ ventana_3',			#stamp : 'mica 11/24/2024 12:31',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.427-03:00' ],		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Interfaz,				#isMetaSide : false			},			#name : #label_2,			#protocol : #accessing,			#sourceCode : 'label_2\r\r\t^ label_2',			#stamp : 'mica 11/24/2024 12:31',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.428-03:00' ],		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Interfaz,				#isMetaSide : false			},			#name : #label_4,			#protocol : #accessing,			#sourceCode : 'label_4\r\r\t^ label_4',			#stamp : 'mica 11/24/2024 12:31',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.428-03:00' ],		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Interfaz,				#isMetaSide : false			},			#name : #label_1,			#protocol : #accessing,			#sourceCode : 'label_1\r\r\t^ label_1',			#stamp : 'mica 11/24/2024 12:31',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.428-03:00' ],		#prior : OmReference [ '61' ],		#self : OmReference [ '62' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Interfaz,				#isMetaSide : false			},			#name : #'ventana_3:',			#protocol : #accessing,			#sourceCode : 'ventana_3: anObject\r\r\tventana_3 := anObject',			#stamp : 'mica 11/24/2024 12:31',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.43-03:00' ],		#prior : OmReference [ '62' ],		#self : OmReference [ '63' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Interfaz,				#isMetaSide : false			},			#name : #ventana_2,			#protocol : #accessing,			#sourceCode : 'ventana_2\r\r\t^ ventana_2',			#stamp : 'mica 11/24/2024 12:27',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.43-03:00' ],		#prior : OmReference [ '63' ],		#self : OmReference [ '64' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Interfaz,				#isMetaSide : false			},			#name : #'label_3:',			#protocol : #accessing,			#sourceCode : 'label_3: anObject\r\r\tlabel_3 := anObject',			#stamp : 'mica 11/24/2024 12:31',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.43-03:00' ],		#prior : OmReference [ '64' ],		#self : OmReference [ '65' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Interfaz,				#isMetaSide : false			},			#name : #crearVentana,			#protocol : #initialization,			#sourceCode : 'crearVentana\r\t| screenWidth screenHeight |\r\r    "Obtener dimensiones de la pantalla"\r     screenWidth := Display width.\r     screenHeight := Display height.\r    "Ventana 1: Izquierda"\r    ventana_1:= Morph  new.\r    ventana_1 color: Color green.\r    ventana_1 := (ImageReadWriter formFromFileNamed: \'picturesParaPharo/carpinchitoIzquierda.png\') asMorph.\r    ventana_1 extent: 200@100.\r    ventana_1 position: (screenWidth - 1450)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"\r\r\r    label_1 := TextMorph new.\r    "mensaje de la ventana al iniciar"\r    label_1 contents: \'Jugador 1\'.\r    label_1 color: Color green.\r    label_1 position: (ventana_1 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"\r    label_1 font: (LogicalFont familyName: \'Arial\' pointSize: 50). "Cambia \'Arial\' y 20 según tus necesidades"\r\r        \r    ventana_1 addMorph: label_1.\r    ventana_1 openInWorld.\r\r    "Ventana 2: Más a la derecha"\r    ventana_2 := Morph new.\r    ventana_2 color: Color green.\r\tventana_2 := (ImageReadWriter formFromFileNamed: \'picturesParaPharo/carpinchitoDerecha.png\') asMorph.\r    ventana_2 extent: 200@100.\r    ventana_2 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"\r\r\r    label_2 := TextMorph new.\r    "mensaje de la ventana al iniciar"\r    label_2 contents: \'Jugador 2\'.\r    label_2 color: Color blue.\r    label_2 position: (ventana_2 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"\r    \r    ventana_2 addMorph: label_2.\r    ventana_2 openInWorld.\r\r"ventana 3"\r    ventana_3 := Morph new.\r    ventana_3 color: Color green.\r\t ventana_3 := (ImageReadWriter formFromFileNamed: \'picturesParaPharo/vs.png\') asMorph.\r    ventana_3 extent: 200@100.\r    ventana_3 position: (screenWidth - 800)@ 1. "arriba en el medio"\r\r\r    label_3 := TextMorph new.\r    "mensaje de la ventana al iniciar"\r    label_3 contents: \'\'.\r    label_3 color: Color red.\r    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"\r    \r    ventana_3 addMorph: label_3.\r    ventana_3 openInWorld.\r\r',			#stamp : 'TiagoBernal 11/24/2024 16:10',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.43-03:00' ],		#prior : OmReference [ '65' ],		#self : OmReference [ '66' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Interfaz,				#isMetaSide : false			},			#name : #'label_2:',			#protocol : #accessing,			#sourceCode : 'label_2: anObject\r\r\tlabel_2 := anObject',			#stamp : 'mica 11/24/2024 12:31',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.431-03:00' ],		#prior : OmReference [ '66' ],		#self : OmReference [ '67' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Interfaz,				#isMetaSide : false			},			#name : #'label_4:',			#protocol : #accessing,			#sourceCode : 'label_4: anObject\r\r\tlabel_4 := anObject',			#stamp : 'mica 11/24/2024 12:31',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.431-03:00' ],		#prior : OmReference [ '67' ],		#self : OmReference [ '68' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Interfaz,				#isMetaSide : false			},			#name : #'crearVentanaRota:',			#protocol : #mostrar,			#sourceCode : 'crearVentanaRota:anNumber\r\t| screenWidth screenHeight |\r\r    "Obtener dimensiones de la pantalla"\r     screenWidth := Display width.\r     screenHeight := Display height.\r\r(anNumber =1 ) ifTrue: [  \r\t\r    "Ventana 1: Izquierda"\r    ventana_4:= Morph  new.\r    ventana_4 color: Color green.\r    ventana_4 := (ImageReadWriter formFromFileNamed: \'picturesParaPharo/derrota.png\') asMorph.\r    ventana_4 extent: 200@100.\r    ventana_4 position: (screenWidth - 1450)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"\r\r\r    label_4 := TextMorph new.\r    "mensaje de la ventana al iniciar"\r    label_4 contents: \'Gamer Over\'.\r    label_4 color: Color red.\r    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"\r    label_4 font: (LogicalFont familyName: \'Arial\' pointSize: 50). "Cambia \'Arial\' y 20 según tus necesidades"\r\r        \r    ventana_4 addMorph: label_4.\r    ventana_4 openInWorld.].\r\r(anNumber =2) ifTrue: [  \r    "Ventana 2: Más a la derecha"\r    ventana_4 := Morph new.\r    ventana_4 color: Color green.\r\tventana_4 := (ImageReadWriter formFromFileNamed: \'picturesParaPharo/derrota.png\') asMorph.\r    ventana_4 extent: 200@100.\r    ventana_4 position: (screenWidth - 320)@((screenHeight // 2) - 50). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"\r\r\r    label_4 := TextMorph new.\r    "mensaje de la ventana al iniciar"\r    label_4 contents: \'Gamer over\'.\r    label_4 color: Color red.\r    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 2"\r    \r    ventana_4 addMorph: label_4.\r    ventana_4 openInWorld.].',			#stamp : 'TiagoBernal 11/24/2024 16:10',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.431-03:00' ],		#prior : OmReference [ '68' ],		#self : OmReference [ '69' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Interfaz\r\tinstanceVariableNames: \'accionMouse ventana_1 ventana_2 ventana_3 ventana_4 label_1 label_2 label_3 label_4\'\r\tclassVariableNames: \'\'\r\tpackage: #\'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Interfaz,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteInterfaz,						#isMetaSide : false					},					#name : #accionMouse,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteInterfaz,						#isMetaSide : false					},					#name : #ventana_1,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteInterfaz,						#isMetaSide : false					},					#name : #ventana_2,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteInterfaz,						#isMetaSide : false					},					#name : #ventana_3,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteInterfaz,						#isMetaSide : false					},					#name : #ventana_4,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteInterfaz,						#isMetaSide : false					},					#name : #label_1,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteInterfaz,						#isMetaSide : false					},					#name : #label_2,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteInterfaz,						#isMetaSide : false					},					#name : #label_3,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteInterfaz,						#isMetaSide : false					},					#name : #label_4,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Interfaz class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'AnObsoleteInterfaz class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteInterfaz,					#isMetaSide : false				},				#parent : @7,				#content : '- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\taccionMouse:\t\t<Object>\r\r\r    Implementation Points',				#stamp : 'Gonzalo 11/23/2024 18:13'			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.514-03:00' ],		#prior : OmReference [ '69' ],		#self : OmReference [ '70' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #opcion,			#protocol : #accessing,			#sourceCode : 'opcion\r\r\t^ opcion',			#stamp : 'mica 11/3/2024 19:18',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.515-03:00' ],		#prior : OmReference [ '70' ],		#self : OmReference [ '71' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'opcionNumeroALetra:',			#protocol : #converting,			#sourceCode : 'opcionNumeroALetra: a\r"convierte la respuesta del jugador en A, B, C, o D para luego"\r"comparar con la respuesta correcta en mostrarPregunta:y:"\r|listaOpciones |\r\rlistaOpciones := #(\'A\' \'B\' \'C\' \'D\' 0).\r\r^(listaOpciones at: a)\r',			#stamp : 'mica 11/21/2024 02:41',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.515-03:00' ],		#prior : OmReference [ '71' ],		#self : OmReference [ '72' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'frase:',			#protocol : #accessing,			#sourceCode : 'frase: anObject\r\r\tfrase := anObject',			#stamp : 'mica 11/21/2024 20:12',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.516-03:00' ],		#prior : OmReference [ '72' ],		#self : OmReference [ '73' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'llamarPregunta:',			#protocol : #accessing,			#sourceCode : 'llamarPregunta: categoria\r\t\r(categoria = \'deporte\' ) ifTrue:[self elegirPregunta: 1].\r(categoria = \'historia\' ) ifTrue:[self elegirPregunta: 2].\r(categoria = \'arte\' ) ifTrue:[self elegirPregunta: 3].\r(categoria = \'geografia\' ) ifTrue:[self elegirPregunta: 4].\r(categoria = \'ciencia\' ) ifTrue:[self elegirPregunta: 5].\r\rself ponerPregunta: categoria.\rself mostrarPregunta:categoria. ',			#stamp : 'mica 11/21/2024 19:55',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.516-03:00' ],		#prior : OmReference [ '73' ],		#self : OmReference [ '74' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'correcta:',			#protocol : #accessing,			#sourceCode : 'correcta: anObject\r\r\tcorrecta := anObject',			#stamp : 'mica 11/21/2024 19:52',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.517-03:00' ],		#prior : OmReference [ '74' ],		#self : OmReference [ '75' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #preguntaAleatoria,			#protocol : #accessing,			#sourceCode : 'preguntaAleatoria\r\r\t^ preguntaAleatoria',			#stamp : 'mica 11/4/2024 14:35',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.517-03:00' ],		#prior : OmReference [ '75' ],		#self : OmReference [ '76' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'nroPregunta:',			#protocol : #accessing,			#sourceCode : 'nroPregunta: anObject\r\r\tnroPregunta := anObject',			#stamp : 'mica 11/21/2024 20:02',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.517-03:00' ],		#prior : OmReference [ '76' ],		#self : OmReference [ '77' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #rtaPlayer,			#protocol : #accessing,			#sourceCode : 'rtaPlayer\r\r\t^ rtaPlayer',			#stamp : 'mica 11/22/2024 14:10',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.517-03:00' ],		#prior : OmReference [ '77' ],		#self : OmReference [ '78' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #j1,			#protocol : #accessing,			#sourceCode : 'j1\r\r\t^ j1',			#stamp : 'mica 11/22/2024 13:04',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.518-03:00' ],		#prior : OmReference [ '78' ],		#self : OmReference [ '79' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'ponerPregunta:',			#protocol : #accessing,			#sourceCode : 'ponerPregunta:cat\r"toma la linea guardada en el atributo preguntaAleatoria"\r"divide la linea en 3 partes: pregunta, opciones y respuesta correcta"\r"ejemplo de linea .txt:" \r"¿Quién fue el primer presidente de los Estados Unidos?A) Abraham Lincoln%B) George Washington%C) Thomas Jefferson%D) John Adams% B"\r\r|restoPregunta opciones signo ops pregSubstring| \r\rops:= \'\'.\rsigno:=\'?\'.\rpregunta:=\'\'.\rrespuestas := OrderedCollection new.\r\rnroPregunta:= (preguntaAleatoria substrings)first.\rcorrecta := (preguntaAleatoria substrings) last.  "Toma solo el ultimo string de toda la frase. Es la respuesta correcta"\rpregSubstring := (preguntaAleatoria) allButFirst: 3.\rpregunta:= ( pregSubstring copyUpToSubstring: signo). "copia solo la pregunta sin el signo \'?\'" \rrestoPregunta := preguntaAleatoria copyAfterLast: $?. "copia el resto despues de \'?\'"\ropciones:= restoPregunta allButLast. "copia solo las opciones sin la respuesta ni pregunta"\r\ropciones do: [ :i| (i~= $%)ifTrue:[ops:=ops, (i asString)] "recorre la secuencia y acumula los caracteres hasta encontrar %"\r\t\tifFalse:[\r\t\trespuestas add: (ops asString). "cuando llega a un % guarda lo acumulado en el atributo respuestas (definido como OrderedCollection)"\r\t\tops:=\'\'.\r\t\t\t].\r\t\t].\rrespuestas add: \'PASAR\'.\r',			#stamp : 'mica 11/22/2024 09:39',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.518-03:00' ],		#prior : OmReference [ '79' ],		#self : OmReference [ '80' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'verificarPreguntaRepetidaEn:',			#protocol : #control,			#sourceCode : 'verificarPreguntaRepetidaEn: listaPreguntas\r|band| "QUE VERIFIQUE EN UNA INSTANCIA DE DUELO, NO EN TODO EL JUEGO"\r\rband:= true.\r[band] whileTrue:[ \r\tpreguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.\r\tnroPregunta:= (preguntaAleatoria substrings) first.\r\r\t(listaPreguntas isEmpty)\r\tifTrue:[\r\t\tlistaPreguntas add: nroPregunta. band:= false]\r\tifFalse: [ \r\t\t(listaPreguntas size = frase size) \r\t\t\t\t\t\tifTrue:[ band:= false]\r\t\t\t\t\t\tifFalse:[ \r\t\t\t\t\t\t\t(listaPreguntas includes: nroPregunta)\r\t\t\t\t\t\t\tifFalse:[\r\t\t\t\t\t\t\t\t\tlistaPreguntas add: nroPregunta. band:= false]\r\t\t\t\t\t\t\tifTrue:[\r\t\t\t\t\t\t\t\tband:= true\r\t\t\t\t\t\t\t]\r\t\t\t\t\t\t] \r\t\t\t\t]\r]\r',			#stamp : 'mica 11/21/2024 22:08',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.518-03:00' ],		#prior : OmReference [ '80' ],		#self : OmReference [ '81' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #band1,			#protocol : #accessing,			#sourceCode : 'band1\r\r\t^ band1',			#stamp : 'mica 11/22/2024 13:05',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.519-03:00' ],		#prior : OmReference [ '81' ],		#self : OmReference [ '82' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'opcion:',			#protocol : #accessing,			#sourceCode : 'opcion: anObject\r\r\topcion := anObject',			#stamp : 'mica 11/3/2024 19:23',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.519-03:00' ],		#prior : OmReference [ '82' ],		#self : OmReference [ '83' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'resultado:',			#protocol : #accessing,			#sourceCode : 'resultado: anObject\r\r\tresultado := anObject',			#stamp : 'mica 11/5/2024 18:09',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.519-03:00' ],		#prior : OmReference [ '83' ],		#self : OmReference [ '84' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'t:',			#protocol : #accessing,			#sourceCode : 't: anObject\r\r\tt := anObject',			#stamp : 'mica 11/22/2024 14:55',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.52-03:00' ],		#prior : OmReference [ '84' ],		#self : OmReference [ '85' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'j2:',			#protocol : #accessing,			#sourceCode : 'j2: anObject\r\r\tj2 := anObject',			#stamp : 'mica 11/22/2024 13:04',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.52-03:00' ],		#prior : OmReference [ '85' ],		#self : OmReference [ '86' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #respuestas,			#protocol : #accessing,			#sourceCode : 'respuestas\r\r\t^ respuestas',			#stamp : 'mica 11/4/2024 14:48',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.52-03:00' ],		#prior : OmReference [ '86' ],		#self : OmReference [ '87' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'listaPreguntas:',			#protocol : #accessing,			#sourceCode : 'listaPreguntas: anObject\r\r\tlistaPreguntas := anObject',			#stamp : 'mica 11/22/2024 00:56',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.521-03:00' ],		#prior : OmReference [ '87' ],		#self : OmReference [ '88' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #j2,			#protocol : #accessing,			#sourceCode : 'j2\r\r\t^ j2',			#stamp : 'mica 11/22/2024 13:04',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.521-03:00' ],		#prior : OmReference [ '88' ],		#self : OmReference [ '89' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #nroPregunta,			#protocol : #accessing,			#sourceCode : 'nroPregunta\r\r\t^ nroPregunta',			#stamp : 'mica 11/21/2024 20:02',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.521-03:00' ],		#prior : OmReference [ '89' ],		#self : OmReference [ '90' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #verificarPreguntaRepetidas,			#protocol : #control,			#sourceCode : 'verificarPreguntaRepetidas\r|band| "QUE VERIFIQUE EN UNA INSTANCIA DE DUELO, NO EN TODO EL JUEGO"\r\rband:= true.\r[band] whileTrue:[ \r\tpreguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.\r\tnroPregunta:= (preguntaAleatoria substrings) first.\r\t\r\t(listaPreguntas isEmpty)\r\tifTrue:[\r\t\tlistaPreguntas add: nroPregunta. band:= false]\r\tifFalse: [ \r\t\t(listaPreguntas size = frase size) \r\t\t\t\t\t\tifTrue:[ band:= false]\r\t\t\t\t\t\tifFalse:[ \r\t\t\t\t\t\t\t(listaPreguntas includes: nroPregunta)\r\t\t\t\t\t\t\tifFalse:[\r\t\t\t\t\t\t\t\t\tlistaPreguntas add: nroPregunta. band:= false]\r\t\t\t\t\t\t\tifTrue:[\r\t\t\t\t\t\t\t\tband:= true\r\t\t\t\t\t\t\t]\r\t\t\t\t\t\t] \r\t\t\t\t]\r].',			#stamp : 'mica 11/22/2024 02:06',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.521-03:00' ],		#prior : OmReference [ '90' ],		#self : OmReference [ '91' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #pregunta,			#protocol : #accessing,			#sourceCode : 'pregunta\r\r\t^ pregunta',			#stamp : 'mica 11/21/2024 19:52',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.522-03:00' ],		#prior : OmReference [ '91' ],		#self : OmReference [ '92' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'pregunta:',			#protocol : #accessing,			#sourceCode : 'pregunta: anObject\r\r\tpregunta := anObject',			#stamp : 'mica 11/21/2024 19:52',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.522-03:00' ],		#prior : OmReference [ '92' ],		#self : OmReference [ '93' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #listaPreguntas,			#protocol : #accessing,			#sourceCode : 'listaPreguntas\r\r\t^ listaPreguntas',			#stamp : 'mica 11/22/2024 00:56',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.522-03:00' ],		#prior : OmReference [ '93' ],		#self : OmReference [ '94' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #t,			#protocol : #accessing,			#sourceCode : 't\r\r\t^ t',			#stamp : 'mica 11/22/2024 14:55',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.523-03:00' ],		#prior : OmReference [ '94' ],		#self : OmReference [ '95' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'j1:',			#protocol : #accessing,			#sourceCode : 'j1: anObject\r\r\tj1 := anObject',			#stamp : 'mica 11/22/2024 13:04',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.523-03:00' ],		#prior : OmReference [ '95' ],		#self : OmReference [ '96' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'band1:',			#protocol : #accessing,			#sourceCode : 'band1: anObject\r\r\tband1 := anObject',			#stamp : 'mica 11/22/2024 13:05',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.523-03:00' ],		#prior : OmReference [ '96' ],		#self : OmReference [ '97' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'rtaPlayer:',			#protocol : #accessing,			#sourceCode : 'rtaPlayer: anObject\r\r\trtaPlayer := anObject',			#stamp : 'mica 11/22/2024 14:10',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.523-03:00' ],		#prior : OmReference [ '97' ],		#self : OmReference [ '98' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #resultado,			#protocol : #accessing,			#sourceCode : 'resultado\r\r\t^ resultado',			#stamp : 'mica 11/5/2024 18:09',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.523-03:00' ],		#prior : OmReference [ '98' ],		#self : OmReference [ '99' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'respuestas:',			#protocol : #accessing,			#sourceCode : 'respuestas: anObject\r\r\trespuestas := anObject',			#stamp : 'mica 11/4/2024 14:48',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.524-03:00' ],		#prior : OmReference [ '99' ],		#self : OmReference [ '100' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'elegirPregunta:',			#protocol : #initialization,			#sourceCode : 'elegirPregunta:categoriaCasilla\r"elige al azar una linea del archivo Pregunta.txt y la guarda en el atributo preguntaAleatoria "\r|archivo|\r\rarchivo := FileSystem disk workingDirectory.\r\r(categoriaCasilla = 1)ifTrue:[frase:= ((archivo / \'DEPORTE.txt\') contents lines)].\r(categoriaCasilla = 2)ifTrue:[frase:= ((archivo / \'HISTORIA.txt\') contents lines)].\r(categoriaCasilla = 3)ifTrue:[frase:= ((archivo / \'ARTE.txt\') contents lines)].\r(categoriaCasilla = 4)ifTrue:[frase:= ((archivo / \'GEOGRAFIA.txt\') contents lines)].\r(categoriaCasilla = 5)ifTrue:[frase:= ((archivo / \'CIENCIA.txt\') contents lines)].\r\rpreguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.\r\rself verificarPreguntaRepetidas',			#stamp : 'mica 11/22/2024 01:05',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.524-03:00' ],		#prior : OmReference [ '100' ],		#self : OmReference [ '101' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'mostrarPregunta:',			#protocol : #showing,			#sourceCode : 'mostrarPregunta: cat\r"muestra al jugador la pregunta con sus opciones."\r"guarda la respuesta en rtaPlayer y la compara con el parametro \'correcta\'"\r"segun coincida rtaPlayer y correcta, devuelve un cartelito de CORRECTO o INCORRECTO" \r|rtaNum nom|\r\rt ifTrue: [ self resultado: 0]\rifFalse: [ \r\rband1 ifTrue: \r[nom:= j1]\rifFalse: [ nom:= j2].\r\rTranscript show: \'Realizando pregunta \', (nroPregunta)  asString; cr.\r\t\trtaPlayer := UIManager default \r\t\tchooseFrom: respuestas \r\t\tmessage: nom,String cr,pregunta,\'?\'\r\t\ttitle: \'DUELO\',String cr,cat.\r\rTranscript show: \'rtaPlayer-->\', rtaPlayer asString;cr.\r\rrtaNum := self opcionNumeroALetra: rtaPlayer.\r(correcta = (rtaNum))\r\tifTrue:[self resultado: 1]\r\tifFalse: [\r\t\t(rtaPlayer = 5 )\r\t\tifTrue: [  \r\t\t\tself resultado: 5]\r\t \tifFalse:[self resultado: 2]\r\t].\r]\t\r',			#stamp : 'Gonzalo 11/23/2024 20:35',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.524-03:00' ],		#prior : OmReference [ '101' ],		#self : OmReference [ '102' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'preguntaAleatoria:',			#protocol : #accessing,			#sourceCode : 'preguntaAleatoria: anObject\r\r\tpreguntaAleatoria := anObject',			#stamp : 'mica 11/4/2024 14:35',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.525-03:00' ],		#prior : OmReference [ '102' ],		#self : OmReference [ '103' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #frase,			#protocol : #accessing,			#sourceCode : 'frase\r\r\t^ frase',			#stamp : 'mica 11/21/2024 20:12',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.525-03:00' ],		#prior : OmReference [ '103' ],		#self : OmReference [ '104' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #correcta,			#protocol : #accessing,			#sourceCode : 'correcta\r\r\t^ correcta',			#stamp : 'mica 11/21/2024 19:52',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.525-03:00' ],		#prior : OmReference [ '104' ],		#self : OmReference [ '105' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Pregunta\r\tinstanceVariableNames: \'opcion preguntaAleatoria respuestas resultado correcta pregunta nroPregunta frase listaPreguntas j1 j2 band1 rtaPlayer t\'\r\tclassVariableNames: \'\'\r\tpackage: #\'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Pregunta,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoletePregunta,						#isMetaSide : false					},					#name : #opcion,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoletePregunta,						#isMetaSide : false					},					#name : #preguntaAleatoria,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoletePregunta,						#isMetaSide : false					},					#name : #respuestas,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoletePregunta,						#isMetaSide : false					},					#name : #resultado,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoletePregunta,						#isMetaSide : false					},					#name : #correcta,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoletePregunta,						#isMetaSide : false					},					#name : #pregunta,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoletePregunta,						#isMetaSide : false					},					#name : #nroPregunta,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoletePregunta,						#isMetaSide : false					},					#name : #frase,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoletePregunta,						#isMetaSide : false					},					#name : #listaPreguntas,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoletePregunta,						#isMetaSide : false					},					#name : #j1,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoletePregunta,						#isMetaSide : false					},					#name : #j2,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoletePregunta,						#isMetaSide : false					},					#name : #band1,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoletePregunta,						#isMetaSide : false					},					#name : #rtaPlayer,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoletePregunta,						#isMetaSide : false					},					#name : #t,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Pregunta class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'AnObsoletePregunta class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoletePregunta,					#isMetaSide : false				},				#parent : @7,				#content : '-Toma la pregunta, opciones y respuesta correcta de una archivo .txt\r-Muestra la pregunta y permite al jugador contestar a traves de opciones.',				#stamp : 'mica 11/4/2024 21:42'			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.551-03:00' ],		#prior : OmReference [ '105' ],		#self : OmReference [ '106' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #detener,			#protocol : #initialization,			#sourceCode : 'detener\r    proceso ifNotNil: [ \r        proceso terminate.\r        proceso := nil.\r         ]',			#stamp : 'IngPepeGrillo 11/19/2024 23:03',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.552-03:00' ],		#prior : OmReference [ '106' ],		#self : OmReference [ '107' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize \r    timer_1 :=10.\r    timer_2:=10.\r    proceso:=nil.',			#stamp : 'mica 11/22/2024 14:16',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.552-03:00' ],		#prior : OmReference [ '107' ],		#self : OmReference [ '108' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #ventanas,			#protocol : #accessing,			#sourceCode : 'ventanas\r\r\t^ ventanas',			#stamp : 'mica 11/24/2024 12:46',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.552-03:00' ],		#prior : OmReference [ '108' ],		#self : OmReference [ '109' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'restarSegundos:',			#protocol : #initialization,			#sourceCode : 'restarSegundos:anPlayer "1 o 2"\r\t\r\t(anPlayer  = 1) ifTrue: [ timer_1 :=timer_1 - 2 ].\r\t\r\t(anPlayer  = 2) ifTrue: [ timer_2 :=timer_2 - 2 ].',			#stamp : 'mica 11/22/2024 13:01',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.552-03:00' ],		#prior : OmReference [ '109' ],		#self : OmReference [ '110' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #perdedor,			#protocol : #accessing,			#sourceCode : 'perdedor\r\r\t^ perdedor',			#stamp : 'mica 11/21/2024 02:12',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.552-03:00' ],		#prior : OmReference [ '110' ],		#self : OmReference [ '111' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'iniciar:',			#protocol : #initialization,			#sourceCode : 'iniciar:jugadorInicial\r            |uno_sin_tiempo|\r\t\t\t\tself ventanas: Interfaz new.\r\t\t\t\tfin:= false.\r            uno_sin_tiempo :=false.\r\t\t\t\tself fin:false.\r            turno:=jugadorInicial .\r            self ventanas crearVentana.\r    proceso := [\r           \r        [ uno_sin_tiempo ] whileFalse: [ \r                 "va a ver si alguien se quedo sin tiempo"\r            (   (timer_1=0) | (timer_2=0) ) ifTrue: [ uno_sin_tiempo :=true ].\r            (Delay forSeconds: 1) wait. \r            "creamos 1 sola vez la ventana"\r            "(timer_1 = 5 )ifTrue: [self crearVentana]."\r            "vamos escribiendo los 2 tiempos sobre las 2 ventanas "\r          self ventanas label_1 contents: j1name , String cr, \'Segundos: \', timer_1 printString.\r          self ventanas label_2 contents: j2name , String cr, \'Segundos: \', timer_2 printString.\r\r                "veo de quien es el turno"\r                (turno=1) ifTrue: [ timer_1 := timer_1  - 1]\r                ifFalse: [ timer_2 := timer_2 -1 ]\r                \r                . \r  \r                "eliminamos la ventana"\r                                                \r                (timer_1 <=0) ifTrue: [\r\t\t\t\t\t\t\tself perdedor: 1.\r\t\t\t\t\t\t\tself fin:true.\r                    (Delay forSeconds: 1) wait.\r                 self  ventanas label_1 contents: \'Time is Over\'.\r                  self ventanas  label_2 contents: \'You won this battle\'.\r                   self  ventanas ventana_1 color: Color red.\r                   self  ventanas ventana_2 color: Color green.\r\t\t\t\t\t\tself ventanas crearVentanaRota: 1.\r"                    (Delay forSeconds: 2) wait. \r                    ventana_1 delete.\r                    ventana_1 := nil.\r                          ventana_2 delete.\r                    ventana_2 := nil."\r\r\t\t\t\t\t\t\t"Aca perdio el jugador 1"\r\t\t\t\t\t\t\t"tratamiento"\r\t\t\t\t\t\t\t\r                                ].      \r                    \r                    (timer_2 <=0) ifTrue: [\r\t\t\t\t\t\t\tself perdedor: 2.\r\t\t\t\t\t\t\tself fin:true.\r                    (Delay forSeconds: 1) wait.\r\t\r                self  ventanas   label_1 contents: \'You won this battle\'.\r                   self    ventanas   label_2 contents: \'Time is Over\'.\r                    self   ventanas ventana_1 color: Color green.\r                    self   ventanas ventana_2 color: Color red .\r\t\t\t\t\t\tself ventanas crearVentanaRota: 2.\r\r\r\t\t\t\t\t\t"Aca perdio el jugador 2"\r\t\t\t\t\t\t"iniciar tratamiento"\r                                ].\r\r\t\t\t\t\t       \r   \t\t].\r\r\r\r         ] fork. \r\r',			#stamp : 'mica 11/24/2024 12:56',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.553-03:00' ],		#prior : OmReference [ '111' ],		#self : OmReference [ '112' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #j2name,			#protocol : #accessing,			#sourceCode : 'j2name\r\r\t^ j2name',			#stamp : 'mica 11/23/2024 01:35',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.553-03:00' ],		#prior : OmReference [ '112' ],		#self : OmReference [ '113' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'timer_2:',			#protocol : #accessing,			#sourceCode : 'timer_2: anObject\r\r\ttimer_2 := anObject',			#stamp : 'mica 11/21/2024 18:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.553-03:00' ],		#prior : OmReference [ '113' ],		#self : OmReference [ '114' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'j2name:',			#protocol : #accessing,			#sourceCode : 'j2name: anObject\r\r\tj2name := anObject',			#stamp : 'mica 11/23/2024 01:35',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.554-03:00' ],		#prior : OmReference [ '114' ],		#self : OmReference [ '115' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #j1name,			#protocol : #accessing,			#sourceCode : 'j1name\r\r\t^ j1name',			#stamp : 'mica 11/23/2024 01:35',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.555-03:00' ],		#prior : OmReference [ '115' ],		#self : OmReference [ '116' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'fin:',			#protocol : #accessing,			#sourceCode : 'fin: anObject\r\r\tfin := anObject',			#stamp : 'mica 11/21/2024 02:46',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.555-03:00' ],		#prior : OmReference [ '116' ],		#self : OmReference [ '117' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'ventanas:',			#protocol : #accessing,			#sourceCode : 'ventanas: anObject\r\r\tventanas := anObject',			#stamp : 'mica 11/24/2024 12:46',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.555-03:00' ],		#prior : OmReference [ '117' ],		#self : OmReference [ '118' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'turno:',			#protocol : #initialization,			#sourceCode : 'turno:anValue\r    turno:=anValue .',			#stamp : 'IngPepeGrillo 11/19/2024 23:04',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.556-03:00' ],		#prior : OmReference [ '118' ],		#self : OmReference [ '119' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #proceso,			#protocol : #accessing,			#sourceCode : 'proceso\r\r\t^ proceso',			#stamp : 'mica 11/21/2024 18:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.556-03:00' ],		#prior : OmReference [ '119' ],		#self : OmReference [ '120' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'perdedor:',			#protocol : #accessing,			#sourceCode : 'perdedor: anObject\r\r\tperdedor := anObject',			#stamp : 'mica 11/21/2024 02:12',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.556-03:00' ],		#prior : OmReference [ '120' ],		#self : OmReference [ '121' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'proceso:',			#protocol : #accessing,			#sourceCode : 'proceso: anObject\r\r\t^ proceso := anObject',			#stamp : 'mica 11/21/2024 18:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.556-03:00' ],		#prior : OmReference [ '121' ],		#self : OmReference [ '122' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #timer_1,			#protocol : #accessing,			#sourceCode : 'timer_1\r\r\t^ timer_1',			#stamp : 'mica 11/22/2024 14:31',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.556-03:00' ],		#prior : OmReference [ '122' ],		#self : OmReference [ '123' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #turno,			#protocol : #accessing,			#sourceCode : 'turno\r\r\t^ turno',			#stamp : 'mica 11/21/2024 18:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.558-03:00' ],		#prior : OmReference [ '123' ],		#self : OmReference [ '124' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #timer_2,			#protocol : #accessing,			#sourceCode : 'timer_2\r\r\t^ timer_2',			#stamp : 'mica 11/21/2024 18:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.558-03:00' ],		#prior : OmReference [ '124' ],		#self : OmReference [ '125' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'j1name:',			#protocol : #accessing,			#sourceCode : 'j1name: anObject\r\r\tj1name := anObject',			#stamp : 'mica 11/23/2024 01:35',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.558-03:00' ],		#prior : OmReference [ '125' ],		#self : OmReference [ '126' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'timer_1:',			#protocol : #accessing,			#sourceCode : 'timer_1: anObject\r\r\ttimer_1 := anObject',			#stamp : 'mica 11/22/2024 14:31',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.559-03:00' ],		#prior : OmReference [ '126' ],		#self : OmReference [ '127' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #fin,			#protocol : #accessing,			#sourceCode : 'fin\r\r\t^ fin',			#stamp : 'mica 11/21/2024 02:46',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.559-03:00' ],		#prior : OmReference [ '127' ],		#self : OmReference [ '128' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Timer\r\tinstanceVariableNames: \'timer_1 timer_2 proceso turno perdedor fin j1name j2name ventanas\'\r\tclassVariableNames: \'\'\r\tpackage: #\'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Timer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTimer,						#isMetaSide : false					},					#name : #timer_1,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTimer,						#isMetaSide : false					},					#name : #timer_2,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTimer,						#isMetaSide : false					},					#name : #proceso,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTimer,						#isMetaSide : false					},					#name : #turno,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTimer,						#isMetaSide : false					},					#name : #perdedor,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTimer,						#isMetaSide : false					},					#name : #fin,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTimer,						#isMetaSide : false					},					#name : #j1name,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTimer,						#isMetaSide : false					},					#name : #j2name,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteTimer,						#isMetaSide : false					},					#name : #ventanas,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Timer class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'AnObsoleteTimer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteTimer,					#isMetaSide : false				},				#parent : @7,				#content : '- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tfin:\t\t<Object>\r\tj1name:\t\t<Object>\r\tj2name:\t\t<Object>\r\tlabel_1:\t\t<Object>\r\tlabel_2:\t\t<Object>\r\tperdedor:\t\t<Object>\r\tproceso:\t\t<Object>\r\ttimer_1:\t\t<Object>\r\ttimer_2:\t\t<Object>\r\tturno:\t\t<Object>\r\tventana_1:\t\t<Object>\r\tventana_2:\t\t<Object>\r\r\r    Implementation Points',				#stamp : 'Gonzalo 11/23/2024 18:13'			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.58-03:00' ],		#prior : OmReference [ '128' ],		#self : OmReference [ '129' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #perdedor,			#protocol : #accessing,			#sourceCode : 'perdedor\r\r\t^ perdedor',			#stamp : 'mica 11/23/2024 01:58',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.58-03:00' ],		#prior : OmReference [ '129' ],		#self : OmReference [ '130' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #'categoria:',			#protocol : #accessing,			#sourceCode : 'categoria: anObject\r\r\tcategoria := anObject',			#stamp : 'mica 11/23/2024 19:16',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.58-03:00' ],		#prior : OmReference [ '130' ],		#self : OmReference [ '131' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #'dueloExtra:',			#protocol : #extra,			#sourceCode : 'dueloExtra: powerUp\r|listaCat|\r\rlistaCat := #(\'historia\' \'deporte\' \'geografia\' \'arte\' \'ciencia\').\r\r(powerUp)ifTrue: [ self categoria: (listaCat at: ((1 to: listaCat size)atRandom))]',			#stamp : 'mica 11/23/2024 19:46',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.582-03:00' ],		#prior : OmReference [ '131' ],		#self : OmReference [ '132' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #'perdedor:',			#protocol : #accessing,			#sourceCode : 'perdedor: anObject\r\r\tperdedor := anObject',			#stamp : 'mica 11/23/2024 01:57',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.582-03:00' ],		#prior : OmReference [ '132' ],		#self : OmReference [ '133' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #timer,			#protocol : #accessing,			#sourceCode : 'timer\r\r\t^ timer',			#stamp : 'mica 11/22/2024 12:19',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.582-03:00' ],		#prior : OmReference [ '133' ],		#self : OmReference [ '134' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #categoria,			#protocol : #accessing,			#sourceCode : 'categoria\r\r\t^ categoria',			#stamp : 'mica 11/23/2024 19:16',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.582-03:00' ],		#prior : OmReference [ '134' ],		#self : OmReference [ '135' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #pasarPregunta,			#protocol : #initialization,			#sourceCode : 'pasarPregunta\rbandJugador1\r\t\t\t\t\tifTrue: [ \r\t\t\t\t\t\tself timer restarSegundos: 1. \r\t\t\t\t\t\tTranscript\r\t\t\t\t\t\t\tshow: \'1\';\r\t\t\t\t\t\t\tcr.]\r\t\t\t\t\tifFalse: [ \r\t\t\t\t\t\tself timer restarSegundos: 2.\r\t\t\t\t\t\tTranscript\r\t\t\t\t\t\t\tshow: \'2\';\r\t\t\t\t\t\t\tcr.\r\t\t\t\t\t\t\t]',			#stamp : 'mica 11/23/2024 20:03',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.583-03:00' ],		#prior : OmReference [ '135' ],		#self : OmReference [ '136' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #'iniciarDueloEntre:y:categoria:dueloExtra:',			#protocol : #initialization,			#sourceCode : 'iniciarDueloEntre: player1 y: player2 categoria: player2cat dueloExtra: arg1\r\t| pregunta|\r\ttimer := Timer new.\r\ttimer j1name: player1 .\r\ttimer j2name: player2 .\r\tpregunta := Pregunta new.\r\tpregunta j1: player1.\r\tpregunta j2: player2.\r\tpregunta listaPreguntas: OrderedCollection new.\r\tpregunta t: false.\r\tbandJugador1 := true.\r\tpregunta band1: true.\r\tself timer iniciar: 1.\r\tcategoria := player2cat.\r\t\r\t[ self timer fin ] whileFalse: [ \r\t\tself dueloExtra: arg1.\r\t\tpregunta llamarPregunta: categoria.\r\t\tpregunta resultado = 5 ifTrue: [ self pasarPregunta ].\r\t\tpregunta resultado = 1 ifTrue: [ \r\t\t\tself pasarTurno:player1 a:player2.\r\t\t\tpregunta band1: bandJugador1 ].\r\t\tpregunta resultado = 2 ifTrue: [ \r\t\t\tTranscript\r\t\t\t\tshow: \'------->>   INCORRECTO\';\r\t\t\t\tcr.\r\t\t\t[ \r\t\t\tpregunta resultado = 1 | (pregunta resultado = 5)\r\t\t\t| (pregunta resultado = 0) ] whileFalse: [ \r\t\t\t\tself timer timer_1 <= 0 | (self timer timer_2 <= 0) ifTrue: [ \r\t\t\t\t\tpregunta t: true ].\r\t\t\t\tpregunta mostrarPregunta: self categoria ].\r\t\t\tpregunta resultado = 5 ifTrue: [ self pasarPregunta ].\r\t\t\tpregunta resultado = 1 ifTrue: [ \r\t\t\t\tself pasarTurno:player1 a:player2.\r\t\t\t\tpregunta band1: bandJugador1 ] ].\r].\r\rTranscript show: \'PERDEDOR Player \',timer perdedor asString;\r\t\t\t\t\tcr.\r(timer ventanas ventana_1) delete.\r(timer ventanas ventana_2) delete.\r(timer ventanas ventana_3) delete.\r(timer ventanas ventana_4) delete.\rself perdedor: timer perdedor\r\r\r\r',			#stamp : 'mica 11/24/2024 12:58',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.583-03:00' ],		#prior : OmReference [ '136' ],		#self : OmReference [ '137' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #bandJugador1,			#protocol : #accessing,			#sourceCode : 'bandJugador1\r\r\t^ bandJugador1',			#stamp : 'mica 11/22/2024 12:24',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.583-03:00' ],		#prior : OmReference [ '137' ],		#self : OmReference [ '138' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #'timer:',			#protocol : #accessing,			#sourceCode : 'timer: anObject\r\r\ttimer := anObject',			#stamp : 'mica 11/22/2024 12:19',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.583-03:00' ],		#prior : OmReference [ '138' ],		#self : OmReference [ '139' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #'bandJugador1:',			#protocol : #accessing,			#sourceCode : 'bandJugador1: anObject\r\r\tbandJugador1 := anObject',			#stamp : 'mica 11/22/2024 12:24',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.584-03:00' ],		#prior : OmReference [ '139' ],		#self : OmReference [ '140' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #'pasarTurno:a:',			#protocol : #accessing,			#sourceCode : 'pasarTurno:jugador1 a:jugador2\rbandJugador1\r\t\t\t\t\t\tifTrue: [ \r\t\t\t\t\t\t\t"UIManager default message:\'Es el turno del \',jugador2 ."\r\t\t\t\t\t\t\tTranscript\r\t\t\t\t\t\t\t\tshow: \'1\';\r\t\t\t\t\t\t\t\tcr.\r\t\t\t\t\t\ttimer turno: 2.\r\t\t\t\t\t\tbandJugador1 := false\r\t\t\t\t\t]\r\t\t\t\t\tifFalse: [ \r\t\t\t\t\t\t"UIManager default message:\'Es el turno del \',jugador1 ."\r\t\t\t\t\t\tTranscript\r\t\t\t\t\t\t\tshow: \'2\';\r\t\t\t\t\t\t\tcr.\r\t\t\t\t\t\ttimer turno: 1.\r\t\t\t\t\t\tbandJugador1 := true.\r\t\t\t\t\t]',			#stamp : 'Gonzalo 11/23/2024 21:47',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.584-03:00' ],		#prior : OmReference [ '140' ],		#self : OmReference [ '141' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Duelos\r\tinstanceVariableNames: \'timer bandJugador1 perdedor categoria\'\r\tclassVariableNames: \'\'\r\tpackage: #\'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Duelos,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteDuelos,						#isMetaSide : false					},					#name : #timer,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteDuelos,						#isMetaSide : false					},					#name : #bandJugador1,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteDuelos,						#isMetaSide : false					},					#name : #perdedor,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteDuelos,						#isMetaSide : false					},					#name : #categoria,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Duelos class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'AnObsoleteDuelos class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteDuelos,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages.\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tjugador1:\t\t<Object>\r\tjugador2:\t\t<Object>\r\r\r    Implementation Points',				#stamp : 'mica 11/5/2024 02:40'			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.609-03:00' ],		#prior : OmReference [ '141' ],		#self : OmReference [ '142' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #agregarPowerUp,			#protocol : #setter,			#sourceCode : 'agregarPowerUp\r\t| respuesta |\r\tracha :=0.\r\r\rUIManager default message:\'El \',nombre ,\' obtuvo una racha de 5 victorias\'.\rrespuesta := UIManager default\r    chooseFrom: #(\'Escudo\' \'Cañon\')\r    message: \'Elija PowerUp\',String cr,\'Escudo : proteje todas tus casillas ante una captura\',String cr,\'Cañon: permite atacar a cualquier casilla del tablero\'.\r    \r"Procesar la respuesta"\rrespuesta ifNotNil: [\r    (respuesta = 1)ifTrue: [ \r\t\t\tescudo:=true.\r\t ].\r\t(respuesta = 2)ifTrue: [ \r\t\t\tcañon :=true.\r\t\t\t\r\t ].\r] ifNil: [\r    Transcript show: \'No se seleccionó ninguna opción\'; cr.\r\tself agregarPowerUp.\r].',			#stamp : 'Gonzalo 11/23/2024 21:14',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.609-03:00' ],		#prior : OmReference [ '142' ],		#self : OmReference [ '143' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize \r\tnombre:=\'Unkown Player\'.\r\tescudo:=false.\r\tcañon :=false.\r\tracha:=0.\r\tcasillas:=OrderedCollection new.',			#stamp : 'Gonzalo 11/21/2024 20:54',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.609-03:00' ],		#prior : OmReference [ '143' ],		#self : OmReference [ '144' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #adversarios,			#protocol : #accessing,			#sourceCode : 'adversarios\r ^adversarios.',			#stamp : 'SuarezGonzalo 11/9/2024 19:32',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.61-03:00' ],		#prior : OmReference [ '144' ],		#self : OmReference [ '145' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'cañon:',			#protocol : #setter,			#sourceCode : 'cañon:x\r\tcañon:=x.',			#stamp : 'Gonzalo 11/21/2024 10:41',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.61-03:00' ],		#prior : OmReference [ '145' ],		#self : OmReference [ '146' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #casillas,			#protocol : #accessing,			#sourceCode : 'casillas\r^casillas.',			#stamp : 'SuarezGonzalo 10/31/2024 20:40',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.61-03:00' ],		#prior : OmReference [ '146' ],		#self : OmReference [ '147' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #nombre,			#protocol : #accessing,			#sourceCode : 'nombre\r^nombre.',			#stamp : 'SuarezGonzalo 11/5/2024 17:07',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.611-03:00' ],		#prior : OmReference [ '147' ],		#self : OmReference [ '148' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'casilla:',			#protocol : #setter,			#sourceCode : 'casilla: x\rcasillas add:x.',			#stamp : 'SuarezGonzalo 10/31/2024 19:44',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.611-03:00' ],		#prior : OmReference [ '148' ],		#self : OmReference [ '149' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #estado,			#protocol : #accessing,			#sourceCode : 'estado\r\r\t^ estado',			#stamp : 'mica 11/16/2024 17:43',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.611-03:00' ],		#prior : OmReference [ '149' ],		#self : OmReference [ '150' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'estado:',			#protocol : #setter,			#sourceCode : 'estado:x\r\testado:=x.',			#stamp : 'SuarezGonzalo 11/9/2024 18:21',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.612-03:00' ],		#prior : OmReference [ '150' ],		#self : OmReference [ '151' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'obtenerY:',			#protocol : #accessing,			#sourceCode : 'obtenerY:nroCasilla\r^((casillas at:nroCasilla )at:2)',			#stamp : 'SuarezGonzalo 10/31/2024 21:03',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.612-03:00' ],		#prior : OmReference [ '151' ],		#self : OmReference [ '152' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'cañon',			#protocol : #accessing,			#sourceCode : 'cañon\r\t^cañon.',			#stamp : 'Gonzalo 11/21/2024 10:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.614-03:00' ],		#prior : OmReference [ '152' ],		#self : OmReference [ '153' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'obtenerX:',			#protocol : #accessing,			#sourceCode : 'obtenerX:nroCasilla\r^((casillas at:nroCasilla )at:1)',			#stamp : 'SuarezGonzalo 10/31/2024 21:03',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.614-03:00' ],		#prior : OmReference [ '153' ],		#self : OmReference [ '154' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'agregarCasilla:',			#protocol : #setter,			#sourceCode : 'agregarCasilla: x\rcasillas add:x.',			#stamp : 'SuarezGonzalo 11/9/2024 13:26',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.614-03:00' ],		#prior : OmReference [ '154' ],		#self : OmReference [ '155' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #aumentarRacha,			#protocol : #setter,			#sourceCode : 'aumentarRacha\r racha:=racha +1.\r\t(racha=5)ifTrue:[self agregarPowerUp].',			#stamp : 'Gonzalo 11/21/2024 21:09',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.614-03:00' ],		#prior : OmReference [ '155' ],		#self : OmReference [ '156' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'nombre:',			#protocol : #setter,			#sourceCode : 'nombre:x\rnombre:=x.',			#stamp : 'SuarezGonzalo 10/31/2024 19:43',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.615-03:00' ],		#prior : OmReference [ '156' ],		#self : OmReference [ '157' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'eliminarCasilla:',			#protocol : #accessing,			#sourceCode : 'eliminarCasilla: x\rcasillas remove: x ifAbsent: [ Error signal: \'Error la casilla no pertenece al jugador\' ].',			#stamp : 'SuarezGonzalo 11/9/2024 18:28',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.615-03:00' ],		#prior : OmReference [ '157' ],		#self : OmReference [ '158' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #escudo,			#protocol : #accessing,			#sourceCode : 'escudo\r\t^escudo.',			#stamp : 'Gonzalo 11/21/2024 10:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.615-03:00' ],		#prior : OmReference [ '158' ],		#self : OmReference [ '159' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'crearJugador:x:y:',			#protocol : #initialize,			#sourceCode : 'crearJugador: nombreJugador x:x y:y\rnombre :=nombreJugador .\rcasillas:= OrderedCollection new.\rcasillas add:(Array with:x with:y)',			#stamp : 'SuarezGonzalo 10/31/2024 19:50',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.616-03:00' ],		#prior : OmReference [ '159' ],		#self : OmReference [ '160' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'adversarios:',			#protocol : #setter,			#sourceCode : 'adversarios: lista\radversarios :=lista.',			#stamp : 'SuarezGonzalo 11/5/2024 19:01',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.616-03:00' ],		#prior : OmReference [ '160' ],		#self : OmReference [ '161' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'escudo:',			#protocol : #setter,			#sourceCode : 'escudo:x\r\tescudo:=x.',			#stamp : 'Gonzalo 11/21/2024 10:42',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:51.616-03:00' ],		#prior : OmReference [ '161' ],		#self : OmReference [ '162' ]	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Jugador\r\tinstanceVariableNames: \'nombre casillas adversarios estado escudo cañon racha\'\r\tclassVariableNames: \'\'\r\tpackage: #\'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Jugador,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteJugador,						#isMetaSide : false					},					#name : #nombre,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteJugador,						#isMetaSide : false					},					#name : #casillas,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteJugador,						#isMetaSide : false					},					#name : #adversarios,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteJugador,						#isMetaSide : false					},					#name : #estado,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteJugador,						#isMetaSide : false					},					#name : #escudo,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteJugador,						#isMetaSide : false					},					#name : #'cañon',					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #AnObsoleteJugador,						#isMetaSide : false					},					#name : #racha,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Jugador class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'AnObsoleteJugador class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteJugador,					#isMetaSide : false				},				#parent : @7,				#content : 'Clase Jugador\r\r    Instance Variables\r\tdueño:\t\t<Object>\r\tvecinos:\t\t<Object>\r\r\r    Implementation Points',				#stamp : 'SuarezGonzalo 10/11/2024 17:10'			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.518-03:00' ],		#prior : OmReference [ '162' ],		#self : OmReference [ '163' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Casilla\r\tinstanceVariableNames: \'dueño color tema coordenadasX coordenadasY vecinos categoria pregunta boton\'\r\tclassVariableNames: \'TamañoMatriz\'\r\tpackage: \'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Casilla,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Casilla,						#isMetaSide : false					},					#name : #'dueño',					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Casilla,						#isMetaSide : false					},					#name : #color,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Casilla,						#isMetaSide : false					},					#name : #tema,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Casilla,						#isMetaSide : false					},					#name : #coordenadasX,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Casilla,						#isMetaSide : false					},					#name : #coordenadasY,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Casilla,						#isMetaSide : false					},					#name : #vecinos,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Casilla,						#isMetaSide : false					},					#name : #categoria,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Casilla,						#isMetaSide : false					},					#name : #pregunta,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Casilla,						#isMetaSide : false					},					#name : #boton,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Casilla class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Casilla class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Casilla,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #Casilla,						#isMetaSide : false					},					#name : #'TamañoMatriz',					#parent : @7				}			],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.547-03:00' ],		#prior : OmReference [ '163' ],		#self : OmReference [ '164' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Casilla\r\tinstanceVariableNames: \'dueño color tema coordenadasX coordenadasY vecinos categoria pregunta boton\'\r\tclassVariableNames: \'TamañoMatriz\'\r\tpackage: \'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Casilla,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Casilla,						#isMetaSide : false					},					#name : #'dueño',					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Casilla,						#isMetaSide : false					},					#name : #color,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Casilla,						#isMetaSide : false					},					#name : #tema,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Casilla,						#isMetaSide : false					},					#name : #coordenadasX,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Casilla,						#isMetaSide : false					},					#name : #coordenadasY,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Casilla,						#isMetaSide : false					},					#name : #vecinos,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Casilla,						#isMetaSide : false					},					#name : #categoria,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Casilla,						#isMetaSide : false					},					#name : #pregunta,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Casilla,						#isMetaSide : false					},					#name : #boton,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Casilla class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Casilla class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Casilla,					#isMetaSide : false				},				#parent : @7,				#content : 'Implementation Points',				#stamp : 'SuarezGonzalo 10/11/2024 13:33'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #Casilla,						#isMetaSide : false					},					#name : #'TamañoMatriz',					#parent : @7				}			],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Implementation Points',		#oldStamp : '',		#newStamp : 'SuarezGonzalo 10/11/2024 13:33'	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.551-03:00' ],		#prior : OmReference [ '164' ],		#self : OmReference [ '165' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #colorAzul,			#protocol : #setter,			#sourceCode : 'colorAzul\r\tcolor:=Color blue.',			#stamp : 'Gonzalo 11/21/2024 16:05',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.554-03:00' ],		#prior : OmReference [ '165' ],		#self : OmReference [ '166' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #colorAmarillo,			#protocol : #setter,			#sourceCode : 'colorAmarillo\r\tcolor:=Color yellow.',			#stamp : 'Gonzalo 11/21/2024 16:06',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.557-03:00' ],		#prior : OmReference [ '166' ],		#self : OmReference [ '167' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'tamañoMatrizCasilla:',			#protocol : #setter,			#sourceCode : 'tamañoMatrizCasilla:x\rTamañoMatriz :=x.',			#stamp : 'Gonzalo 11/20/2024 12:30',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.56-03:00' ],		#prior : OmReference [ '167' ],		#self : OmReference [ '168' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #colorRojo,			#protocol : #setter,			#sourceCode : 'colorRojo\r\tcolor:=Color red.',			#stamp : 'Gonzalo 11/21/2024 16:05',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.565-03:00' ],		#prior : OmReference [ '168' ],		#self : OmReference [ '169' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'coordenadasX:Y:',			#protocol : #initialization,			#sourceCode : 'coordenadasX: valorX Y:valorY \rcoordenadasX :=valorX.\rcoordenadasY :=valorY.\r',			#stamp : 'SuarezGonzalo 10/26/2024 17:56',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.567-03:00' ],		#prior : OmReference [ '169' ],		#self : OmReference [ '170' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'dueño:',			#protocol : #initialization,			#sourceCode : 'dueño:valor\r\tdueño:=valor .',			#stamp : 'SuarezGonzalo 10/11/2024 16:53',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.57-03:00' ],		#prior : OmReference [ '170' ],		#self : OmReference [ '171' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize \rcolor:=Color blue.',			#stamp : 'Gonzalo 11/21/2024 16:01',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.573-03:00' ],		#prior : OmReference [ '171' ],		#self : OmReference [ '172' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'coordenadasXY:and:',			#protocol : #initialization,			#sourceCode : 'coordenadasXY: valorX and:valorY \rcoordenadasX :=valorX.\rcoordenadasY :=valorY.\r',			#stamp : 'SuarezGonzalo 10/11/2024 17:01',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.575-03:00' ],		#prior : OmReference [ '172' ],		#self : OmReference [ '173' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'dueñoInicial:',			#protocol : #initialization,			#sourceCode : 'dueñoInicial:valor\rdueño := \'Jugador \',(valor asString).',			#stamp : 'SuarezGonzalo 10/11/2024 16:54',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.581-03:00' ],		#prior : OmReference [ '173' ],		#self : OmReference [ '174' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #encontrarVecinos,			#protocol : #add/remove,			#sourceCode : 'encontrarVecinos\rvecinos:=(OrderedCollection new).\r(coordenadasX >1)ifTrue:[vecinos add:(Array with: (coordenadasX -1) with: coordenadasY )].\r(coordenadasX <TamañoMatriz )ifTrue:[vecinos add:(Array with: (coordenadasX +1) with: coordenadasY )].\r(coordenadasY >1)ifTrue:[vecinos add:(Array with: coordenadasX with: (coordenadasY -1))].\r(coordenadasY <TamañoMatriz )ifTrue:[vecinos add:(Array with: coordenadasX with: (coordenadasY +1))].',			#stamp : 'Gonzalo 11/20/2024 12:26',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.583-03:00' ],		#prior : OmReference [ '174' ],		#self : OmReference [ '175' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #coordenadasY,			#protocol : #accessing,			#sourceCode : 'coordenadasY\r\t^coordenadasY   ',			#stamp : 'SuarezGonzalo 10/11/2024 17:02',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.585-03:00' ],		#prior : OmReference [ '175' ],		#self : OmReference [ '176' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #coordenadasX,			#protocol : #accessing,			#sourceCode : 'coordenadasX\r\t^coordenadasX  ',			#stamp : 'SuarezGonzalo 10/11/2024 17:02',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.588-03:00' ],		#prior : OmReference [ '176' ],		#self : OmReference [ '177' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'pregunta:',			#protocol : #accessing,			#sourceCode : 'pregunta: anObject\r\r\tpregunta := anObject',			#stamp : 'mica 11/10/2024 12:48',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.59-03:00' ],		#prior : OmReference [ '177' ],		#self : OmReference [ '178' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #categoria,			#protocol : #accessing,			#sourceCode : 'categoria\r\r\t^ categoria',			#stamp : 'mica 11/10/2024 12:48',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.592-03:00' ],		#prior : OmReference [ '178' ],		#self : OmReference [ '179' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #pregunta,			#protocol : #accessing,			#sourceCode : 'pregunta\r\r\t^ pregunta',			#stamp : 'mica 11/10/2024 12:48',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.594-03:00' ],		#prior : OmReference [ '179' ],		#self : OmReference [ '180' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'vecinos:',			#protocol : #accessing,			#sourceCode : 'vecinos: anObject\r\r\tvecinos := anObject',			#stamp : 'mica 11/10/2024 18:22',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.597-03:00' ],		#prior : OmReference [ '180' ],		#self : OmReference [ '181' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #asignarCategoria,			#protocol : #accessing,			#sourceCode : 'asignarCategoria\r"1 --Hisoria\t\t2--Deporte\t3--Geografia 4--Arte 5--ciencia"\r|listaCategoria|\r\rlistaCategoria := #(\'historia\' \'deporte\' \'geografia\' \'arte\' \'ciencia\').\r\rcategoria:=  (listaCategoria at: (1 to: listaCategoria size)atRandom)',			#stamp : '',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.598-03:00' ],		#prior : OmReference [ '181' ],		#self : OmReference [ '182' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'categoria:',			#protocol : #accessing,			#sourceCode : 'categoria: anObject\r\r\tcategoria := anObject',			#stamp : 'mica 11/10/2024 12:48',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.6-03:00' ],		#prior : OmReference [ '182' ],		#self : OmReference [ '183' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #boton,			#protocol : #accessing,			#sourceCode : 'boton\r^boton.',			#stamp : 'Gonzalo 11/21/2024 12:18',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.602-03:00' ],		#prior : OmReference [ '183' ],		#self : OmReference [ '184' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #llamarPregunta,			#protocol : #accessing,			#sourceCode : 'llamarPregunta\r\r(categoria = \'historia\' ) ifTrue:[pregunta elegirPregunta: 1].\r(categoria = \'deporte\' ) ifTrue:[pregunta elegirPregunta: 2].\r(categoria = \'geografia\' ) ifTrue:[pregunta elegirPregunta: 3].\r(categoria = \'arte\' ) ifTrue:[pregunta elegirPregunta: 4].\r(categoria = \'ciencia\' ) ifTrue:[pregunta elegirPregunta: 5].\r\rpregunta ponerPregunta.\rpregunta mostrarPregunta: categoria. \r',			#stamp : 'mica 11/14/2024 18:46',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.605-03:00' ],		#prior : OmReference [ '184' ],		#self : OmReference [ '185' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #vecinos,			#protocol : #accessing,			#sourceCode : 'vecinos\r\r\t^ vecinos',			#stamp : 'mica 11/10/2024 18:22',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.606-03:00' ],		#prior : OmReference [ '185' ],		#self : OmReference [ '186' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'dueño',			#protocol : #accessing,			#sourceCode : 'dueño\r^dueño',			#stamp : 'SuarezGonzalo 10/11/2024 16:46',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.608-03:00' ],		#prior : OmReference [ '186' ],		#self : OmReference [ '187' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'tamañoMatrizCasilla',			#protocol : #accessing,			#sourceCode : 'tamañoMatrizCasilla\r^TamañoMatriz.',			#stamp : 'Gonzalo 11/20/2024 12:30',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.61-03:00' ],		#prior : OmReference [ '187' ],		#self : OmReference [ '188' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #'boton:',			#protocol : #accessing,			#sourceCode : 'boton:x\rboton:=x',			#stamp : 'Gonzalo 11/21/2024 12:17',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.614-03:00' ],		#prior : OmReference [ '188' ],		#self : OmReference [ '189' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Casilla,				#isMetaSide : false			},			#name : #color,			#protocol : #accessing,			#sourceCode : 'color\r\t^color.',			#stamp : 'Gonzalo 11/21/2024 16:04',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.616-03:00' ],		#prior : OmReference [ '189' ],		#self : OmReference [ '190' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Duelos\r\tinstanceVariableNames: \'timer bandJugador1 perdedor categoria\'\r\tclassVariableNames: \'\'\r\tpackage: \'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Duelos,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Duelos,						#isMetaSide : false					},					#name : #timer,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Duelos,						#isMetaSide : false					},					#name : #bandJugador1,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Duelos,						#isMetaSide : false					},					#name : #perdedor,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Duelos,						#isMetaSide : false					},					#name : #categoria,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Duelos class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Duelos class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Duelos,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.642-03:00' ],		#prior : OmReference [ '190' ],		#self : OmReference [ '191' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Duelos\r\tinstanceVariableNames: \'timer bandJugador1 perdedor categoria\'\r\tclassVariableNames: \'\'\r\tpackage: \'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Duelos,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Duelos,						#isMetaSide : false					},					#name : #timer,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Duelos,						#isMetaSide : false					},					#name : #bandJugador1,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Duelos,						#isMetaSide : false					},					#name : #perdedor,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Duelos,						#isMetaSide : false					},					#name : #categoria,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Duelos class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Duelos class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Duelos,					#isMetaSide : false				},				#parent : @7,				#content : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages.\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tjugador1:\t\t<Object>\r\tjugador2:\t\t<Object>\r\r\r    Implementation Points',				#stamp : 'mica 11/5/2024 02:40'			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:\r\rFor the Class part:  State a one line summary. For example, "I represent a paragraph of text".\r\rFor the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.\r\rFor the Collaborators Part: State my main collaborators and one line about how I interact with them. \r\rPublic API and Key Messages.\r\r- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tjugador1:\t\t<Object>\r\tjugador2:\t\t<Object>\r\r\r    Implementation Points',		#oldStamp : '',		#newStamp : 'mica 11/5/2024 02:40'	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.645-03:00' ],		#prior : OmReference [ '191' ],		#self : OmReference [ '192' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #'dueloExtra:',			#protocol : #extra,			#sourceCode : 'dueloExtra: powerUp\r|listaCat|\r\rlistaCat := #(\'historia\' \'deporte\' \'geografia\' \'arte\' \'ciencia\').\r\r(powerUp)ifTrue: [ self categoria: (listaCat at: ((1 to: listaCat size)atRandom))]',			#stamp : 'mica 11/23/2024 19:46',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.648-03:00' ],		#prior : OmReference [ '192' ],		#self : OmReference [ '193' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #'pasarTurno:a:',			#protocol : #accessing,			#sourceCode : 'pasarTurno:jugador1 a:jugador2\rbandJugador1\r\t\t\t\t\t\tifTrue: [ \r\t\t\t\t\t\t\t"UIManager default message:\'Es el turno del \',jugador2 ."\r\t\t\t\t\t\t\tTranscript\r\t\t\t\t\t\t\t\tshow: \'1\';\r\t\t\t\t\t\t\t\tcr.\r\t\t\t\t\t\ttimer turno: 2.\r\t\t\t\t\t\tbandJugador1 := false\r\t\t\t\t\t]\r\t\t\t\t\tifFalse: [ \r\t\t\t\t\t\t"UIManager default message:\'Es el turno del \',jugador1 ."\r\t\t\t\t\t\tTranscript\r\t\t\t\t\t\t\tshow: \'2\';\r\t\t\t\t\t\t\tcr.\r\t\t\t\t\t\ttimer turno: 1.\r\t\t\t\t\t\tbandJugador1 := true.\r\t\t\t\t\t]',			#stamp : 'Gonzalo 11/23/2024 21:47',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.65-03:00' ],		#prior : OmReference [ '193' ],		#self : OmReference [ '194' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #'perdedor:',			#protocol : #accessing,			#sourceCode : 'perdedor: anObject\r\r\tperdedor := anObject',			#stamp : 'mica 11/23/2024 01:57',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.653-03:00' ],		#prior : OmReference [ '194' ],		#self : OmReference [ '195' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #timer,			#protocol : #accessing,			#sourceCode : 'timer\r\r\t^ timer',			#stamp : 'mica 11/22/2024 12:19',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.654-03:00' ],		#prior : OmReference [ '195' ],		#self : OmReference [ '196' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #'bandJugador1:',			#protocol : #accessing,			#sourceCode : 'bandJugador1: anObject\r\r\tbandJugador1 := anObject',			#stamp : 'mica 11/22/2024 12:24',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.656-03:00' ],		#prior : OmReference [ '196' ],		#self : OmReference [ '197' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #categoria,			#protocol : #accessing,			#sourceCode : 'categoria\r\r\t^ categoria',			#stamp : 'mica 11/23/2024 19:16',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.658-03:00' ],		#prior : OmReference [ '197' ],		#self : OmReference [ '198' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #'timer:',			#protocol : #accessing,			#sourceCode : 'timer: anObject\r\r\ttimer := anObject',			#stamp : 'mica 11/22/2024 12:19',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.66-03:00' ],		#prior : OmReference [ '198' ],		#self : OmReference [ '199' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #'categoria:',			#protocol : #accessing,			#sourceCode : 'categoria: anObject\r\r\tcategoria := anObject',			#stamp : 'mica 11/23/2024 19:16',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.663-03:00' ],		#prior : OmReference [ '199' ],		#self : OmReference [ '200' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #perdedor,			#protocol : #accessing,			#sourceCode : 'perdedor\r\r\t^ perdedor',			#stamp : 'mica 11/23/2024 01:58',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.665-03:00' ],		#prior : OmReference [ '200' ],		#self : OmReference [ '201' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #bandJugador1,			#protocol : #accessing,			#sourceCode : 'bandJugador1\r\r\t^ bandJugador1',			#stamp : 'mica 11/22/2024 12:24',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.67-03:00' ],		#prior : OmReference [ '201' ],		#self : OmReference [ '202' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #'iniciarDueloEntre:y:categoria:dueloExtra:',			#protocol : #initialization,			#sourceCode : 'iniciarDueloEntre: player1 y: player2 categoria: player2cat dueloExtra: arg1\r\t| pregunta|\r\ttimer := Timer new.\r\ttimer j1name: player1 .\r\ttimer j2name: player2 .\r\tpregunta := Pregunta new.\r\tpregunta j1: player1.\r\tpregunta j2: player2.\r\tpregunta listaPreguntas: OrderedCollection new.\r\tpregunta t: false.\r\tbandJugador1 := true.\r\tpregunta band1: true.\r\tself timer iniciar: 1.\r\tcategoria := player2cat.\r\t\r\t[ self timer fin ] whileFalse: [ \r\t\tself dueloExtra: arg1.\r\t\tpregunta llamarPregunta: categoria.\r\t\tpregunta resultado = 5 ifTrue: [ self pasarPregunta ].\r\t\tpregunta resultado = 1 ifTrue: [ \r\t\t\tself pasarTurno:player1 a:player2.\r\t\t\tpregunta band1: bandJugador1 ].\r\t\tpregunta resultado = 2 ifTrue: [ \r\t\t\tTranscript\r\t\t\t\tshow: \'------->>   INCORRECTO\';\r\t\t\t\tcr.\r\t\t\t[ \r\t\t\tpregunta resultado = 1 | (pregunta resultado = 5)\r\t\t\t| (pregunta resultado = 0) ] whileFalse: [ \r\t\t\t\tself timer timer_1 <= 0 | (self timer timer_2 <= 0) ifTrue: [ \r\t\t\t\t\tpregunta t: true ].\r\t\t\t\tpregunta mostrarPregunta: self categoria ].\r\t\t\tpregunta resultado = 5 ifTrue: [ self pasarPregunta ].\r\t\t\tpregunta resultado = 1 ifTrue: [ \r\t\t\t\tself pasarTurno:player1 a:player2.\r\t\t\t\tpregunta band1: bandJugador1 ] ].\r].\r\rTranscript show: \'PERDEDOR Player \',timer perdedor asString;\r\t\t\t\t\tcr.\r(timer ventana_1) delete.\r(timer ventana_2) delete. \r(timer ventana_3) delete. \r\rself perdedor: timer perdedor',			#stamp : 'a 11/24/2024 15:41',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.673-03:00' ],		#prior : OmReference [ '202' ],		#self : OmReference [ '203' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Duelos,				#isMetaSide : false			},			#name : #pasarPregunta,			#protocol : #initialization,			#sourceCode : 'pasarPregunta\rbandJugador1\r\t\t\t\t\tifTrue: [ \r\t\t\t\t\t\tself timer restarSegundos: 1. \r\t\t\t\t\t\tTranscript\r\t\t\t\t\t\t\tshow: \'1\';\r\t\t\t\t\t\t\tcr.]\r\t\t\t\t\tifFalse: [ \r\t\t\t\t\t\tself timer restarSegundos: 2.\r\t\t\t\t\t\tTranscript\r\t\t\t\t\t\t\tshow: \'2\';\r\t\t\t\t\t\t\tcr.\r\t\t\t\t\t\t\t]',			#stamp : 'mica 11/23/2024 20:03',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.675-03:00' ],		#prior : OmReference [ '203' ],		#self : OmReference [ '204' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Interfaz\r\tinstanceVariableNames: \'accionMouse\'\r\tclassVariableNames: \'\'\r\tpackage: \'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Interfaz,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Interfaz,						#isMetaSide : false					},					#name : #accionMouse,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Interfaz class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Interfaz class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Interfaz,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.701-03:00' ],		#prior : OmReference [ '204' ],		#self : OmReference [ '205' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Interfaz\r\tinstanceVariableNames: \'accionMouse\'\r\tclassVariableNames: \'\'\r\tpackage: \'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Interfaz,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Interfaz,						#isMetaSide : false					},					#name : #accionMouse,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Interfaz class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Interfaz class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Interfaz,					#isMetaSide : false				},				#parent : @7,				#content : '- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\taccionMouse:\t\t<Object>\r\r\r    Implementation Points',				#stamp : 'Gonzalo 11/23/2024 18:13'			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : '- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\taccionMouse:\t\t<Object>\r\r\r    Implementation Points',		#oldStamp : '',		#newStamp : 'Gonzalo 11/23/2024 18:13'	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.706-03:00' ],		#prior : OmReference [ '205' ],		#self : OmReference [ '206' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Interfaz,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize \r| ventana boton |\rventana := Morph new.\rventana extent: 600@600; "Tamaño de la ventana"\r        color: Color white. "Color de fondo"\r\rboton := SimpleButtonMorph new.\rboton label: \'Presióname\'; "Texto del botón"\r       target: [ Transcript show: \'¡Botón presionado!\'; cr ]; "Acción al presionar"\r       actionSelector: #value; "El mensaje enviado al target"\r       position: 00@00; "Posición dentro de la ventana"\r       extent: 100@100. "Tamaño del botón"\r\rventana addMorph: boton. "Añadir el botón a la ventana"\rventana openInWorld. "Abrir la ventana en el escritorio"\r',			#stamp : 'Gonzalo 11/21/2024 12:16',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.708-03:00' ],		#prior : OmReference [ '206' ],		#self : OmReference [ '207' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Jugador\r\tinstanceVariableNames: \'nombre casillas adversarios estado escudo cañon racha\'\r\tclassVariableNames: \'\'\r\tpackage: \'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Jugador,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #nombre,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #casillas,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #adversarios,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #estado,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #escudo,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #'cañon',					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #racha,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Jugador class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Jugador class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Jugador,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.733-03:00' ],		#prior : OmReference [ '207' ],		#self : OmReference [ '208' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Jugador\r\tinstanceVariableNames: \'nombre casillas adversarios estado escudo cañon racha\'\r\tclassVariableNames: \'\'\r\tpackage: \'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Jugador,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #nombre,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #casillas,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #adversarios,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #estado,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #escudo,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #'cañon',					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Jugador,						#isMetaSide : false					},					#name : #racha,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Jugador class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Jugador class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Jugador,					#isMetaSide : false				},				#parent : @7,				#content : 'Clase Jugador\r\r    Instance Variables\r\tdueño:\t\t<Object>\r\tvecinos:\t\t<Object>\r\r\r    Implementation Points',				#stamp : 'SuarezGonzalo 10/11/2024 17:10'			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Clase Jugador\r\r    Instance Variables\r\tdueño:\t\t<Object>\r\tvecinos:\t\t<Object>\r\r\r    Implementation Points',		#oldStamp : '',		#newStamp : 'SuarezGonzalo 10/11/2024 17:10'	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.736-03:00' ],		#prior : OmReference [ '208' ],		#self : OmReference [ '209' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #nombre,			#protocol : #accessing,			#sourceCode : 'nombre\r^nombre.',			#stamp : 'SuarezGonzalo 11/5/2024 17:07',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.738-03:00' ],		#prior : OmReference [ '209' ],		#self : OmReference [ '210' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'obtenerX:',			#protocol : #accessing,			#sourceCode : 'obtenerX:nroCasilla\r^((casillas at:nroCasilla )at:1)',			#stamp : 'SuarezGonzalo 10/31/2024 21:03',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.74-03:00' ],		#prior : OmReference [ '210' ],		#self : OmReference [ '211' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'eliminarCasilla:',			#protocol : #accessing,			#sourceCode : 'eliminarCasilla: x\rcasillas remove: x ifAbsent: [ Error signal: \'Error la casilla no pertenece al jugador\' ].',			#stamp : 'SuarezGonzalo 11/9/2024 18:28',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.742-03:00' ],		#prior : OmReference [ '211' ],		#self : OmReference [ '212' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #adversarios,			#protocol : #accessing,			#sourceCode : 'adversarios\r ^adversarios.',			#stamp : 'SuarezGonzalo 11/9/2024 19:32',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.745-03:00' ],		#prior : OmReference [ '212' ],		#self : OmReference [ '213' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'cañon',			#protocol : #accessing,			#sourceCode : 'cañon\r\t^cañon.',			#stamp : 'Gonzalo 11/21/2024 10:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.748-03:00' ],		#prior : OmReference [ '213' ],		#self : OmReference [ '214' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #casillas,			#protocol : #accessing,			#sourceCode : 'casillas\r^casillas.',			#stamp : 'SuarezGonzalo 10/31/2024 20:40',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.75-03:00' ],		#prior : OmReference [ '214' ],		#self : OmReference [ '215' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'obtenerY:',			#protocol : #accessing,			#sourceCode : 'obtenerY:nroCasilla\r^((casillas at:nroCasilla )at:2)',			#stamp : 'SuarezGonzalo 10/31/2024 21:03',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.752-03:00' ],		#prior : OmReference [ '215' ],		#self : OmReference [ '216' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #estado,			#protocol : #accessing,			#sourceCode : 'estado\r\r\t^ estado',			#stamp : 'mica 11/16/2024 17:43',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.754-03:00' ],		#prior : OmReference [ '216' ],		#self : OmReference [ '217' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #escudo,			#protocol : #accessing,			#sourceCode : 'escudo\r\t^escudo.',			#stamp : 'Gonzalo 11/21/2024 10:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.756-03:00' ],		#prior : OmReference [ '217' ],		#self : OmReference [ '218' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'crearJugador:x:y:',			#protocol : #initialize,			#sourceCode : 'crearJugador: nombreJugador x:x y:y\rnombre :=nombreJugador .\rcasillas:= OrderedCollection new.\rcasillas add:(Array with:x with:y)',			#stamp : 'SuarezGonzalo 10/31/2024 19:50',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.758-03:00' ],		#prior : OmReference [ '218' ],		#self : OmReference [ '219' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize \r\tnombre:=\'Unkown Player\'.\r\tescudo:=false.\r\tcañon :=false.\r\tracha:=0.\r\tcasillas:=OrderedCollection new.',			#stamp : 'Gonzalo 11/21/2024 20:54',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.762-03:00' ],		#prior : OmReference [ '219' ],		#self : OmReference [ '220' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #agregarPowerUp,			#protocol : #setter,			#sourceCode : 'agregarPowerUp\r\t| respuesta |\r\tracha :=0.\r\r\rUIManager default message:\'El \',nombre ,\' obtuvo una racha de 5 victorias\'.\rrespuesta := UIManager default\r    chooseFrom: #(\'Escudo\' \'Cañon\')\r    message: \'Elija PowerUp\',String cr,\'Escudo : proteje todas tus casillas ante una captura\',String cr,\'Cañon: permite atacar a cualquier casilla del tablero\'.\r    \r"Procesar la respuesta"\rrespuesta ifNotNil: [\r    (respuesta = 1)ifTrue: [ \r\t\t\tescudo:=true.\r\t ].\r\t(respuesta = 2)ifTrue: [ \r\t\t\tcañon :=true.\r\t\t\t\r\t ].\r] ifNil: [\r    Transcript show: \'No se seleccionó ninguna opción\'; cr.\r\tself agregarPowerUp.\r].',			#stamp : 'Gonzalo 11/23/2024 21:14',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.764-03:00' ],		#prior : OmReference [ '220' ],		#self : OmReference [ '221' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'cañon:',			#protocol : #setter,			#sourceCode : 'cañon:x\r\tcañon:=x.',			#stamp : 'Gonzalo 11/21/2024 10:41',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.765-03:00' ],		#prior : OmReference [ '221' ],		#self : OmReference [ '222' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'estado:',			#protocol : #setter,			#sourceCode : 'estado:x\r\testado:=x.',			#stamp : 'SuarezGonzalo 11/9/2024 18:21',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.767-03:00' ],		#prior : OmReference [ '222' ],		#self : OmReference [ '223' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'escudo:',			#protocol : #setter,			#sourceCode : 'escudo:x\r\tescudo:=x.',			#stamp : 'Gonzalo 11/21/2024 10:42',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.769-03:00' ],		#prior : OmReference [ '223' ],		#self : OmReference [ '224' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'nombre:',			#protocol : #setter,			#sourceCode : 'nombre:x\rnombre:=x.',			#stamp : 'SuarezGonzalo 10/31/2024 19:43',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.772-03:00' ],		#prior : OmReference [ '224' ],		#self : OmReference [ '225' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'casilla:',			#protocol : #setter,			#sourceCode : 'casilla: x\rcasillas add:x.',			#stamp : 'SuarezGonzalo 10/31/2024 19:44',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.774-03:00' ],		#prior : OmReference [ '225' ],		#self : OmReference [ '226' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #aumentarRacha,			#protocol : #setter,			#sourceCode : 'aumentarRacha\r racha:=racha +1.\r\t(racha=5)ifTrue:[self agregarPowerUp].',			#stamp : 'Gonzalo 11/21/2024 21:09',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.776-03:00' ],		#prior : OmReference [ '226' ],		#self : OmReference [ '227' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'agregarCasilla:',			#protocol : #setter,			#sourceCode : 'agregarCasilla: x\rcasillas add:x.',			#stamp : 'SuarezGonzalo 11/9/2024 13:26',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.778-03:00' ],		#prior : OmReference [ '227' ],		#self : OmReference [ '228' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Jugador,				#isMetaSide : false			},			#name : #'adversarios:',			#protocol : #setter,			#sourceCode : 'adversarios: lista\radversarios :=lista.',			#stamp : 'SuarezGonzalo 11/5/2024 19:01',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.781-03:00' ],		#prior : OmReference [ '228' ],		#self : OmReference [ '229' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Pregunta\r\tinstanceVariableNames: \'opcion preguntaAleatoria respuestas resultado correcta pregunta nroPregunta frase listaPreguntas j1 j2 band1 rtaPlayer t\'\r\tclassVariableNames: \'\'\r\tpackage: \'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Pregunta,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #opcion,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #preguntaAleatoria,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #respuestas,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #resultado,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #correcta,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #pregunta,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #nroPregunta,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #frase,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #listaPreguntas,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #j1,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #j2,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #band1,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #rtaPlayer,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #t,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Pregunta class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Pregunta class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pregunta,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.806-03:00' ],		#prior : OmReference [ '229' ],		#self : OmReference [ '230' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Pregunta\r\tinstanceVariableNames: \'opcion preguntaAleatoria respuestas resultado correcta pregunta nroPregunta frase listaPreguntas j1 j2 band1 rtaPlayer t\'\r\tclassVariableNames: \'\'\r\tpackage: \'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Pregunta,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #opcion,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #preguntaAleatoria,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #respuestas,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #resultado,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #correcta,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #pregunta,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #nroPregunta,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #frase,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #listaPreguntas,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #j1,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #j2,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #band1,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #rtaPlayer,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pregunta,						#isMetaSide : false					},					#name : #t,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Pregunta class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Pregunta class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pregunta,					#isMetaSide : false				},				#parent : @7,				#content : '-Toma la pregunta, opciones y respuesta correcta de una archivo .txt\r-Muestra la pregunta y permite al jugador contestar a traves de opciones.',				#stamp : 'mica 11/4/2024 21:42'			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : '-Toma la pregunta, opciones y respuesta correcta de una archivo .txt\r-Muestra la pregunta y permite al jugador contestar a traves de opciones.',		#oldStamp : '',		#newStamp : 'mica 11/4/2024 21:42'	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.81-03:00' ],		#prior : OmReference [ '230' ],		#self : OmReference [ '231' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #verificarPreguntaRepetidas,			#protocol : #control,			#sourceCode : 'verificarPreguntaRepetidas\r|band| "QUE VERIFIQUE EN UNA INSTANCIA DE DUELO, NO EN TODO EL JUEGO"\r\rband:= true.\r[band] whileTrue:[ \r\tpreguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.\r\tnroPregunta:= (preguntaAleatoria substrings) first.\r\t\r\t(listaPreguntas isEmpty)\r\tifTrue:[\r\t\tlistaPreguntas add: nroPregunta. band:= false]\r\tifFalse: [ \r\t\t(listaPreguntas size = frase size) \r\t\t\t\t\t\tifTrue:[ band:= false]\r\t\t\t\t\t\tifFalse:[ \r\t\t\t\t\t\t\t(listaPreguntas includes: nroPregunta)\r\t\t\t\t\t\t\tifFalse:[\r\t\t\t\t\t\t\t\t\tlistaPreguntas add: nroPregunta. band:= false]\r\t\t\t\t\t\t\tifTrue:[\r\t\t\t\t\t\t\t\tband:= true\r\t\t\t\t\t\t\t]\r\t\t\t\t\t\t] \r\t\t\t\t]\r].',			#stamp : 'mica 11/22/2024 02:06',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.813-03:00' ],		#prior : OmReference [ '231' ],		#self : OmReference [ '232' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'verificarPreguntaRepetidaEn:',			#protocol : #control,			#sourceCode : 'verificarPreguntaRepetidaEn: listaPreguntas\r|band| "QUE VERIFIQUE EN UNA INSTANCIA DE DUELO, NO EN TODO EL JUEGO"\r\rband:= true.\r[band] whileTrue:[ \r\tpreguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.\r\tnroPregunta:= (preguntaAleatoria substrings) first.\r\r\t(listaPreguntas isEmpty)\r\tifTrue:[\r\t\tlistaPreguntas add: nroPregunta. band:= false]\r\tifFalse: [ \r\t\t(listaPreguntas size = frase size) \r\t\t\t\t\t\tifTrue:[ band:= false]\r\t\t\t\t\t\tifFalse:[ \r\t\t\t\t\t\t\t(listaPreguntas includes: nroPregunta)\r\t\t\t\t\t\t\tifFalse:[\r\t\t\t\t\t\t\t\t\tlistaPreguntas add: nroPregunta. band:= false]\r\t\t\t\t\t\t\tifTrue:[\r\t\t\t\t\t\t\t\tband:= true\r\t\t\t\t\t\t\t]\r\t\t\t\t\t\t] \r\t\t\t\t]\r]\r',			#stamp : 'mica 11/21/2024 22:08',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.816-03:00' ],		#prior : OmReference [ '232' ],		#self : OmReference [ '233' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'opcionNumeroALetra:',			#protocol : #converting,			#sourceCode : 'opcionNumeroALetra: a\r"convierte la respuesta del jugador en A, B, C, o D para luego"\r"comparar con la respuesta correcta en mostrarPregunta:y:"\r|listaOpciones |\r\rlistaOpciones := #(\'A\' \'B\' \'C\' \'D\' 0).\r\r^(listaOpciones at: a)\r',			#stamp : 'mica 11/21/2024 02:41',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.818-03:00' ],		#prior : OmReference [ '233' ],		#self : OmReference [ '234' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'preguntaAleatoria:',			#protocol : #accessing,			#sourceCode : 'preguntaAleatoria: anObject\r\r\tpreguntaAleatoria := anObject',			#stamp : 'mica 11/4/2024 14:35',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.819-03:00' ],		#prior : OmReference [ '234' ],		#self : OmReference [ '235' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'correcta:',			#protocol : #accessing,			#sourceCode : 'correcta: anObject\r\r\tcorrecta := anObject',			#stamp : 'mica 11/21/2024 19:52',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.821-03:00' ],		#prior : OmReference [ '235' ],		#self : OmReference [ '236' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #respuestas,			#protocol : #accessing,			#sourceCode : 'respuestas\r\r\t^ respuestas',			#stamp : 'mica 11/4/2024 14:48',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.823-03:00' ],		#prior : OmReference [ '236' ],		#self : OmReference [ '237' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #frase,			#protocol : #accessing,			#sourceCode : 'frase\r\r\t^ frase',			#stamp : 'mica 11/21/2024 20:12',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.824-03:00' ],		#prior : OmReference [ '237' ],		#self : OmReference [ '238' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #t,			#protocol : #accessing,			#sourceCode : 't\r\r\t^ t',			#stamp : 'mica 11/22/2024 14:55',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.825-03:00' ],		#prior : OmReference [ '238' ],		#self : OmReference [ '239' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'j1:',			#protocol : #accessing,			#sourceCode : 'j1: anObject\r\r\tj1 := anObject',			#stamp : 'mica 11/22/2024 13:04',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.827-03:00' ],		#prior : OmReference [ '239' ],		#self : OmReference [ '240' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #nroPregunta,			#protocol : #accessing,			#sourceCode : 'nroPregunta\r\r\t^ nroPregunta',			#stamp : 'mica 11/21/2024 20:02',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.829-03:00' ],		#prior : OmReference [ '240' ],		#self : OmReference [ '241' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'rtaPlayer:',			#protocol : #accessing,			#sourceCode : 'rtaPlayer: anObject\r\r\trtaPlayer := anObject',			#stamp : 'mica 11/22/2024 14:10',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.83-03:00' ],		#prior : OmReference [ '241' ],		#self : OmReference [ '242' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'opcion:',			#protocol : #accessing,			#sourceCode : 'opcion: anObject\r\r\topcion := anObject',			#stamp : 'mica 11/3/2024 19:23',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.832-03:00' ],		#prior : OmReference [ '242' ],		#self : OmReference [ '243' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'t:',			#protocol : #accessing,			#sourceCode : 't: anObject\r\r\tt := anObject',			#stamp : 'mica 11/22/2024 14:55',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.833-03:00' ],		#prior : OmReference [ '243' ],		#self : OmReference [ '244' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #band1,			#protocol : #accessing,			#sourceCode : 'band1\r\r\t^ band1',			#stamp : 'mica 11/22/2024 13:05',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.834-03:00' ],		#prior : OmReference [ '244' ],		#self : OmReference [ '245' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #pregunta,			#protocol : #accessing,			#sourceCode : 'pregunta\r\r\t^ pregunta',			#stamp : 'mica 11/21/2024 19:52',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.836-03:00' ],		#prior : OmReference [ '245' ],		#self : OmReference [ '246' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'llamarPregunta:',			#protocol : #accessing,			#sourceCode : 'llamarPregunta: categoria\r\t\r(categoria = \'deporte\' ) ifTrue:[self elegirPregunta: 1].\r(categoria = \'historia\' ) ifTrue:[self elegirPregunta: 2].\r(categoria = \'arte\' ) ifTrue:[self elegirPregunta: 3].\r(categoria = \'geografia\' ) ifTrue:[self elegirPregunta: 4].\r(categoria = \'ciencia\' ) ifTrue:[self elegirPregunta: 5].\r\rself ponerPregunta: categoria.\rself mostrarPregunta:categoria. ',			#stamp : 'mica 11/21/2024 19:55',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.838-03:00' ],		#prior : OmReference [ '246' ],		#self : OmReference [ '247' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #listaPreguntas,			#protocol : #accessing,			#sourceCode : 'listaPreguntas\r\r\t^ listaPreguntas',			#stamp : 'mica 11/22/2024 00:56',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.84-03:00' ],		#prior : OmReference [ '247' ],		#self : OmReference [ '248' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #rtaPlayer,			#protocol : #accessing,			#sourceCode : 'rtaPlayer\r\r\t^ rtaPlayer',			#stamp : 'mica 11/22/2024 14:10',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.841-03:00' ],		#prior : OmReference [ '248' ],		#self : OmReference [ '249' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #j1,			#protocol : #accessing,			#sourceCode : 'j1\r\r\t^ j1',			#stamp : 'mica 11/22/2024 13:04',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.843-03:00' ],		#prior : OmReference [ '249' ],		#self : OmReference [ '250' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #j2,			#protocol : #accessing,			#sourceCode : 'j2\r\r\t^ j2',			#stamp : 'mica 11/22/2024 13:04',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.844-03:00' ],		#prior : OmReference [ '250' ],		#self : OmReference [ '251' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'nroPregunta:',			#protocol : #accessing,			#sourceCode : 'nroPregunta: anObject\r\r\tnroPregunta := anObject',			#stamp : 'mica 11/21/2024 20:02',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.845-03:00' ],		#prior : OmReference [ '251' ],		#self : OmReference [ '252' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #correcta,			#protocol : #accessing,			#sourceCode : 'correcta\r\r\t^ correcta',			#stamp : 'mica 11/21/2024 19:52',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.847-03:00' ],		#prior : OmReference [ '252' ],		#self : OmReference [ '253' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'resultado:',			#protocol : #accessing,			#sourceCode : 'resultado: anObject\r\r\tresultado := anObject',			#stamp : 'mica 11/5/2024 18:09',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.848-03:00' ],		#prior : OmReference [ '253' ],		#self : OmReference [ '254' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'frase:',			#protocol : #accessing,			#sourceCode : 'frase: anObject\r\r\tfrase := anObject',			#stamp : 'mica 11/21/2024 20:12',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.851-03:00' ],		#prior : OmReference [ '254' ],		#self : OmReference [ '255' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'band1:',			#protocol : #accessing,			#sourceCode : 'band1: anObject\r\r\tband1 := anObject',			#stamp : 'mica 11/22/2024 13:05',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.853-03:00' ],		#prior : OmReference [ '255' ],		#self : OmReference [ '256' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #preguntaAleatoria,			#protocol : #accessing,			#sourceCode : 'preguntaAleatoria\r\r\t^ preguntaAleatoria',			#stamp : 'mica 11/4/2024 14:35',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.854-03:00' ],		#prior : OmReference [ '256' ],		#self : OmReference [ '257' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'listaPreguntas:',			#protocol : #accessing,			#sourceCode : 'listaPreguntas: anObject\r\r\tlistaPreguntas := anObject',			#stamp : 'mica 11/22/2024 00:56',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.856-03:00' ],		#prior : OmReference [ '257' ],		#self : OmReference [ '258' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'pregunta:',			#protocol : #accessing,			#sourceCode : 'pregunta: anObject\r\r\tpregunta := anObject',			#stamp : 'mica 11/21/2024 19:52',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.859-03:00' ],		#prior : OmReference [ '258' ],		#self : OmReference [ '259' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'ponerPregunta:',			#protocol : #accessing,			#sourceCode : 'ponerPregunta:cat\r"toma la linea guardada en el atributo preguntaAleatoria"\r"divide la linea en 3 partes: pregunta, opciones y respuesta correcta"\r"ejemplo de linea .txt:" \r"¿Quién fue el primer presidente de los Estados Unidos?A) Abraham Lincoln%B) George Washington%C) Thomas Jefferson%D) John Adams% B"\r\r|restoPregunta opciones signo ops pregSubstring| \r\rops:= \'\'.\rsigno:=\'?\'.\rpregunta:=\'\'.\rrespuestas := OrderedCollection new.\r\rnroPregunta:= (preguntaAleatoria substrings)first.\rcorrecta := (preguntaAleatoria substrings) last.  "Toma solo el ultimo string de toda la frase. Es la respuesta correcta"\rpregSubstring := (preguntaAleatoria) allButFirst: 3.\rpregunta:= ( pregSubstring copyUpToSubstring: signo). "copia solo la pregunta sin el signo \'?\'" \rrestoPregunta := preguntaAleatoria copyAfterLast: $?. "copia el resto despues de \'?\'"\ropciones:= restoPregunta allButLast. "copia solo las opciones sin la respuesta ni pregunta"\r\ropciones do: [ :i| (i~= $%)ifTrue:[ops:=ops, (i asString)] "recorre la secuencia y acumula los caracteres hasta encontrar %"\r\t\tifFalse:[\r\t\trespuestas add: (ops asString). "cuando llega a un % guarda lo acumulado en el atributo respuestas (definido como OrderedCollection)"\r\t\tops:=\'\'.\r\t\t\t].\r\t\t].\rrespuestas add: \'PASAR\'.\r',			#stamp : 'mica 11/22/2024 09:39',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.861-03:00' ],		#prior : OmReference [ '259' ],		#self : OmReference [ '260' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'j2:',			#protocol : #accessing,			#sourceCode : 'j2: anObject\r\r\tj2 := anObject',			#stamp : 'mica 11/22/2024 13:04',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.863-03:00' ],		#prior : OmReference [ '260' ],		#self : OmReference [ '261' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'respuestas:',			#protocol : #accessing,			#sourceCode : 'respuestas: anObject\r\r\trespuestas := anObject',			#stamp : 'mica 11/4/2024 14:48',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.865-03:00' ],		#prior : OmReference [ '261' ],		#self : OmReference [ '262' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #resultado,			#protocol : #accessing,			#sourceCode : 'resultado\r\r\t^ resultado',			#stamp : 'mica 11/5/2024 18:09',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.867-03:00' ],		#prior : OmReference [ '262' ],		#self : OmReference [ '263' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #opcion,			#protocol : #accessing,			#sourceCode : 'opcion\r\r\t^ opcion',			#stamp : 'mica 11/3/2024 19:18',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.871-03:00' ],		#prior : OmReference [ '263' ],		#self : OmReference [ '264' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'elegirPregunta:',			#protocol : #initialization,			#sourceCode : 'elegirPregunta:categoriaCasilla\r"elige al azar una linea del archivo Pregunta.txt y la guarda en el atributo preguntaAleatoria "\r|archivo|\r\rarchivo := FileSystem disk workingDirectory.\r\r(categoriaCasilla = 1)ifTrue:[frase:= ((archivo / \'DEPORTE.txt\') contents lines)].\r(categoriaCasilla = 2)ifTrue:[frase:= ((archivo / \'HISTORIA.txt\') contents lines)].\r(categoriaCasilla = 3)ifTrue:[frase:= ((archivo / \'ARTE.txt\') contents lines)].\r(categoriaCasilla = 4)ifTrue:[frase:= ((archivo / \'GEOGRAFIA.txt\') contents lines)].\r(categoriaCasilla = 5)ifTrue:[frase:= ((archivo / \'CIENCIA.txt\') contents lines)].\r\rpreguntaAleatoria := (frase at: (1 to: frase size) atRandom) asString.\r\rself verificarPreguntaRepetidas',			#stamp : 'mica 11/22/2024 01:05',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.873-03:00' ],		#prior : OmReference [ '264' ],		#self : OmReference [ '265' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pregunta,				#isMetaSide : false			},			#name : #'mostrarPregunta:',			#protocol : #showing,			#sourceCode : 'mostrarPregunta: cat\r"muestra al jugador la pregunta con sus opciones."\r"guarda la respuesta en rtaPlayer y la compara con el parametro \'correcta\'"\r"segun coincida rtaPlayer y correcta, devuelve un cartelito de CORRECTO o INCORRECTO" \r|rtaNum nom|\r\rt ifTrue: [ self resultado: 0]\rifFalse: [ \r\rband1 ifTrue: \r[nom:= j1]\rifFalse: [ nom:= j2].\r\rTranscript show: \'Realizando pregunta \', (nroPregunta)  asString; cr.\r\t\trtaPlayer := UIManager default \r\t\tchooseFrom: respuestas \r\t\tmessage: nom,String cr,pregunta,\'?\'\r\t\ttitle: \'DUELO\',String cr,cat.\r\rTranscript show: \'rtaPlayer-->\', rtaPlayer asString;cr.\r\rrtaNum := self opcionNumeroALetra: rtaPlayer.\r(correcta = (rtaNum))\r\tifTrue:[self resultado: 1]\r\tifFalse: [\r\t\t(rtaPlayer = 5 )\r\t\tifTrue: [  \r\t\t\tself resultado: 5]\r\t \tifFalse:[self resultado: 2]\r\t].\r]\t\r',			#stamp : 'Gonzalo 11/23/2024 20:35',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.875-03:00' ],		#prior : OmReference [ '265' ],		#self : OmReference [ '266' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Tablero\r\tinstanceVariableNames: \'cantPlayers matriz listaJugadores tamañoMatriz ventana atacante defensor lista ventana_4 label_4\'\r\tclassVariableNames: \'\'\r\tpackage: \'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Tablero,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tablero,						#isMetaSide : false					},					#name : #cantPlayers,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tablero,						#isMetaSide : false					},					#name : #matriz,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tablero,						#isMetaSide : false					},					#name : #listaJugadores,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tablero,						#isMetaSide : false					},					#name : #'tamañoMatriz',					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tablero,						#isMetaSide : false					},					#name : #ventana,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tablero,						#isMetaSide : false					},					#name : #atacante,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tablero,						#isMetaSide : false					},					#name : #defensor,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tablero,						#isMetaSide : false					},					#name : #lista,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tablero,						#isMetaSide : false					},					#name : #ventana_4,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tablero,						#isMetaSide : false					},					#name : #label_4,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Tablero class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Tablero class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Tablero,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.903-03:00' ],		#prior : OmReference [ '266' ],		#self : OmReference [ '267' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Tablero\r\tinstanceVariableNames: \'cantPlayers matriz listaJugadores tamañoMatriz ventana atacante defensor lista ventana_4 label_4\'\r\tclassVariableNames: \'\'\r\tpackage: \'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Tablero,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tablero,						#isMetaSide : false					},					#name : #cantPlayers,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tablero,						#isMetaSide : false					},					#name : #matriz,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tablero,						#isMetaSide : false					},					#name : #listaJugadores,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tablero,						#isMetaSide : false					},					#name : #'tamañoMatriz',					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tablero,						#isMetaSide : false					},					#name : #ventana,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tablero,						#isMetaSide : false					},					#name : #atacante,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tablero,						#isMetaSide : false					},					#name : #defensor,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tablero,						#isMetaSide : false					},					#name : #lista,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tablero,						#isMetaSide : false					},					#name : #ventana_4,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Tablero,						#isMetaSide : false					},					#name : #label_4,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Tablero class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Tablero class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Tablero,					#isMetaSide : false				},				#parent : @7,				#content : 'Prueba para desarrollar una matriz con los casilleros\r\r    Instance Variables\r\tcantPlayers:\t\t<Object>\r\r\r    Implementation Points',				#stamp : 'SuarezGonzalo 10/11/2024 13:25'			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Prueba para desarrollar una matriz con los casilleros\r\r    Instance Variables\r\tcantPlayers:\t\t<Object>\r\r\r    Implementation Points',		#oldStamp : '',		#newStamp : 'SuarezGonzalo 10/11/2024 13:25'	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.907-03:00' ],		#prior : OmReference [ '267' ],		#self : OmReference [ '268' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'captura:a:',			#protocol : #'changing state',			#sourceCode : 'captura: casilla1 a: casilla2\r| nombreCapturado nombreCapturador xCapturado yCapturado nroCapturador nroCapturado|\rxCapturado := casilla2 coordenadasX.\ryCapturado := casilla2 coordenadasY.\rnombreCapturado := casilla2 dueño.\rnombreCapturador := casilla1 dueño.\rnroCapturado:=((casilla2 dueño)findTokens:\' \') last asInteger.\r((listaJugadores at:nroCapturado)escudo = false)ifTrue:[\rcasilla2 dueño: casilla1 dueño.\rself transferirDe: nombreCapturado A: nombreCapturador laCeldaX: xCapturado Y: yCapturado.\r\rxCapturado > 1 ifTrue: [\r    ((self casillaX: xCapturado - 1 Y: yCapturado) dueño = nombreCapturado)\r        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado - 1 Y: yCapturado)]\r].\rxCapturado < tamañoMatriz  ifTrue: [\r    ((self casillaX: xCapturado + 1 Y: yCapturado) dueño = nombreCapturado)\r        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado + 1 Y: yCapturado)]\r].\ryCapturado > 1 ifTrue: [\r    ((self casillaX: xCapturado Y: yCapturado - 1) dueño = nombreCapturado)\r        ifTrue: [self captura: casilla1 a: (self casillaX: xCapturado Y: yCapturado - 1)]\r].\ryCapturado < tamañoMatriz  ifTrue: [\r    ((self casillaX: xCapturado Y: yCapturado + 1) dueño = nombreCapturado)\r        ifTrue: [self captura: casilla2 a: (self casillaX: xCapturado Y: yCapturado + 1)]\r].\rnroCapturador := ((casilla1 dueño)findTokens:\' \') last asInteger.\r(listaJugadores at:nroCapturador)aumentarRacha.\r]ifFalse:[\rUIManager default message:((nombreCapturado),\' uso su escudo, sus celdas fueron protegidas\').\r(listaJugadores at: nroCapturado )escudo: false.\r].',			#stamp : 'Gonzalo 11/21/2024 22:09',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.909-03:00' ],		#prior : OmReference [ '268' ],		#self : OmReference [ '269' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'eliminarJugador:',			#protocol : #'changing state',			#sourceCode : 'eliminarJugador: objetoJugador\r objetoJugador estado: \'ELIMINADO\'.\r\tcantPlayers :=cantPlayers -1.\r',			#stamp : 'SuarezGonzalo 11/9/2024 19:43',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.914-03:00' ],		#prior : OmReference [ '269' ],		#self : OmReference [ '270' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize\r \t|cont|\r\tTranscript clear.\r\tcont:=0.\r\ttamañoMatriz:= self tamañoDeLaMatriz.\r\tlistaJugadores:= Array new:(tamañoMatriz * tamañoMatriz).\r\t\r\tmatriz := Array new: tamañoMatriz .\r\tcantPlayers:=tamañoMatriz *tamañoMatriz .\r\t1 to: tamañoMatriz  do:[:y| matriz at:y put:( Array new:tamañoMatriz)].\r\t1 to: tamañoMatriz  do:[:y| \r\t\t1 to: tamañoMatriz  do:[:x| \r\t\t\t(matriz at:y) at:x put:(Casilla new).\r\t\t\t(((matriz at:y)at:x))tamañoMatrizCasilla: tamañoMatriz.\r\t\t\tcont:=cont+1.\r\t\t\t((matriz at:y) at:x) dueñoInicial: (cont).\r\t\t\t((matriz at:y) at:x) asignarCategoria.\r\t\t\t(listaJugadores) at:cont put:(Jugador new).\r\t\t\t(listaJugadores at:cont)nombre:(((matriz at:y) at:x)dueño).\r\t\t\t(listaJugadores at:cont)agregarCasilla:(Array with:x with:y).\r\t\t\t((matriz at:y) at:x) coordenadasX: x Y: y.\r\t\t\t((matriz at:y) at:x) encontrarVecinos.\r\t\t\t\r\t\t\t].\r\t\t].\r\tTranscript show: \'Se creo el tablero de forma exitosa\';cr.\r\r',			#stamp : 'a 11/24/2024 16:35',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.917-03:00' ],		#prior : OmReference [ '270' ],		#self : OmReference [ '271' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'tamañoDeLaMatriz',			#protocol : #initialization,			#sourceCode : 'tamañoDeLaMatriz\r|entrada numero|\r\tentrada :=(UIManager default request:\'Ingrese el tamaño de la matriz\')asInteger.\r\tentrada ifNotNil:[ \r\t\t(entrada isInteger)ifTrue: [  \r\t\tnumero:=entrada asInteger.]]\r\t ifNil: [ \r\t\tself error: \'Debe ingresar un numero valido\'.\r\t\t ].\r\t^numero.',			#stamp : 'Gonzalo 11/20/2024 20:32',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.92-03:00' ],		#prior : OmReference [ '271' ],		#self : OmReference [ '272' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #crearVentanaJuego,			#protocol : #initialization,			#sourceCode : 'crearVentanaJuego\r\t| screenWidth screenHeight |\r\r    "Obtener dimensiones de la pantalla"\r     screenWidth := Display width.\r     screenHeight := Display height.\r    "Ventana 1: Izquierda"\r    ventana_4:= Morph  new.\r    ventana_4 color: Color green.\r    ventana_4 := (ImageReadWriter formFromFileNamed: \'picturesParaPharo/theFloor.png\') asMorph.\r    ventana_4 extent: 200@100.\r    ventana_4 position: (screenWidth - 950)@1. "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"\r\r\r    label_4 := TextMorph new.\r    "mensaje de la ventana al iniciar"\r    label_4 contents: \'\'.\r    label_4 color: Color green.\r    label_4 position: (ventana_4 bounds origin) + (170@100).  "Posiciona el label dentro de la ventana 1"\r    label_4 font: (LogicalFont familyName: \'Arial\' pointSize: 50). "Cambia \'Arial\' y 20 según tus necesidades"\r\r        \r    ventana_4 addMorph: label_4.\r    ventana_4 openInWorld.\r',			#stamp : 'TiagoBernal 11/24/2024 16:55',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.927-03:00' ],		#prior : OmReference [ '272' ],		#self : OmReference [ '273' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #iniciarJuego,			#protocol : #initialization,			#sourceCode : 'iniciarJuego\r|nroAtacante listaAdversarios respuesta duelo contadorDuelos | \rcontadorDuelos :=0.\r\tself crearVentanaJuego .\r\tduelo :=Duelos new.\r\tself interfazCrearVentana.\r\tTranscript show: \'----INICIA EL JUEGO----\';cr.\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t\r\t\r\t\r\t\r\t[ cantPlayers > 1 ]whileTrue: [  \r\r\tTranscript show:\'Cantidad de Jugadores: \';show:cantPlayers;cr.\r\tTranscript show: \'Jugador: \';show:(listaJugadores at:nroAtacante)nombre;show:\' Selecciona a cual de las siguientes casillas atacar:\';cr.\r\t(contadorDuelos =10)ifTrue:[\r\t\tnroAtacante:=(((self masCasillas at:1)nombre)findTokens:\' \') last asInteger.\r\t\tatacante :=listaJugadores at:nroAtacante.\r\t\tdefensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).\r\t\tTranscript show: \'----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----\';cr.\r\t\tself mensajeDueloExtra:(atacante nombre)y:(defensor dueño).\r\t\tduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.\r\t\tcontadorDuelos :=0.\r\t\t]\r\tifFalse:[\r\t\t\r\tself mostrarAdversariosde: nroAtacante.\r\tlistaAdversarios:=(listaJugadores at:nroAtacante)adversarios.\r\tTranscript show: \'---COLUMNA---FILA---CATEGORIA---------JUGADOR---\';cr.\r\t1 to:(listaAdversarios size)do:[:i|\r\t\tTranscript show: \'      \';show:((listaAdversarios at:i)at:1);show:\'      \'.\r\t\tTranscript show: \' \';show:((listaAdversarios at:i)at:2);show:\' \'.\r\t\tTranscript show: \'     \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:\' \'.\r\t\tTranscript show: \'   \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:\' \';cr.\r\t\t].\r\tself coloresAtacante: (listaJugadores at:nroAtacante)casillas.\r\tself coloresAdversarios: listaAdversarios.\r\tself interfazCrearVentana.\r\tself cargarBotones."INTERFAZ----------------------------------------------------------------"  \r\tself coloresAzul.\r\trespuesta  := UIManager default \r    chooseFrom: listaAdversarios\r    message: \'Elige un contrincante\'\r    title: \'DUELO\'.\r  ventana delete.\r\rdefensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).\r\r\r\rduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. \rcontadorDuelos :=contadorDuelos +1.\r].\r\r(duelo perdedor = 1)ifTrue:[\r\tself captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).\r\tnroAtacante :=((defensor dueño)findTokens:\' \') last asInteger.\r\tatacante := listaJugadores at:nroAtacante\r\t]ifFalse: [ \r\tself captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).\r\t ].\r(contadorDuelos  < 10)ifTrue:[\rrespuesta  := UIManager default \r    chooseFrom: #(\'Seguir Atacando\' \'Pasar Turno\')\r    message: \'¿Desea seguir atacando?\'\r    title: \'DUELO\'.\r\r(respuesta = 2)ifTrue:[\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t].\r]ifFalse:[\rnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r].\r].\r\r\t \r\t Transcript show: \'GAME OVER\'; cr.\r\t Transcript show: \'El ganador es el jugador:\';show:(atacante nombre); cr.',			#stamp : 'a 11/24/2024 16:35',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.929-03:00' ],		#prior : OmReference [ '273' ],		#self : OmReference [ '274' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #lista,			#protocol : #accessing,			#sourceCode : 'lista\r\r\t^ lista',			#stamp : 'mica 11/23/2024 02:16',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.932-03:00' ],		#prior : OmReference [ '274' ],		#self : OmReference [ '275' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #matriz,			#protocol : #accessing,			#sourceCode : 'matriz\r\t^matriz.',			#stamp : 'SuarezGonzalo 10/11/2024 16:50',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.934-03:00' ],		#prior : OmReference [ '275' ],		#self : OmReference [ '276' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #listaJugadores,			#protocol : #accessing,			#sourceCode : 'listaJugadores\r\t^listaJugadores',			#stamp : 'SuarezGonzalo 10/11/2024 17:24',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.936-03:00' ],		#prior : OmReference [ '276' ],		#self : OmReference [ '277' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'defensor:',			#protocol : #accessing,			#sourceCode : 'defensor: anObject\r\r\tdefensor := anObject',			#stamp : 'mica 11/23/2024 01:53',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.937-03:00' ],		#prior : OmReference [ '277' ],		#self : OmReference [ '278' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'lista:',			#protocol : #accessing,			#sourceCode : 'lista: anObject\r\r\tlista := anObject',			#stamp : 'mica 11/23/2024 02:16',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.938-03:00' ],		#prior : OmReference [ '278' ],		#self : OmReference [ '279' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #defensor,			#protocol : #accessing,			#sourceCode : 'defensor\r\r\t^ defensor',			#stamp : 'mica 11/23/2024 01:53',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.943-03:00' ],		#prior : OmReference [ '279' ],		#self : OmReference [ '280' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'casillaX:Y:',			#protocol : #accessing,			#sourceCode : 'casillaX:x Y:y\r^((matriz at:y)at:x)',			#stamp : 'SuarezGonzalo 11/5/2024 18:57',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.945-03:00' ],		#prior : OmReference [ '280' ],		#self : OmReference [ '281' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'transferirDe:A:laCeldaX:Y:',			#protocol : #search,			#sourceCode : 'transferirDe:nombreJugador2 A:nombreJugador1 laCeldaX: x Y: y\r|coordenadas nroJugador2 nroJugador1 |\rTranscript show: \'se ejecuto la transeferencia de celdas\';cr.\rcoordenadas:=(Array with: x with:y ).\rnroJugador2  := (nombreJugador2  findTokens: \' \') last asInteger.\rnroJugador1  := (nombreJugador1  findTokens: \' \') last asInteger.\r\r(listaJugadores at:nroJugador2)eliminarCasilla: (Array with:x with: y).\r\r(listaJugadores at:nroJugador1)agregarCasilla: coordenadas.\r(((listaJugadores at:nroJugador2)casillas )isEmpty)ifTrue: [ self eliminarJugador: (listaJugadores at:nroJugador2) ].\r',			#stamp : 'SuarezGonzalo 11/9/2024 18:06',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.948-03:00' ],		#prior : OmReference [ '281' ],		#self : OmReference [ '282' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #buscarJugador,			#protocol : #search,			#sourceCode : 'buscarJugador\r\r\t| indice colection valor |\r\tcolection := (1 to: tamañoMatriz * tamañoMatriz) asOrderedCollection.\r\t[ \r\tindice := colection at: (Random new nextInteger: colection size).\r\tvalor := (listaJugadores at: indice) estado.\r\tvalor = \'ELIMINADO\' ] whileTrue: [  ].\r\r\t^ indice',			#stamp : 'Gonzalo 11/20/2024 21:20',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.951-03:00' ],		#prior : OmReference [ '282' ],		#self : OmReference [ '283' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #masCasillas,			#protocol : #search,			#sourceCode : 'masCasillas\r|mayores primero segundo|\rprimero:=0.\rsegundo:=0.\rmayores:= Array new:2.\r1 to:(tamañoMatriz*tamañoMatriz)do:[:i|\r\t(primero < ((listaJugadores at:i)casillas )size)ifTrue:[\r\t\tprimero:=((listaJugadores at:i)casillas )size.\r\t\tmayores at:1 put: ((listaJugadores at:i))\r\t\t]ifFalse:[\r\t\t(segundo < ((listaJugadores at:i)casillas )size)ifTrue:[\r\t\tsegundo :=((listaJugadores at:i)casillas )size.\r\t\tmayores at:2 put: ((listaJugadores at:i))\r\t\t]\r\t\r\t\t].\r].\r^(mayores).',			#stamp : 'Gonzalo 11/23/2024 18:58',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.956-03:00' ],		#prior : OmReference [ '283' ],		#self : OmReference [ '284' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'mostrarAdversariosde:',			#protocol : #search,			#sourceCode : 'mostrarAdversariosde: nroJugador\r\r\t| listaAdversarios cantCasillas x y |\r\t\r\tlistaAdversarios  := OrderedCollection new.\r\tcantCasillas := ((listaJugadores at: nroJugador) casillas )size.\r\t\r\t((listaJugadores at:nroJugador)cañon = false)ifTrue:[\r\t1to:(cantCasillas)do:[:i|\r\t\t\r\t\tx:=(((listaJugadores at:nroJugador)casillas)at:i)at:1.\r\t\ty:=(((listaJugadores at:nroJugador)casillas) at:i)at:2.\r\t\t\r\t\t(x>1)ifTrue:[\r\t\t\t(((self casillaX:(x-1) Y:y)dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[\r\t\t\t\t(listaAdversarios includes:(Array with: (x-1) with:(y)))ifFalse:[\r\t\t\t\tlistaAdversarios  add:(Array with: (x-1) with:(y)).\r\t\t\t\t].\r\t\t\t\t].\r\t\t\t\t].\r\t\t\t\r\t\t(x<tamañoMatriz )ifTrue:[\r\t\t\t\r\t\t\r\t\t\t(((self casillaX:(x+1) Y:(y))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[\r\t\t\t\t(listaAdversarios includes:(Array with: (x+1) with:(y)))ifFalse:[\r\t\t\t\tlistaAdversarios  add:(Array with: (x+1) with:(y)).].\r\t\t\t\t].\r\t\t\t\t].\r\t\t\t\r\t\t(y>1)ifTrue:[\r\t\t\t\r\t\t\t(((self casillaX:x Y:(y-1))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[\r\t\t\t\t(listaAdversarios includes:(Array with: (x) with:(y-1)))ifFalse:[\r\t\t\t\tlistaAdversarios  add:(Array with: (x) with:(y-1)).\r\t\t\t\t].\r\t\t\t\t].\r\t\t\t].\r\t\t(y<tamañoMatriz )ifTrue:[\r\t\t\t(((self casillaX:x Y:(y+1))dueño )~=(((self casillaX:x Y:(y))dueño )))ifTrue:[\r\t\t\t\t(listaAdversarios includes:(Array with: (x) with:(y+1)))ifFalse:[\r\t\t\t\tlistaAdversarios  add:(Array with: (x) with:(y+1)).\r\t\t\t\t].\r\t\t\t].\r ].\r].\r\r]ifFalse: [ \r\t(listaJugadores at:nroJugador)cañon:false.\r \t1 to: tamañoMatriz do:[:i|\r\t\t1 to: tamañoMatriz do:[:j|\r\t\t\t(((self casillaX:i Y:(j))dueño )~=(listaJugadores at:nroJugador)nombre)ifTrue:[\r\t\t\t\tlistaAdversarios  add:(Array with: (i) with:(j)).\r\t\t\t\t\r\t\t].\r\t\t].\r].\r].\r(listaJugadores at:(nroJugador))adversarios: listaAdversarios .\r^listaAdversarios.',			#stamp : 'Gonzalo 11/21/2024 20:25',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.958-03:00' ],		#prior : OmReference [ '284' ],		#self : OmReference [ '285' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'coloresAdversarios:',			#protocol : #interface,			#sourceCode : 'coloresAdversarios:listaAdversarios\r1 to: (listaAdversarios size)do:[:i|\r\t(self casillaX: ((listaAdversarios at:i)at:1) Y: ((listaAdversarios at:i)at:2))colorRojo \r\t].',			#stamp : 'Gonzalo 11/21/2024 16:14',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.959-03:00' ],		#prior : OmReference [ '285' ],		#self : OmReference [ '286' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #label_4,			#protocol : #interface,			#sourceCode : 'label_4\r\t^label_4 .',			#stamp : 'a 11/24/2024 16:28',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.962-03:00' ],		#prior : OmReference [ '286' ],		#self : OmReference [ '287' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #ventana_4,			#protocol : #interface,			#sourceCode : 'ventana_4\r\t^ventana_4.',			#stamp : 'a 11/24/2024 16:28',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.964-03:00' ],		#prior : OmReference [ '287' ],		#self : OmReference [ '288' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #interfazCrearVentana,			#protocol : #interface,			#sourceCode : 'interfazCrearVentana\r|boton|\r\t\r\tventana := Morph new.\r\tventana extent: (100*(tamañoMatriz) )@(100*(tamañoMatriz) ); "Tamaño de la ventana"\r        color: Color white. "Color de fondo"\rboton:=SimpleButtonMorph new.\rboton label:\'X\';\r\tactionSelector: #delete;\r\ttarget:ventana;\r\tposition:(tamañoMatriz *100)@(tamañoMatriz *100);\r\textent: 10@10.\r\tventana addMorph:boton.\r\tventana openInWorld. "Abrir la ventana en el escritorio"',			#stamp : '',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.967-03:00' ],		#prior : OmReference [ '288' ],		#self : OmReference [ '289' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'mensajeDueloExtra:y:',			#protocol : #interface,			#sourceCode : 'mensajeDueloExtra:jugadorA y:jugadorB\r\r\r\rUIManager default message:\'Duelo entre titanes \',String cr,jugadorA,\' se enfrentara al \',jugadorB.',			#stamp : 'Gonzalo 11/23/2024 20:49',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.973-03:00' ],		#prior : OmReference [ '289' ],		#self : OmReference [ '290' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #cargarBotones,			#protocol : #interface,			#sourceCode : 'cargarBotones\r|texto |\r\rtexto := TextMorph new.\r1 to: tamañoMatriz  do:[:i|\r\t1 to: tamañoMatriz do:[:j|\r\t\t(self casillaX: i Y:j)boton:SimpleButtonMorph new.\r\t\t(self casillaX: i Y:j)boton label:\'\';  "Texto del botón"\r      \t\ttarget: [ [ defensor:= self casillaX: i Y:j.self captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: (defensor coordenadasX ) Y: (defensor coordenadasY))\r ]]; "Acción al presionar"\r\t\t\tcolor: ((self casillaX: i Y:j )color);\r    \t  \tactionSelector: #value; "El mensaje enviado al target"\r      \t\tposition: (100*(i-1))@(100*(j-1)); "Posición dentro de la ventana"\r      \t\textent: 100@100. "Tamaño del botón"\r\t\ttexto contents: ((self casillaX: i Y:j)dueño), String crlf, ((self casillaX: i Y:j)categoria) ,String crlf, \r    \'Posición: (\', i asString, \',\', j asString, \')\'; "Texto en dos líneas"\r       \tcolor: Color black;\r       \tfont: (TextStyle default fontAt: 12);\r       \tcenter: (self casillaX: i Y:j)boton bounds center. "Centrar el texto dentro del botón"\r\t\t(self casillaX: i Y:j )boton addMorph: texto. "Añadir el texto al botón"\r\t\tventana addMorph:(self casillaX: i Y:j)boton . "Añadir el botón a la ventana"\r\t\ttexto:=TextMorph new.\r\t\t].\r\t]. \r',			#stamp : 'Gonzalo 11/21/2024 19:40',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.975-03:00' ],		#prior : OmReference [ '290' ],		#self : OmReference [ '291' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #'coloresAtacante:',			#protocol : #interface,			#sourceCode : 'coloresAtacante:listaAtacante\r1 to: (listaAtacante  size)do:[:i|\r\t(self casillaX: ((listaAtacante  at:i)at:1) Y: ((listaAtacante at:i)at:2))colorAmarillo \r\t].',			#stamp : 'Gonzalo 11/21/2024 16:19',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.979-03:00' ],		#prior : OmReference [ '291' ],		#self : OmReference [ '292' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #coloresAzul,			#protocol : #interface,			#sourceCode : 'coloresAzul\r\t1 to:tamañoMatriz  do:[:i|\r\t\t1 to:tamañoMatriz  do:[:j|\r\t\t (self casillaX: i Y:j)colorAzul. \r\t\t]. \r\t\t] ',			#stamp : 'Gonzalo 11/21/2024 16:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:21:59.981-03:00' ],		#prior : OmReference [ '292' ],		#self : OmReference [ '293' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Timer\r\tinstanceVariableNames: \'timer_1 timer_2 ventana_1 ventana_2 ventana_3 label_1 label_2 label_3 proceso turno perdedor fin j1name j2name\'\r\tclassVariableNames: \'\'\r\tpackage: \'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Timer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #timer_1,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #timer_2,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #ventana_1,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #ventana_2,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #ventana_3,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #label_1,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #label_2,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #label_3,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #proceso,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #turno,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #perdedor,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #fin,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #j1name,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #j2name,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Timer class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Timer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Timer,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.05-03:00' ],		#prior : OmReference [ '293' ],		#self : OmReference [ '294' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'Object subclass: #Timer\r\tinstanceVariableNames: \'timer_1 timer_2 ventana_1 ventana_2 ventana_3 label_1 label_2 label_3 proceso turno perdedor fin j1name j2name\'\r\tclassVariableNames: \'\'\r\tpackage: \'Paradigmas 2024\'',				#superclassName : 'Object',				#traitCompositionSource : '{}'			},			#name : #Timer,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #timer_1,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #timer_2,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #ventana_1,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #ventana_2,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #ventana_3,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #label_1,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #label_2,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #label_3,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #proceso,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #turno,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #perdedor,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #fin,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #j1name,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Timer,						#isMetaSide : false					},					#name : #j2name,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'Timer class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'Timer class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Timer,					#isMetaSide : false				},				#parent : @7,				#content : '- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tfin:\t\t<Object>\r\tj1name:\t\t<Object>\r\tj2name:\t\t<Object>\r\tlabel_1:\t\t<Object>\r\tlabel_2:\t\t<Object>\r\tperdedor:\t\t<Object>\r\tproceso:\t\t<Object>\r\ttimer_1:\t\t<Object>\r\ttimer_2:\t\t<Object>\r\tturno:\t\t<Object>\r\tventana_1:\t\t<Object>\r\tventana_2:\t\t<Object>\r\r\r    Implementation Points',				#stamp : 'Gonzalo 11/23/2024 18:13'			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : '- message one   \r- message two \r- (for bonus points) how to create instances.\r\r   One simple example is simply gorgeous.\r \rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tfin:\t\t<Object>\r\tj1name:\t\t<Object>\r\tj2name:\t\t<Object>\r\tlabel_1:\t\t<Object>\r\tlabel_2:\t\t<Object>\r\tperdedor:\t\t<Object>\r\tproceso:\t\t<Object>\r\ttimer_1:\t\t<Object>\r\ttimer_2:\t\t<Object>\r\tturno:\t\t<Object>\r\tventana_1:\t\t<Object>\r\tventana_2:\t\t<Object>\r\r\r    Implementation Points',		#oldStamp : '',		#newStamp : 'Gonzalo 11/23/2024 18:13'	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.052-03:00' ],		#prior : OmReference [ '294' ],		#self : OmReference [ '295' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'ventana_1:',			#protocol : #accessing,			#sourceCode : 'ventana_1: anObject\r\r\tventana_1 := anObject',			#stamp : 'mica 11/21/2024 18:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.054-03:00' ],		#prior : OmReference [ '295' ],		#self : OmReference [ '296' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #label_2,			#protocol : #accessing,			#sourceCode : 'label_2\r\r\t^ label_2',			#stamp : 'mica 11/21/2024 18:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.056-03:00' ],		#prior : OmReference [ '296' ],		#self : OmReference [ '297' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #ventana_3,			#protocol : #accessing,			#sourceCode : 'ventana_3\r\r\t^ ventana_3',			#stamp : 'a 11/24/2024 15:41',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.059-03:00' ],		#prior : OmReference [ '297' ],		#self : OmReference [ '298' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'label_3:',			#protocol : #accessing,			#sourceCode : 'label_3: anObject\r\r\tlabel_3 := anObject',			#stamp : 'a 11/24/2024 15:41',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.063-03:00' ],		#prior : OmReference [ '298' ],		#self : OmReference [ '299' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'j2name:',			#protocol : #accessing,			#sourceCode : 'j2name: anObject\r\r\tj2name := anObject',			#stamp : 'mica 11/23/2024 01:35',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.065-03:00' ],		#prior : OmReference [ '299' ],		#self : OmReference [ '300' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'fin:',			#protocol : #accessing,			#sourceCode : 'fin: anObject\r\r\tfin := anObject',			#stamp : 'mica 11/21/2024 02:46',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.067-03:00' ],		#prior : OmReference [ '300' ],		#self : OmReference [ '301' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'label_1:',			#protocol : #accessing,			#sourceCode : 'label_1: anObject\r\r\tlabel_1 := anObject',			#stamp : 'mica 11/21/2024 18:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.069-03:00' ],		#prior : OmReference [ '301' ],		#self : OmReference [ '302' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #perdedor,			#protocol : #accessing,			#sourceCode : 'perdedor\r\r\t^ perdedor',			#stamp : 'mica 11/21/2024 02:12',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.072-03:00' ],		#prior : OmReference [ '302' ],		#self : OmReference [ '303' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #ventana_1,			#protocol : #accessing,			#sourceCode : 'ventana_1\r\r\t^ ventana_1',			#stamp : 'mica 11/21/2024 18:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.074-03:00' ],		#prior : OmReference [ '303' ],		#self : OmReference [ '304' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #j2name,			#protocol : #accessing,			#sourceCode : 'j2name\r\r\t^ j2name',			#stamp : 'mica 11/23/2024 01:35',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.076-03:00' ],		#prior : OmReference [ '304' ],		#self : OmReference [ '305' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'label_2:',			#protocol : #accessing,			#sourceCode : 'label_2: anObject\r\r\tlabel_2 := anObject',			#stamp : 'mica 11/21/2024 18:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.078-03:00' ],		#prior : OmReference [ '305' ],		#self : OmReference [ '306' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #timer_1,			#protocol : #accessing,			#sourceCode : 'timer_1\r\r\t^ timer_1',			#stamp : 'mica 11/22/2024 14:31',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.08-03:00' ],		#prior : OmReference [ '306' ],		#self : OmReference [ '307' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'ventana_3:',			#protocol : #accessing,			#sourceCode : 'ventana_3: anObject\r\r\tventana_3 := anObject',			#stamp : 'a 11/24/2024 15:41',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.082-03:00' ],		#prior : OmReference [ '307' ],		#self : OmReference [ '308' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #label_1,			#protocol : #accessing,			#sourceCode : 'label_1\r\r\t^ label_1',			#stamp : 'mica 11/21/2024 18:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.083-03:00' ],		#prior : OmReference [ '308' ],		#self : OmReference [ '309' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #turno,			#protocol : #accessing,			#sourceCode : 'turno\r\r\t^ turno',			#stamp : 'mica 11/21/2024 18:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.085-03:00' ],		#prior : OmReference [ '309' ],		#self : OmReference [ '310' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'perdedor:',			#protocol : #accessing,			#sourceCode : 'perdedor: anObject\r\r\tperdedor := anObject',			#stamp : 'mica 11/21/2024 02:12',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.087-03:00' ],		#prior : OmReference [ '310' ],		#self : OmReference [ '311' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #label_3,			#protocol : #accessing,			#sourceCode : 'label_3\r\r\t^ label_3',			#stamp : 'a 11/24/2024 15:41',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.088-03:00' ],		#prior : OmReference [ '311' ],		#self : OmReference [ '312' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #ventana_2,			#protocol : #accessing,			#sourceCode : 'ventana_2\r\r\t^ ventana_2',			#stamp : 'mica 11/21/2024 18:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.089-03:00' ],		#prior : OmReference [ '312' ],		#self : OmReference [ '313' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #proceso,			#protocol : #accessing,			#sourceCode : 'proceso\r\r\t^ proceso',			#stamp : 'mica 11/21/2024 18:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.091-03:00' ],		#prior : OmReference [ '313' ],		#self : OmReference [ '314' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'timer_1:',			#protocol : #accessing,			#sourceCode : 'timer_1: anObject\r\r\ttimer_1 := anObject',			#stamp : 'mica 11/22/2024 14:31',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.093-03:00' ],		#prior : OmReference [ '314' ],		#self : OmReference [ '315' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #timer_2,			#protocol : #accessing,			#sourceCode : 'timer_2\r\r\t^ timer_2',			#stamp : 'mica 11/21/2024 18:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.094-03:00' ],		#prior : OmReference [ '315' ],		#self : OmReference [ '316' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'proceso:',			#protocol : #accessing,			#sourceCode : 'proceso: anObject\r\r\t^ proceso := anObject',			#stamp : 'mica 11/21/2024 18:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.096-03:00' ],		#prior : OmReference [ '316' ],		#self : OmReference [ '317' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'j1name:',			#protocol : #accessing,			#sourceCode : 'j1name: anObject\r\r\tj1name := anObject',			#stamp : 'mica 11/23/2024 01:35',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.098-03:00' ],		#prior : OmReference [ '317' ],		#self : OmReference [ '318' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'timer_2:',			#protocol : #accessing,			#sourceCode : 'timer_2: anObject\r\r\ttimer_2 := anObject',			#stamp : 'mica 11/21/2024 18:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.1-03:00' ],		#prior : OmReference [ '318' ],		#self : OmReference [ '319' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #j1name,			#protocol : #accessing,			#sourceCode : 'j1name\r\r\t^ j1name',			#stamp : 'mica 11/23/2024 01:35',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.103-03:00' ],		#prior : OmReference [ '319' ],		#self : OmReference [ '320' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'ventana_2:',			#protocol : #accessing,			#sourceCode : 'ventana_2: anObject\r\r\tventana_2 := anObject',			#stamp : 'mica 11/21/2024 18:38',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.104-03:00' ],		#prior : OmReference [ '320' ],		#self : OmReference [ '321' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #fin,			#protocol : #accessing,			#sourceCode : 'fin\r\r\t^ fin',			#stamp : 'mica 11/21/2024 02:46',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.105-03:00' ],		#prior : OmReference [ '321' ],		#self : OmReference [ '322' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #detener,			#protocol : #initialization,			#sourceCode : 'detener\r    proceso ifNotNil: [ \r        proceso terminate.\r        proceso := nil.\r         ]',			#stamp : 'IngPepeGrillo 11/19/2024 23:03',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.11-03:00' ],		#prior : OmReference [ '322' ],		#self : OmReference [ '323' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #crearVentana,			#protocol : #initialization,			#sourceCode : 'crearVentana\r\t| screenWidth screenHeight |\r\r    "Obtener dimensiones de la pantalla"\r     screenWidth := Display width.\r     screenHeight := Display height.\r    "Ventana 1: Izquierda"\r    ventana_1:= Morph  new.\r    ventana_1 color: Color green.\r    ventana_1 := (ImageReadWriter formFromFileNamed: \'picturesParaPharo/carpinchitoIzquierda.png\') asMorph.\r    ventana_1 extent: 200@100.\r    ventana_1 position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"\r\r\r    label_1 := TextMorph new.\r    "mensaje de la ventana al iniciar"\r    label_1 contents: \'Jugador 1\'.\r    label_1 color: Color green.\r    label_1 position: (ventana_1 bounds origin) + (370@165).  "Posiciona el label dentro de la ventana 1"\r    label_1 font: (LogicalFont familyName: \'Arial\' pointSize: 50). "Cambia \'Arial\' y 20 según tus necesidades"\r\r        \r    ventana_1 addMorph: label_1.\r    ventana_1 openInWorld.\r\r    "Ventana 2: Más a la derecha"\r    ventana_2 := Morph new.\r    ventana_2 color: Color green.\r\tventana_2 := (ImageReadWriter formFromFileNamed: \'picturesParaPharo/carpinchitoDerecha.png\') asMorph.\r    ventana_2 extent: 200@100.\r    ventana_2 position: (screenWidth - 600)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"\r\r\r    label_2 := TextMorph new.\r    "mensaje de la ventana al iniciar"\r    label_2 contents: \'Jugador 2\'.\r    label_2 color: Color blue.\r    label_2 position: (ventana_2 bounds origin) + (170@165).  "Posiciona el label dentro de la ventana 2"\r    \r    ventana_2 addMorph: label_2.\r    ventana_2 openInWorld.\r\r\r"ventana 3"\r    ventana_3 := Morph new.\r    ventana_3 color: Color green.\r\t ventana_3 := (ImageReadWriter formFromFileNamed: \'picturesParaPharo/vs.png\') asMorph.\r    ventana_3 extent: 200@100.\r    ventana_3 position: (50)@(20). "arriba en el medio"\r\r\r    label_3 := TextMorph new.\r    "mensaje de la ventana al iniciar"\r    label_3 contents: \'\'.\r    label_3 color: Color red.\r    label_3 position: (ventana_3 bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"\r    \r    ventana_3 addMorph: label_3.\r    ventana_3 openInWorld.',			#stamp : 'TiagoBernal 11/24/2024 17:40',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.112-03:00' ],		#prior : OmReference [ '323' ],		#self : OmReference [ '324' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'restarSegundos:',			#protocol : #initialization,			#sourceCode : 'restarSegundos:anPlayer "1 o 2"\r\t\r\t(anPlayer  = 1) ifTrue: [ timer_1 :=timer_1 - 2 ].\r\t\r\t(anPlayer  = 2) ifTrue: [ timer_2 :=timer_2 - 2 ].',			#stamp : 'mica 11/22/2024 13:01',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.115-03:00' ],		#prior : OmReference [ '324' ],		#self : OmReference [ '325' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'iniciar:',			#protocol : #initialization,			#sourceCode : 'iniciar:jugadorInicial\r            |uno_sin_tiempo|\r\t\t\t\tfin:= false.\r            uno_sin_tiempo :=false.\r\t\t\t\tself fin:false.\r            turno:=jugadorInicial .\r                self crearVentana.\r    proceso := [\r           \r          \r        [ uno_sin_tiempo ] whileFalse: [ \r                 "va a ver si alguien se quedo sin tiempo"\r            (   (timer_1=0) | (timer_2=0) ) ifTrue: [ uno_sin_tiempo :=true ].\r            (Delay forSeconds: 1) wait. \r            "creamos 1 sola vez la ventana"\r            "(timer_1 = 5 )ifTrue: [self crearVentana]."\r            "vamos escribiendo los 2 tiempos sobre las 2 ventanas "\r           label_1 contents: j1name , String cr, \'Segundos: \', timer_1 printString.\r           label_2 contents: j2name , String cr, \'Segundos: \', timer_2 printString.\r\r                "veo de quien es el turno"\r                (turno=1) ifTrue: [ timer_1 := timer_1  - 1]\r                ifFalse: [ timer_2 := timer_2 -1 ]\r                \r                . \r  \r                "eliminamos la ventana"\r                                                \r                (timer_1 <=0) ifTrue: [\r\t\t\t\t\t\t\tself perdedor: 1.\r\t\t\t\t\t\t\tself fin:true.\r                    label_1 contents: \'Time is Over\'.\r                          label_2 contents: \'You won this battle\'.\r                        ventana_1 color: Color red.\r                        ventana_2 color: Color green.\r"                    (Delay forSeconds: 2) wait. \r                    ventana_1 delete.\r                    ventana_1 := nil.\r                          ventana_2 delete.\r                    ventana_2 := nil."\r\r\t\t\t\t\t\t\t"Aca perdio el jugador 1"\r\t\t\t\t\t\t\t"tratamiento"\r\t\t\t\t\t\t\t\r                                ].      \r                    \r                    (timer_2 <=0) ifTrue: [\r\t\t\t\t\t\t\tself perdedor: 2.\r\t\t\t\t\t\t\tself fin:true.\r                    label_1 contents: \'You won this battle\'.\r                          label_2 contents: \'Time is Over\'.\r                        ventana_1 color: Color green.\r                        ventana_2 color: Color red .\r\r\r\r\t\t\t\t\t\t"Aca perdio el jugador 2"\r\t\t\t\t\t\t"iniciar tratamiento"\r                                ].\r\r\t\t\t\t\t       \r   \t\t].\r\r\r\r         ] fork. \r\r',			#stamp : 'a 11/24/2024 16:27',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.117-03:00' ],		#prior : OmReference [ '325' ],		#self : OmReference [ '326' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialization,			#sourceCode : 'initialize \r    timer_1 :=10.\r    timer_2:=10.\r    proceso:=nil.',			#stamp : 'mica 11/22/2024 14:16',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.119-03:00' ],		#prior : OmReference [ '326' ],		#self : OmReference [ '327' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Timer,				#isMetaSide : false			},			#name : #'turno:',			#protocol : #initialization,			#sourceCode : 'turno:anValue\r    turno:=anValue .',			#stamp : 'IngPepeGrillo 11/19/2024 23:04',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.121-03:00' ],		#prior : OmReference [ '327' ],		#self : OmReference [ '328' ]	},	#content : EpCategoryAddition {		#classCategoryName : #'Paradigmas 2024-Manifest',		#affectedPackageName : #'Paradigmas 2024'	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.122-03:00' ],		#prior : OmReference [ '328' ],		#self : OmReference [ '329' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PackageManifest subclass: #ManifestParadigmas2024\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Paradigmas 2024-Manifest\'',				#superclassName : 'PackageManifest',				#traitCompositionSource : '{}'			},			#name : #ManifestParadigmas2024,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ManifestParadigmas2024 class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ManifestParadigmas2024 class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestParadigmas2024,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024-Manifest',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.149-03:00' ],		#prior : OmReference [ '329' ],		#self : OmReference [ '330' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#definitionSource : 'PackageManifest subclass: #ManifestParadigmas2024\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpackage: \'Paradigmas 2024-Manifest\'',				#superclassName : 'PackageManifest',				#traitCompositionSource : '{}'			},			#name : #ManifestParadigmas2024,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#definitionSource : 'ManifestParadigmas2024 class\r\tinstanceVariableNames: \'\'',					#traitCompositionSource : '{}'				},				#name : #'ManifestParadigmas2024 class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestParadigmas2024,					#isMetaSide : false				},				#parent : @7,				#content : 'Please describe the package using the class comment of the included manifest class. The manifest class also includes other additional metadata for the package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #'Paradigmas 2024-Manifest',			#package : #'Paradigmas 2024',			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Please describe the package using the class comment of the included manifest class. The manifest class also includes other additional metadata for the package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',		#oldStamp : '',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.208-03:00' ],		#prior : OmReference [ '330' ],		#self : OmReference [ '331' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestParadigmas2024 class',				#isMetaSide : true			},			#name : #ruleWhileTrueRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleWhileTrueRuleV1FalsePositive\r\t^ #(#(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #\'2024-11-20T22:39:35.225-03:00\') )',			#stamp : 'Gonzalo 11/20/2024 22:39',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.211-03:00' ],		#prior : OmReference [ '331' ],		#self : OmReference [ '332' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestParadigmas2024 class',				#isMetaSide : true			},			#name : #ruleLongMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleLongMethodsRuleV1FalsePositive\r\t^ #(#(#(#RGMethodDefinition #(#Tablero #initialize #false)) #\'2024-11-20T20:05:03.367-03:00\') #(#(#RGMethodDefinition #(#Tablero #mostrarAdversariosde: #false)) #\'2024-11-20T22:04:13.202-03:00\') #(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #\'2024-11-20T22:39:10.841-03:00\') #(#(#RGPackageDefinition #(#\'Paradigmas 2024\')) #\'2024-11-24T15:39:45.424607-03:00\') )',			#stamp : 'a 11/24/2024 15:39',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.213-03:00' ],		#prior : OmReference [ '332' ],		#self : OmReference [ '333' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestParadigmas2024 class',				#isMetaSide : true			},			#name : #ruleClassNotReferencedRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleClassNotReferencedRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#Interfaz)) #\'2024-11-21T11:49:50.953-03:00\') )',			#stamp : 'Gonzalo 11/21/2024 11:49',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.215-03:00' ],		#prior : OmReference [ '333' ],		#self : OmReference [ '334' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestParadigmas2024 class',				#isMetaSide : true			},			#name : #ruleToDoRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleToDoRuleV1FalsePositive\r\t^ #(#(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #\'2024-11-20T22:00:34.205-03:00\') )',			#stamp : 'Gonzalo 11/20/2024 22:00',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.218-03:00' ],		#prior : OmReference [ '334' ],		#self : OmReference [ '335' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestParadigmas2024 class',				#isMetaSide : true			},			#name : #ruleCodeCruftLeftInMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleCodeCruftLeftInMethodsRuleV1FalsePositive\r\t^ #(#(#(#RGMethodDefinition #(#Tablero #initialize #false)) #\'2024-11-20T22:04:43.412-03:00\') )',			#stamp : 'Gonzalo 11/20/2024 22:04',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.221-03:00' ],		#prior : OmReference [ '335' ],		#self : OmReference [ '336' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestParadigmas2024 class',				#isMetaSide : true			},			#name : #ruleReIvarNeitherReadNorWrittenRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleReIvarNeitherReadNorWrittenRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#Interfaz)) #\'2024-11-21T11:49:48.037-03:00\') )',			#stamp : 'Gonzalo 11/21/2024 11:49',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.223-03:00' ],		#prior : OmReference [ '336' ],		#self : OmReference [ '337' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestParadigmas2024 class',				#isMetaSide : true			},			#name : #ruleNotEliminationRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleNotEliminationRuleV1FalsePositive\r\t^ #(#(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #\'2024-11-20T20:00:46.733-03:00\') )',			#stamp : 'Gonzalo 11/20/2024 20:00',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.224-03:00' ],		#prior : OmReference [ '337' ],		#self : OmReference [ '338' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestParadigmas2024 class',				#isMetaSide : true			},			#name : #ruleStringConcatenationRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleStringConcatenationRuleV1FalsePositive\r\t^ #(#(#(#RGMethodDefinition #(#Tablero #cargarBotonesAtacante:Adversarios: #false)) #\'2024-11-21T15:41:06.333-03:00\') #(#(#RGMethodDefinition #(#Tablero #cargarBotones #false)) #\'2024-11-21T16:08:01.18-03:00\') )',			#stamp : 'Gonzalo 11/21/2024 16:08',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.226-03:00' ],		#prior : OmReference [ '338' ],		#self : OmReference [ '339' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestParadigmas2024 class',				#isMetaSide : true			},			#name : #ruleSearchingLiteralRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleSearchingLiteralRuleV1FalsePositive\r\t^ #(#(#(#RGPackageDefinition #(#\'Paradigmas 2024\')) #\'2024-11-24T15:41:23.397273-03:00\') )',			#stamp : 'a 11/24/2024 15:41',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.228-03:00' ],		#prior : OmReference [ '339' ],		#self : OmReference [ '340' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestParadigmas2024 class',				#isMetaSide : true			},			#name : #ruleToDoWithIncrementRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleToDoWithIncrementRuleV1FalsePositive\r\t^ #(#(#(#RGMethodDefinition #(#Tablero #initialize #false)) #\'2024-11-20T20:05:08.856-03:00\') )',			#stamp : 'Gonzalo 11/20/2024 20:05',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.229-03:00' ],		#prior : OmReference [ '340' ],		#self : OmReference [ '341' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestParadigmas2024 class',				#isMetaSide : true			},			#name : #ruleNoClassCommentRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleNoClassCommentRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#Interfaz)) #\'2024-11-21T11:49:44.516-03:00\') )',			#stamp : 'Gonzalo 11/21/2024 11:49',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.231-03:00' ],		#prior : OmReference [ '341' ],		#self : OmReference [ '342' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestParadigmas2024 class',				#isMetaSide : true			},			#name : #ruleCascadedNextPutAllsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleCascadedNextPutAllsRuleV1FalsePositive\r\t^ #(#(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #\'2024-11-20T20:00:50.167-03:00\') )',			#stamp : 'Gonzalo 11/20/2024 20:00',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.232-03:00' ],		#prior : OmReference [ '342' ],		#self : OmReference [ '343' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestParadigmas2024 class',				#isMetaSide : true			},			#name : #ruleUnclassifiedMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleUnclassifiedMethodsRuleV1FalsePositive\r\t^ #(#(#(#RGMethodDefinition #(#Tablero #tamañoDeLaMatriz #false)) #\'2024-11-20T20:16:36.668-03:00\') #(#(#RGMethodDefinition #(#Tablero #iniciarJuego #false)) #\'2024-11-20T22:01:06.978-03:00\') )',			#stamp : 'Gonzalo 11/20/2024 22:01',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.234-03:00' ],		#prior : OmReference [ '343' ],		#self : OmReference [ '344' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestParadigmas2024 class',				#isMetaSide : true			},			#name : #ruleReClassNotCategorizedRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleReClassNotCategorizedRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#Interfaz)) #\'2024-11-21T11:49:41.926-03:00\') )',			#stamp : 'Gonzalo 11/21/2024 11:49',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:22:00.235-03:00' ],		#prior : OmReference [ '344' ],		#self : OmReference [ '345' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestParadigmas2024 class',				#isMetaSide : true			},			#name : #ruleToDoCollectRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleToDoCollectRuleV1FalsePositive\r\t^ #(#(#(#RGMethodDefinition #(#Tablero #initialize #false)) #\'2024-11-20T20:05:06.639-03:00\') )',			#stamp : 'Gonzalo 11/20/2024 20:05',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:23:46.67-03:00' ],		#prior : OmReference [ '345' ],		#self : OmReference [ '346' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #iniciarJuego,			#protocol : #initialization,			#sourceCode : 'iniciarJuego\r|nroAtacante listaAdversarios respuesta duelo contadorDuelos | \rcontadorDuelos :=0.\r\tself crearVentanaJuego .\r\tduelo :=Duelos new.\r\tself interfazCrearVentana.\r\tTranscript show: \'----INICIA EL JUEGO----\';cr.\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t\r\t\r\t\r\t\r\t[ cantPlayers > 1 ]whileTrue: [  \r\r\tTranscript show:\'Cantidad de Jugadores: \';show:cantPlayers;cr.\r\tTranscript show: \'Jugador: \';show:(listaJugadores at:nroAtacante)nombre;show:\' Selecciona a cual de las siguientes casillas atacar:\';cr.\r\t(contadorDuelos =10)ifTrue:[\r\t\tnroAtacante:=(((self masCasillas at:1)nombre)findTokens:\' \') last asInteger.\r\t\tatacante :=listaJugadores at:nroAtacante.\r\t\tdefensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).\r\t\tTranscript show: \'----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----\';cr.\r\t\tself mensajeDueloExtra:(atacante nombre)y:(defensor dueño).\r\t\tduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.\r\t\tcontadorDuelos :=0.\r\t\t]\r\tifFalse:[\r\t\t\r\tself mostrarAdversariosde: nroAtacante.\r\tlistaAdversarios:=(listaJugadores at:nroAtacante)adversarios.\r\tTranscript show: \'---COLUMNA---FILA---CATEGORIA---------JUGADOR---\';cr.\r\t1 to:(listaAdversarios size)do:[:i|\r\t\tTranscript show: \'      \';show:((listaAdversarios at:i)at:1);show:\'      \'.\r\t\tTranscript show: \' \';show:((listaAdversarios at:i)at:2);show:\' \'.\r\t\tTranscript show: \'     \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:\' \'.\r\t\tTranscript show: \'   \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:\' \';cr.\r\t\t].\r\tself coloresAtacante: (listaJugadores at:nroAtacante)casillas.\r\tself coloresAdversarios: listaAdversarios.\r\tself interfazCrearVentana.\r\tself cargarBotones."INTERFAZ----------------------------------------------------------------"  \r\tself coloresAzul.\r\trespuesta  := UIManager default \r    chooseFrom: listaAdversarios\r    message: \'Elige un contrincante\'\r    title: \'DUELO\'.\r  ventana delete.\r\rdefensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).\r\r\r\rduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. \rcontadorDuelos :=contadorDuelos +1.\r].\r\r(duelo perdedor = 1)ifTrue:[\r\tself captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).\r\tnroAtacante :=((defensor dueño)findTokens:\' \') last asInteger.\r\tatacante := listaJugadores at:nroAtacante\r\t]ifFalse: [ \r\tself captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).\r\t ].\r(contadorDuelos  < 10)ifTrue:[\rrespuesta  := UIManager default \r    chooseFrom: #(\'Seguir Atacando\' \'Pasar Turno\')\r    message: \'¿Desea seguir atacando?\'\r    title: \'DUELO\'.\r\r(respuesta = 2)ifTrue:[\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t].\r]ifFalse:[\rnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r].\r].\r\r\t \r\t Transcript show: \'GAME OVER\'; cr.\r\t Transcript show: \'El ganador es el jugador:\';show:(atacante nombre); cr.',			#stamp : 'a 11/24/2024 16:35',			#package : #'Paradigmas 2024'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #iniciarJuego,			#protocol : #initialization,			#sourceCode : 'iniciarJuego\r|nroAtacante listaAdversarios respuesta duelo contadorDuelos ventanavictoria screenWidth | \rcontadorDuelos :=0.\r\tself crearVentanaJuego .\r\tduelo :=Duelos new.\r\tself interfazCrearVentana.\r\tTranscript show: \'----INICIA EL JUEGO----\';cr.\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t\r\t\r\t\r\t\r\t[ cantPlayers > 1 ]whileTrue: [  \r\r\tTranscript show:\'Cantidad de Jugadores: \';show:cantPlayers;cr.\r\tTranscript show: \'Jugador: \';show:(listaJugadores at:nroAtacante)nombre;show:\' Selecciona a cual de las siguientes casillas atacar:\';cr.\r\t(contadorDuelos =10)ifTrue:[\r\t\tnroAtacante:=(((self masCasillas at:1)nombre)findTokens:\' \') last asInteger.\r\t\tatacante :=listaJugadores at:nroAtacante.\r\t\tdefensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).\r\t\tTranscript show: \'----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----\';cr.\r\t\tself mensajeDueloExtra:(atacante nombre)y:(defensor dueño).\r\t\tduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.\r\t\tcontadorDuelos :=0.\r\t\t]\r\tifFalse:[\r\t\t\r\tself mostrarAdversariosde: nroAtacante.\r\tlistaAdversarios:=(listaJugadores at:nroAtacante)adversarios.\r\tTranscript show: \'---COLUMNA---FILA---CATEGORIA---------JUGADOR---\';cr.\r\t1 to:(listaAdversarios size)do:[:i|\r\t\tTranscript show: \'      \';show:((listaAdversarios at:i)at:1);show:\'      \'.\r\t\tTranscript show: \' \';show:((listaAdversarios at:i)at:2);show:\' \'.\r\t\tTranscript show: \'     \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:\' \'.\r\t\tTranscript show: \'   \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:\' \';cr.\r\t\t].\r\tself coloresAtacante: (listaJugadores at:nroAtacante)casillas.\r\tself coloresAdversarios: listaAdversarios.\r\tself interfazCrearVentana.\r\tself cargarBotones."INTERFAZ----------------------------------------------------------------"  \r\tself coloresAzul.\r\trespuesta  := UIManager default \r    chooseFrom: listaAdversarios\r    message: \'Elige un contrincante\'\r    title: \'DUELO\'.\r  ventana delete.\r\rdefensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).\r\r\r\rduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. \rcontadorDuelos :=contadorDuelos +1.\r].\r\r(duelo perdedor = 1)ifTrue:[\r\tself captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).\r\tnroAtacante :=((defensor dueño)findTokens:\' \') last asInteger.\r\tatacante := listaJugadores at:nroAtacante\r\t]ifFalse: [ \r\tself captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).\r\t ].\r(contadorDuelos  < 10)ifTrue:[\rrespuesta  := UIManager default \r    chooseFrom: #(\'Seguir Atacando\' \'Pasar Turno\')\r    message: \'¿Desea seguir atacando?\'\r    title: \'DUELO\'.\r\r(respuesta = 2)ifTrue:[\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t].\r]ifFalse:[\rnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r].\r].\r\r\t ventanavictoria:= Morph  new.\r    ventanavictoria color: Color green.\r    ventanavictoria := (ImageReadWriter formFromFileNamed: \'picturesParaPharo/carpinchitoIzquierda.png\') asMorph.\r    ventanavictoria extent: 200@100.\r    ventanavictoria position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"\r\t Transcript show: \'GAME OVER\'; cr.\r\t Transcript show: \'El ganador es el jugador:\';show:(atacante nombre); cr.\r\t',			#stamp : 'TiagoBernal 11/24/2024 19:23',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:24:25.652-03:00' ],		#prior : OmReference [ '346' ],		#self : OmReference [ '347' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #iniciarJuego,			#protocol : #initialization,			#sourceCode : 'iniciarJuego\r|nroAtacante listaAdversarios respuesta duelo contadorDuelos ventanavictoria screenWidth | \rcontadorDuelos :=0.\r\tself crearVentanaJuego .\r\tduelo :=Duelos new.\r\tself interfazCrearVentana.\r\tTranscript show: \'----INICIA EL JUEGO----\';cr.\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t\r\t\r\t\r\t\r\t[ cantPlayers > 1 ]whileTrue: [  \r\r\tTranscript show:\'Cantidad de Jugadores: \';show:cantPlayers;cr.\r\tTranscript show: \'Jugador: \';show:(listaJugadores at:nroAtacante)nombre;show:\' Selecciona a cual de las siguientes casillas atacar:\';cr.\r\t(contadorDuelos =10)ifTrue:[\r\t\tnroAtacante:=(((self masCasillas at:1)nombre)findTokens:\' \') last asInteger.\r\t\tatacante :=listaJugadores at:nroAtacante.\r\t\tdefensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).\r\t\tTranscript show: \'----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----\';cr.\r\t\tself mensajeDueloExtra:(atacante nombre)y:(defensor dueño).\r\t\tduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.\r\t\tcontadorDuelos :=0.\r\t\t]\r\tifFalse:[\r\t\t\r\tself mostrarAdversariosde: nroAtacante.\r\tlistaAdversarios:=(listaJugadores at:nroAtacante)adversarios.\r\tTranscript show: \'---COLUMNA---FILA---CATEGORIA---------JUGADOR---\';cr.\r\t1 to:(listaAdversarios size)do:[:i|\r\t\tTranscript show: \'      \';show:((listaAdversarios at:i)at:1);show:\'      \'.\r\t\tTranscript show: \' \';show:((listaAdversarios at:i)at:2);show:\' \'.\r\t\tTranscript show: \'     \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:\' \'.\r\t\tTranscript show: \'   \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:\' \';cr.\r\t\t].\r\tself coloresAtacante: (listaJugadores at:nroAtacante)casillas.\r\tself coloresAdversarios: listaAdversarios.\r\tself interfazCrearVentana.\r\tself cargarBotones."INTERFAZ----------------------------------------------------------------"  \r\tself coloresAzul.\r\trespuesta  := UIManager default \r    chooseFrom: listaAdversarios\r    message: \'Elige un contrincante\'\r    title: \'DUELO\'.\r  ventana delete.\r\rdefensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).\r\r\r\rduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. \rcontadorDuelos :=contadorDuelos +1.\r].\r\r(duelo perdedor = 1)ifTrue:[\r\tself captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).\r\tnroAtacante :=((defensor dueño)findTokens:\' \') last asInteger.\r\tatacante := listaJugadores at:nroAtacante\r\t]ifFalse: [ \r\tself captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).\r\t ].\r(contadorDuelos  < 10)ifTrue:[\rrespuesta  := UIManager default \r    chooseFrom: #(\'Seguir Atacando\' \'Pasar Turno\')\r    message: \'¿Desea seguir atacando?\'\r    title: \'DUELO\'.\r\r(respuesta = 2)ifTrue:[\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t].\r]ifFalse:[\rnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r].\r].\r\r\t ventanavictoria:= Morph  new.\r    ventanavictoria color: Color green.\r    ventanavictoria := (ImageReadWriter formFromFileNamed: \'picturesParaPharo/carpinchitoIzquierda.png\') asMorph.\r    ventanavictoria extent: 200@100.\r    ventanavictoria position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"\r\t Transcript show: \'GAME OVER\'; cr.\r\t Transcript show: \'El ganador es el jugador:\';show:(atacante nombre); cr.\r\t',			#stamp : 'TiagoBernal 11/24/2024 19:23',			#package : #'Paradigmas 2024'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #iniciarJuego,			#protocol : #initialization,			#sourceCode : 'iniciarJuego\r|nroAtacante listaAdversarios respuesta duelo contadorDuelos ventanavictoria screenWidth | \rcontadorDuelos :=0.\r\tscreenWidth := Display width.\r\tself crearVentanaJuego .\r\tduelo :=Duelos new.\r\tself interfazCrearVentana.\r\tTranscript show: \'----INICIA EL JUEGO----\';cr.\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t\r\t\r\t\r\t\r\t[ cantPlayers > 1 ]whileTrue: [  \r\r\tTranscript show:\'Cantidad de Jugadores: \';show:cantPlayers;cr.\r\tTranscript show: \'Jugador: \';show:(listaJugadores at:nroAtacante)nombre;show:\' Selecciona a cual de las siguientes casillas atacar:\';cr.\r\t(contadorDuelos =10)ifTrue:[\r\t\tnroAtacante:=(((self masCasillas at:1)nombre)findTokens:\' \') last asInteger.\r\t\tatacante :=listaJugadores at:nroAtacante.\r\t\tdefensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).\r\t\tTranscript show: \'----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----\';cr.\r\t\tself mensajeDueloExtra:(atacante nombre)y:(defensor dueño).\r\t\tduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.\r\t\tcontadorDuelos :=0.\r\t\t]\r\tifFalse:[\r\t\t\r\tself mostrarAdversariosde: nroAtacante.\r\tlistaAdversarios:=(listaJugadores at:nroAtacante)adversarios.\r\tTranscript show: \'---COLUMNA---FILA---CATEGORIA---------JUGADOR---\';cr.\r\t1 to:(listaAdversarios size)do:[:i|\r\t\tTranscript show: \'      \';show:((listaAdversarios at:i)at:1);show:\'      \'.\r\t\tTranscript show: \' \';show:((listaAdversarios at:i)at:2);show:\' \'.\r\t\tTranscript show: \'     \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:\' \'.\r\t\tTranscript show: \'   \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:\' \';cr.\r\t\t].\r\tself coloresAtacante: (listaJugadores at:nroAtacante)casillas.\r\tself coloresAdversarios: listaAdversarios.\r\tself interfazCrearVentana.\r\tself cargarBotones."INTERFAZ----------------------------------------------------------------"  \r\tself coloresAzul.\r\trespuesta  := UIManager default \r    chooseFrom: listaAdversarios\r    message: \'Elige un contrincante\'\r    title: \'DUELO\'.\r  ventana delete.\r\rdefensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).\r\r\r\rduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. \rcontadorDuelos :=contadorDuelos +1.\r].\r\r(duelo perdedor = 1)ifTrue:[\r\tself captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).\r\tnroAtacante :=((defensor dueño)findTokens:\' \') last asInteger.\r\tatacante := listaJugadores at:nroAtacante\r\t]ifFalse: [ \r\tself captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).\r\t ].\r(contadorDuelos  < 10)ifTrue:[\rrespuesta  := UIManager default \r    chooseFrom: #(\'Seguir Atacando\' \'Pasar Turno\')\r    message: \'¿Desea seguir atacando?\'\r    title: \'DUELO\'.\r\r(respuesta = 2)ifTrue:[\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t].\r]ifFalse:[\rnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r].\r].\r\r\t ventanavictoria:= Morph  new.\r    ventanavictoria color: Color green.\r    ventanavictoria := (ImageReadWriter formFromFileNamed: \'picturesParaPharo/carpinchitoIzquierda.png\') asMorph.\r    ventanavictoria extent: 200@100.\r    ventanavictoria position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"\r\t Transcript show: \'GAME OVER\'; cr.\r\t Transcript show: \'El ganador es el jugador:\';show:(atacante nombre); cr.\r\t',			#stamp : 'TiagoBernal 11/24/2024 19:24',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:24:56.356-03:00' ],		#prior : OmReference [ '347' ],		#self : OmReference [ '348' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #iniciarJuego,			#protocol : #initialization,			#sourceCode : 'iniciarJuego\r|nroAtacante listaAdversarios respuesta duelo contadorDuelos ventanavictoria screenWidth | \rcontadorDuelos :=0.\r\tscreenWidth := Display width.\r\tself crearVentanaJuego .\r\tduelo :=Duelos new.\r\tself interfazCrearVentana.\r\tTranscript show: \'----INICIA EL JUEGO----\';cr.\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t\r\t\r\t\r\t\r\t[ cantPlayers > 1 ]whileTrue: [  \r\r\tTranscript show:\'Cantidad de Jugadores: \';show:cantPlayers;cr.\r\tTranscript show: \'Jugador: \';show:(listaJugadores at:nroAtacante)nombre;show:\' Selecciona a cual de las siguientes casillas atacar:\';cr.\r\t(contadorDuelos =10)ifTrue:[\r\t\tnroAtacante:=(((self masCasillas at:1)nombre)findTokens:\' \') last asInteger.\r\t\tatacante :=listaJugadores at:nroAtacante.\r\t\tdefensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).\r\t\tTranscript show: \'----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----\';cr.\r\t\tself mensajeDueloExtra:(atacante nombre)y:(defensor dueño).\r\t\tduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.\r\t\tcontadorDuelos :=0.\r\t\t]\r\tifFalse:[\r\t\t\r\tself mostrarAdversariosde: nroAtacante.\r\tlistaAdversarios:=(listaJugadores at:nroAtacante)adversarios.\r\tTranscript show: \'---COLUMNA---FILA---CATEGORIA---------JUGADOR---\';cr.\r\t1 to:(listaAdversarios size)do:[:i|\r\t\tTranscript show: \'      \';show:((listaAdversarios at:i)at:1);show:\'      \'.\r\t\tTranscript show: \' \';show:((listaAdversarios at:i)at:2);show:\' \'.\r\t\tTranscript show: \'     \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:\' \'.\r\t\tTranscript show: \'   \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:\' \';cr.\r\t\t].\r\tself coloresAtacante: (listaJugadores at:nroAtacante)casillas.\r\tself coloresAdversarios: listaAdversarios.\r\tself interfazCrearVentana.\r\tself cargarBotones."INTERFAZ----------------------------------------------------------------"  \r\tself coloresAzul.\r\trespuesta  := UIManager default \r    chooseFrom: listaAdversarios\r    message: \'Elige un contrincante\'\r    title: \'DUELO\'.\r  ventana delete.\r\rdefensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).\r\r\r\rduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. \rcontadorDuelos :=contadorDuelos +1.\r].\r\r(duelo perdedor = 1)ifTrue:[\r\tself captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).\r\tnroAtacante :=((defensor dueño)findTokens:\' \') last asInteger.\r\tatacante := listaJugadores at:nroAtacante\r\t]ifFalse: [ \r\tself captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).\r\t ].\r(contadorDuelos  < 10)ifTrue:[\rrespuesta  := UIManager default \r    chooseFrom: #(\'Seguir Atacando\' \'Pasar Turno\')\r    message: \'¿Desea seguir atacando?\'\r    title: \'DUELO\'.\r\r(respuesta = 2)ifTrue:[\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t].\r]ifFalse:[\rnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r].\r].\r\r\t ventanavictoria:= Morph  new.\r    ventanavictoria color: Color green.\r    ventanavictoria := (ImageReadWriter formFromFileNamed: \'picturesParaPharo/carpinchitoIzquierda.png\') asMorph.\r    ventanavictoria extent: 200@100.\r    ventanavictoria position: (screenWidth - 1100)@(450). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"\r\t Transcript show: \'GAME OVER\'; cr.\r\t Transcript show: \'El ganador es el jugador:\';show:(atacante nombre); cr.\r\t',			#stamp : 'TiagoBernal 11/24/2024 19:24',			#package : #'Paradigmas 2024'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #iniciarJuego,			#protocol : #initialization,			#sourceCode : 'iniciarJuego\r|nroAtacante listaAdversarios respuesta duelo contadorDuelos ventanavictoria screenWidth | \rcontadorDuelos :=0.\r\tscreenWidth := Display width.\r\tself crearVentanaJuego .\r\tduelo :=Duelos new.\r\tself interfazCrearVentana.\r\tTranscript show: \'----INICIA EL JUEGO----\';cr.\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t\r\t\r\t\r\t\r\t[ cantPlayers > 1 ]whileTrue: [  \r\r\tTranscript show:\'Cantidad de Jugadores: \';show:cantPlayers;cr.\r\tTranscript show: \'Jugador: \';show:(listaJugadores at:nroAtacante)nombre;show:\' Selecciona a cual de las siguientes casillas atacar:\';cr.\r\t(contadorDuelos =10)ifTrue:[\r\t\tnroAtacante:=(((self masCasillas at:1)nombre)findTokens:\' \') last asInteger.\r\t\tatacante :=listaJugadores at:nroAtacante.\r\t\tdefensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).\r\t\tTranscript show: \'----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----\';cr.\r\t\tself mensajeDueloExtra:(atacante nombre)y:(defensor dueño).\r\t\tduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.\r\t\tcontadorDuelos :=0.\r\t\t]\r\tifFalse:[\r\t\t\r\tself mostrarAdversariosde: nroAtacante.\r\tlistaAdversarios:=(listaJugadores at:nroAtacante)adversarios.\r\tTranscript show: \'---COLUMNA---FILA---CATEGORIA---------JUGADOR---\';cr.\r\t1 to:(listaAdversarios size)do:[:i|\r\t\tTranscript show: \'      \';show:((listaAdversarios at:i)at:1);show:\'      \'.\r\t\tTranscript show: \' \';show:((listaAdversarios at:i)at:2);show:\' \'.\r\t\tTranscript show: \'     \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:\' \'.\r\t\tTranscript show: \'   \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:\' \';cr.\r\t\t].\r\tself coloresAtacante: (listaJugadores at:nroAtacante)casillas.\r\tself coloresAdversarios: listaAdversarios.\r\tself interfazCrearVentana.\r\tself cargarBotones."INTERFAZ----------------------------------------------------------------"  \r\tself coloresAzul.\r\trespuesta  := UIManager default \r    chooseFrom: listaAdversarios\r    message: \'Elige un contrincante\'\r    title: \'DUELO\'.\r  ventana delete.\r\rdefensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).\r\r\r\rduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. \rcontadorDuelos :=contadorDuelos +1.\r].\r\r(duelo perdedor = 1)ifTrue:[\r\tself captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).\r\tnroAtacante :=((defensor dueño)findTokens:\' \') last asInteger.\r\tatacante := listaJugadores at:nroAtacante\r\t]ifFalse: [ \r\tself captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).\r\t ].\r(contadorDuelos  < 10)ifTrue:[\rrespuesta  := UIManager default \r    chooseFrom: #(\'Seguir Atacando\' \'Pasar Turno\')\r    message: \'¿Desea seguir atacando?\'\r    title: \'DUELO\'.\r\r(respuesta = 2)ifTrue:[\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t].\r]ifFalse:[\rnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r].\r].\r\r\t ventanavictoria:= Morph  new.\r    ventanavictoria color: Color green.\r    ventanavictoria := (ImageReadWriter formFromFileNamed: \'picturesParaPharo/carpinchitoIzquierda.png\') asMorph.\r    ventanavictoria extent: 200@100.\r    ventanavictoria position: (200)@(200). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"\r\t Transcript show: \'GAME OVER\'; cr.\r\t Transcript show: \'El ganador es el jugador:\';show:(atacante nombre); cr.\r\t',			#stamp : 'TiagoBernal 11/24/2024 19:24',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:30:45.969-03:00' ],		#prior : OmReference [ '348' ],		#self : OmReference [ '349' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #iniciarJuego,			#protocol : #initialization,			#sourceCode : 'iniciarJuego\r|nroAtacante listaAdversarios respuesta duelo contadorDuelos ventanavictoria screenWidth | \rcontadorDuelos :=0.\r\tscreenWidth := Display width.\r\tself crearVentanaJuego .\r\tduelo :=Duelos new.\r\tself interfazCrearVentana.\r\tTranscript show: \'----INICIA EL JUEGO----\';cr.\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t\r\t\r\t\r\t\r\t[ cantPlayers > 1 ]whileTrue: [  \r\r\tTranscript show:\'Cantidad de Jugadores: \';show:cantPlayers;cr.\r\tTranscript show: \'Jugador: \';show:(listaJugadores at:nroAtacante)nombre;show:\' Selecciona a cual de las siguientes casillas atacar:\';cr.\r\t(contadorDuelos =10)ifTrue:[\r\t\tnroAtacante:=(((self masCasillas at:1)nombre)findTokens:\' \') last asInteger.\r\t\tatacante :=listaJugadores at:nroAtacante.\r\t\tdefensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).\r\t\tTranscript show: \'----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----\';cr.\r\t\tself mensajeDueloExtra:(atacante nombre)y:(defensor dueño).\r\t\tduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.\r\t\tcontadorDuelos :=0.\r\t\t]\r\tifFalse:[\r\t\t\r\tself mostrarAdversariosde: nroAtacante.\r\tlistaAdversarios:=(listaJugadores at:nroAtacante)adversarios.\r\tTranscript show: \'---COLUMNA---FILA---CATEGORIA---------JUGADOR---\';cr.\r\t1 to:(listaAdversarios size)do:[:i|\r\t\tTranscript show: \'      \';show:((listaAdversarios at:i)at:1);show:\'      \'.\r\t\tTranscript show: \' \';show:((listaAdversarios at:i)at:2);show:\' \'.\r\t\tTranscript show: \'     \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:\' \'.\r\t\tTranscript show: \'   \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:\' \';cr.\r\t\t].\r\tself coloresAtacante: (listaJugadores at:nroAtacante)casillas.\r\tself coloresAdversarios: listaAdversarios.\r\tself interfazCrearVentana.\r\tself cargarBotones."INTERFAZ----------------------------------------------------------------"  \r\tself coloresAzul.\r\trespuesta  := UIManager default \r    chooseFrom: listaAdversarios\r    message: \'Elige un contrincante\'\r    title: \'DUELO\'.\r  ventana delete.\r\rdefensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).\r\r\r\rduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. \rcontadorDuelos :=contadorDuelos +1.\r].\r\r(duelo perdedor = 1)ifTrue:[\r\tself captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).\r\tnroAtacante :=((defensor dueño)findTokens:\' \') last asInteger.\r\tatacante := listaJugadores at:nroAtacante\r\t]ifFalse: [ \r\tself captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).\r\t ].\r(contadorDuelos  < 10)ifTrue:[\rrespuesta  := UIManager default \r    chooseFrom: #(\'Seguir Atacando\' \'Pasar Turno\')\r    message: \'¿Desea seguir atacando?\'\r    title: \'DUELO\'.\r\r(respuesta = 2)ifTrue:[\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t].\r]ifFalse:[\rnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r].\r].\r\r\t ventanavictoria:= Morph  new.\r    ventanavictoria color: Color green.\r    ventanavictoria := (ImageReadWriter formFromFileNamed: \'picturesParaPharo/carpinchitoIzquierda.png\') asMorph.\r    ventanavictoria extent: 200@100.\r    ventanavictoria position: (200)@(200). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"\r\t Transcript show: \'GAME OVER\'; cr.\r\t Transcript show: \'El ganador es el jugador:\';show:(atacante nombre); cr.\r\t',			#stamp : 'TiagoBernal 11/24/2024 19:24',			#package : #'Paradigmas 2024'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #iniciarJuego,			#protocol : #initialization,			#sourceCode : 'iniciarJuego\r|nroAtacante listaAdversarios respuesta duelo contadorDuelos ventanavictoria screenWidth | \rcontadorDuelos :=0.\r\tscreenWidth := Display width.\r\tself crearVentanaJuego .\r\tduelo :=Duelos new.\r\tself interfazCrearVentana.\r\tTranscript show: \'----INICIA EL JUEGO----\';cr.\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t\r\t\r\t\r\t\r\t[ cantPlayers > 1 ]whileTrue: [  \r\r\tTranscript show:\'Cantidad de Jugadores: \';show:cantPlayers;cr.\r\tTranscript show: \'Jugador: \';show:(listaJugadores at:nroAtacante)nombre;show:\' Selecciona a cual de las siguientes casillas atacar:\';cr.\r\t(contadorDuelos =10)ifTrue:[\r\t\tnroAtacante:=(((self masCasillas at:1)nombre)findTokens:\' \') last asInteger.\r\t\tatacante :=listaJugadores at:nroAtacante.\r\t\tdefensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).\r\t\tTranscript show: \'----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----\';cr.\r\t\tself mensajeDueloExtra:(atacante nombre)y:(defensor dueño).\r\t\tduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.\r\t\tcontadorDuelos :=0.\r\t\t]\r\tifFalse:[\r\t\t\r\tself mostrarAdversariosde: nroAtacante.\r\tlistaAdversarios:=(listaJugadores at:nroAtacante)adversarios.\r\tTranscript show: \'---COLUMNA---FILA---CATEGORIA---------JUGADOR---\';cr.\r\t1 to:(listaAdversarios size)do:[:i|\r\t\tTranscript show: \'      \';show:((listaAdversarios at:i)at:1);show:\'      \'.\r\t\tTranscript show: \' \';show:((listaAdversarios at:i)at:2);show:\' \'.\r\t\tTranscript show: \'     \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:\' \'.\r\t\tTranscript show: \'   \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:\' \';cr.\r\t\t].\r\tself coloresAtacante: (listaJugadores at:nroAtacante)casillas.\r\tself coloresAdversarios: listaAdversarios.\r\tself interfazCrearVentana.\r\tself cargarBotones."INTERFAZ----------------------------------------------------------------"  \r\tself coloresAzul.\r\trespuesta  := UIManager default \r    chooseFrom: listaAdversarios\r    message: \'Elige un contrincante\'\r    title: \'DUELO\'.\r  ventana delete.\r\rdefensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).\r\r\r\rduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. \rcontadorDuelos :=contadorDuelos +1.\r].\r\r(duelo perdedor = 1)ifTrue:[\r\tself captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).\r\tnroAtacante :=((defensor dueño)findTokens:\' \') last asInteger.\r\tatacante := listaJugadores at:nroAtacante\r\t]ifFalse: [ \r\tself captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).\r\t ].\r(contadorDuelos  < 10)ifTrue:[\rrespuesta  := UIManager default \r    chooseFrom: #(\'Seguir Atacando\' \'Pasar Turno\')\r    message: \'¿Desea seguir atacando?\'\r    title: \'DUELO\'.\r\r(respuesta = 2)ifTrue:[\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t].\r]ifFalse:[\rnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r].\r].\r\r\t ventanavictoria:= Morph  new.\r    ventanavictoria color: Color green.\r    ventanavictoria := (ImageReadWriter formFromFileNamed: \'picturesParaPharo/victoria.png\') asMorph.\r    ventanavictoria extent: 200@100.\r    ventanavictoria position: (200)@(200). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"\r\t Transcript show: \'GAME OVER\'; cr.\r\t Transcript show: \'El ganador es el jugador:\';show:(atacante nombre); cr.\r\t',			#stamp : 'TiagoBernal 11/24/2024 19:30',			#package : #'Paradigmas 2024'		}	}}OmEntry {	#tags : {		#author : 'TiagoBernal',		#time : DateAndTime [ '2024-11-24T19:32:33.599-03:00' ],		#prior : OmReference [ '349' ],		#self : OmReference [ '350' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #iniciarJuego,			#protocol : #initialization,			#sourceCode : 'iniciarJuego\r|nroAtacante listaAdversarios respuesta duelo contadorDuelos ventanavictoria screenWidth | \rcontadorDuelos :=0.\r\tscreenWidth := Display width.\r\tself crearVentanaJuego .\r\tduelo :=Duelos new.\r\tself interfazCrearVentana.\r\tTranscript show: \'----INICIA EL JUEGO----\';cr.\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t\r\t\r\t\r\t\r\t[ cantPlayers > 1 ]whileTrue: [  \r\r\tTranscript show:\'Cantidad de Jugadores: \';show:cantPlayers;cr.\r\tTranscript show: \'Jugador: \';show:(listaJugadores at:nroAtacante)nombre;show:\' Selecciona a cual de las siguientes casillas atacar:\';cr.\r\t(contadorDuelos =10)ifTrue:[\r\t\tnroAtacante:=(((self masCasillas at:1)nombre)findTokens:\' \') last asInteger.\r\t\tatacante :=listaJugadores at:nroAtacante.\r\t\tdefensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).\r\t\tTranscript show: \'----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----\';cr.\r\t\tself mensajeDueloExtra:(atacante nombre)y:(defensor dueño).\r\t\tduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.\r\t\tcontadorDuelos :=0.\r\t\t]\r\tifFalse:[\r\t\t\r\tself mostrarAdversariosde: nroAtacante.\r\tlistaAdversarios:=(listaJugadores at:nroAtacante)adversarios.\r\tTranscript show: \'---COLUMNA---FILA---CATEGORIA---------JUGADOR---\';cr.\r\t1 to:(listaAdversarios size)do:[:i|\r\t\tTranscript show: \'      \';show:((listaAdversarios at:i)at:1);show:\'      \'.\r\t\tTranscript show: \' \';show:((listaAdversarios at:i)at:2);show:\' \'.\r\t\tTranscript show: \'     \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:\' \'.\r\t\tTranscript show: \'   \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:\' \';cr.\r\t\t].\r\tself coloresAtacante: (listaJugadores at:nroAtacante)casillas.\r\tself coloresAdversarios: listaAdversarios.\r\tself interfazCrearVentana.\r\tself cargarBotones."INTERFAZ----------------------------------------------------------------"  \r\tself coloresAzul.\r\trespuesta  := UIManager default \r    chooseFrom: listaAdversarios\r    message: \'Elige un contrincante\'\r    title: \'DUELO\'.\r  ventana delete.\r\rdefensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).\r\r\r\rduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. \rcontadorDuelos :=contadorDuelos +1.\r].\r\r(duelo perdedor = 1)ifTrue:[\r\tself captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).\r\tnroAtacante :=((defensor dueño)findTokens:\' \') last asInteger.\r\tatacante := listaJugadores at:nroAtacante\r\t]ifFalse: [ \r\tself captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).\r\t ].\r(contadorDuelos  < 10)ifTrue:[\rrespuesta  := UIManager default \r    chooseFrom: #(\'Seguir Atacando\' \'Pasar Turno\')\r    message: \'¿Desea seguir atacando?\'\r    title: \'DUELO\'.\r\r(respuesta = 2)ifTrue:[\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t].\r]ifFalse:[\rnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r].\r].\r\r\t ventanavictoria:= Morph  new.\r    ventanavictoria color: Color green.\r    ventanavictoria := (ImageReadWriter formFromFileNamed: \'picturesParaPharo/victoria.png\') asMorph.\r    ventanavictoria extent: 200@100.\r    ventanavictoria position: (200)@(200). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"\r\t Transcript show: \'GAME OVER\'; cr.\r\t Transcript show: \'El ganador es el jugador:\';show:(atacante nombre); cr.\r\t',			#stamp : 'TiagoBernal 11/24/2024 19:30',			#package : #'Paradigmas 2024'		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Tablero,				#isMetaSide : false			},			#name : #iniciarJuego,			#protocol : #initialization,			#sourceCode : 'iniciarJuego\r|nroAtacante listaAdversarios respuesta duelo contadorDuelos ventanavictoria screenWidth labelvictoria | \rcontadorDuelos :=0.\r\tscreenWidth := Display width.\r\tself crearVentanaJuego .\r\tduelo :=Duelos new.\r\tself interfazCrearVentana.\r\tTranscript show: \'----INICIA EL JUEGO----\';cr.\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t\r\t\r\t\r\t\r\t[ cantPlayers > 1 ]whileTrue: [  \r\r\tTranscript show:\'Cantidad de Jugadores: \';show:cantPlayers;cr.\r\tTranscript show: \'Jugador: \';show:(listaJugadores at:nroAtacante)nombre;show:\' Selecciona a cual de las siguientes casillas atacar:\';cr.\r\t(contadorDuelos =10)ifTrue:[\r\t\tnroAtacante:=(((self masCasillas at:1)nombre)findTokens:\' \') last asInteger.\r\t\tatacante :=listaJugadores at:nroAtacante.\r\t\tdefensor :=self casillaX:((((self masCasillas at:2)casillas)at:1)at:1) Y:((((self masCasillas at:2)casillas)at:1)at:2).\r\t\tTranscript show: \'----EL PROXIMO DUELO SERA DE LOS JUGADORES CON MAS CASILLAS----\';cr.\r\t\tself mensajeDueloExtra:(atacante nombre)y:(defensor dueño).\r\t\tduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: true.\r\t\tcontadorDuelos :=0.\r\t\t]\r\tifFalse:[\r\t\t\r\tself mostrarAdversariosde: nroAtacante.\r\tlistaAdversarios:=(listaJugadores at:nroAtacante)adversarios.\r\tTranscript show: \'---COLUMNA---FILA---CATEGORIA---------JUGADOR---\';cr.\r\t1 to:(listaAdversarios size)do:[:i|\r\t\tTranscript show: \'      \';show:((listaAdversarios at:i)at:1);show:\'      \'.\r\t\tTranscript show: \' \';show:((listaAdversarios at:i)at:2);show:\' \'.\r\t\tTranscript show: \'     \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )categoria;show:\' \'.\r\t\tTranscript show: \'   \';show:(self casillaX: ((listaAdversarios at:i)at:1) Y:((listaAdversarios at:i)at:2) )dueño ;show:\' \';cr.\r\t\t].\r\tself coloresAtacante: (listaJugadores at:nroAtacante)casillas.\r\tself coloresAdversarios: listaAdversarios.\r\tself interfazCrearVentana.\r\tself cargarBotones."INTERFAZ----------------------------------------------------------------"  \r\tself coloresAzul.\r\trespuesta  := UIManager default \r    chooseFrom: listaAdversarios\r    message: \'Elige un contrincante\'\r    title: \'DUELO\'.\r  ventana delete.\r\rdefensor := (self casillaX: ((listaAdversarios at:respuesta)at:1) Y:((listaAdversarios at:respuesta)at:2) ).\r\r\r\rduelo iniciarDueloEntre:  (atacante nombre) y: defensor dueño  categoria: defensor categoria dueloExtra: false. \rcontadorDuelos :=contadorDuelos +1.\r].\r\r(duelo perdedor = 1)ifTrue:[\r\tself captura: defensor a: (self casillaX: ((atacante casillas at: 1)at:1) Y: ((atacante casillas at: 1)at:2)).\r\tnroAtacante :=((defensor dueño)findTokens:\' \') last asInteger.\r\tatacante := listaJugadores at:nroAtacante\r\t]ifFalse: [ \r\tself captura: (self casillaX: ((atacante casillas at:1)at:1) Y: ((atacante casillas at:1)at:2)) a: (self casillaX: ((listaAdversarios at: respuesta)at:1) Y: ((listaAdversarios at: respuesta)at:2)).\r\t ].\r(contadorDuelos  < 10)ifTrue:[\rrespuesta  := UIManager default \r    chooseFrom: #(\'Seguir Atacando\' \'Pasar Turno\')\r    message: \'¿Desea seguir atacando?\'\r    title: \'DUELO\'.\r\r(respuesta = 2)ifTrue:[\r\tnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r\tTranscript show: \'----JUGADOR AL AZAR ECONTRADO----\';cr.\r\t].\r]ifFalse:[\rnroAtacante:=(self buscarJugador).\r\tatacante :=listaJugadores at:nroAtacante.\r].\r].\r\r\t ventanavictoria:= Morph  new.\r    ventanavictoria color: Color green.\r    ventanavictoria := (ImageReadWriter formFromFileNamed: \'picturesParaPharo/victoria.png\') asMorph.\r    ventanavictoria extent: 200@100.\r    ventanavictoria position: (200)@(200). "Posiciona la ventana 2 lo más a la derecha y centrada verticalmente"\r \t labelvictoria := TextMorph new.\r    "mensaje de la ventana al iniciar"\r    labelvictoria contents: \'\'.\r    labelvictoria color: Color red.\r    labelvictoria position: (ventanavictoria bounds origin) + (50@100).  "Posiciona el label dentro de la ventana 2"\r    \r    ventanavictoria addMorph: labelvictoria.\r    ventanavictoria openInWorld.\r\t Transcript show: \'GAME OVER\'; cr.\r\t Transcript show: \'El ganador es el jugador:\';show:(atacante nombre); cr.\r\t',			#stamp : 'TiagoBernal 11/24/2024 19:32',			#package : #'Paradigmas 2024'		}	}}